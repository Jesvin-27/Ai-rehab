{"ast":null,"code":"var _jsxFileName = \"/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ExercisePage.css';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posedetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nimport { processChairSquat, resetChairSquat } from '../exercises/ChairSquats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exerciseMap = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls']\n};\nconst ExercisePage = () => {\n  _s();\n  const {\n    type\n  } = useParams();\n  const exercises = exerciseMap[type] || [];\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [feedback, setFeedback] = useState('');\n  const [reps, setReps] = useState(0);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const detectorRef = useRef(null);\n  const rafRef = useRef(null);\n  useEffect(() => {\n    tf.setBackend('webgl');\n    return () => stopScan(); // Cleanup on unmount\n  }, []);\n  const drawKeypoints = poses => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    poses.forEach(pose => {\n      pose.keypoints.forEach(kp => {\n        if (kp.score > 0.4) {\n          ctx.beginPath();\n          ctx.arc(kp.x, kp.y, 5, 0, 2 * Math.PI);\n          ctx.fillStyle = 'lime';\n          ctx.fill();\n        }\n      });\n    });\n  };\n  const runDetection = async () => {\n    var _poses$;\n    if (!detectorRef.current || !videoRef.current) return;\n    const poses = await detectorRef.current.estimatePoses(videoRef.current);\n    drawKeypoints(poses);\n    if ((_poses$ = poses[0]) !== null && _poses$ !== void 0 && _poses$.keypoints && selectedExercise === 'Chair Squats') {\n      const result = processChairSquat(poses[0].keypoints);\n      setFeedback(result.feedback);\n      setReps(result.reps);\n    }\n    rafRef.current = requestAnimationFrame(runDetection);\n  };\n  const startScan = async () => {\n    if (!selectedExercise) return alert('Select an exercise');\n    setIsScanning(true);\n    setFeedback('');\n    setReps(0);\n    resetChairSquat();\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true\n    });\n    videoRef.current.srcObject = stream;\n    videoRef.current.onloadeddata = async () => {\n      videoRef.current.play();\n      detectorRef.current = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n        modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING\n      });\n      runDetection();\n    };\n  };\n  const stopScan = () => {\n    var _videoRef$current, _canvasRef$current;\n    setIsScanning(false);\n    if (rafRef.current) cancelAnimationFrame(rafRef.current);\n    if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n    }\n    resetChairSquat();\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d');\n    ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  };\n  const saveData = () => {\n    console.log('Exercise data saved');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"top-bar\",\n      children: [\"AI-Rehab \\u2013 \", selectedExercise || 'Select Exercise']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"left-panel\",\n        children: exercises.map(exercise => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `exercise-button ${selectedExercise === exercise ? 'active' : ''}`,\n          onClick: () => setSelectedExercise(exercise),\n          disabled: isScanning,\n          children: exercise\n        }, exercise, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"content-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canvas-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            className: \"video-feed\",\n            width: \"640\",\n            height: \"480\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"canvas-overlay\",\n            width: \"640\",\n            height: \"480\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Posture: \", feedback]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Repetitions: \", reps]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn start\",\n            onClick: startScan,\n            disabled: isScanning,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn stop\",\n            onClick: stopScan,\n            disabled: !isScanning,\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn save\",\n            onClick: saveData,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(ExercisePage, \"ivxcsh6hoXAGQjTKO0I/FLOeVKc=\", false, function () {\n  return [useParams];\n});\n_c = ExercisePage;\nexport default ExercisePage;\nvar _c;\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","tf","posedetection","processChairSquat","resetChairSquat","jsxDEV","_jsxDEV","exerciseMap","cardiac","neuro","ortho","ExercisePage","_s","type","exercises","selectedExercise","setSelectedExercise","isScanning","setIsScanning","feedback","setFeedback","reps","setReps","videoRef","canvasRef","detectorRef","rafRef","setBackend","stopScan","drawKeypoints","poses","ctx","current","getContext","clearRect","width","height","forEach","pose","keypoints","kp","score","beginPath","arc","x","y","Math","PI","fillStyle","fill","runDetection","_poses$","estimatePoses","result","requestAnimationFrame","startScan","alert","stream","navigator","mediaDevices","getUserMedia","video","srcObject","onloadeddata","play","createDetector","SupportedModels","MoveNet","modelType","movenet","SINGLEPOSE_LIGHTNING","_videoRef$current","_canvasRef$current","cancelAnimationFrame","getTracks","track","stop","saveData","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","exercise","onClick","disabled","ref","_c","$RefreshReg$"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ExercisePage.css';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posedetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\n\nimport { processChairSquat, resetChairSquat } from '../exercises/ChairSquats';\n\nconst exerciseMap = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls'],\n};\n\nconst ExercisePage = () => {\n  const { type } = useParams();\n  const exercises = exerciseMap[type] || [];\n\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [feedback, setFeedback] = useState('');\n  const [reps, setReps] = useState(0);\n\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const detectorRef = useRef(null);\n  const rafRef = useRef(null);\n\n  useEffect(() => {\n    tf.setBackend('webgl');\n    return () => stopScan(); // Cleanup on unmount\n  }, []);\n\n  const drawKeypoints = (poses) => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    poses.forEach((pose) => {\n      pose.keypoints.forEach((kp) => {\n        if (kp.score > 0.4) {\n          ctx.beginPath();\n          ctx.arc(kp.x, kp.y, 5, 0, 2 * Math.PI);\n          ctx.fillStyle = 'lime';\n          ctx.fill();\n        }\n      });\n    });\n  };\n\n  const runDetection = async () => {\n    if (!detectorRef.current || !videoRef.current) return;\n\n    const poses = await detectorRef.current.estimatePoses(videoRef.current);\n    drawKeypoints(poses);\n\n    if (poses[0]?.keypoints && selectedExercise === 'Chair Squats') {\n      const result = processChairSquat(poses[0].keypoints);\n      setFeedback(result.feedback);\n      setReps(result.reps);\n    }\n\n    rafRef.current = requestAnimationFrame(runDetection);\n  };\n\n  const startScan = async () => {\n    if (!selectedExercise) return alert('Select an exercise');\n    setIsScanning(true);\n    setFeedback('');\n    setReps(0);\n    resetChairSquat();\n\n    const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n    videoRef.current.srcObject = stream;\n\n    videoRef.current.onloadeddata = async () => {\n      videoRef.current.play();\n\n      detectorRef.current = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n        modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING,\n      });\n\n      runDetection();\n    };\n  };\n\n  const stopScan = () => {\n    setIsScanning(false);\n    if (rafRef.current) cancelAnimationFrame(rafRef.current);\n    if (videoRef.current?.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach((track) => track.stop());\n    }\n    resetChairSquat();\n    const ctx = canvasRef.current?.getContext('2d');\n    ctx?.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  };\n\n  const saveData = () => {\n    console.log('Exercise data saved');\n  };\n\n  return (\n    <div className=\"exercise-container\">\n      <header className=\"top-bar\">AI-Rehab – {selectedExercise || 'Select Exercise'}</header>\n      <div className=\"main-layout\">\n        <aside className=\"left-panel\">\n          {exercises.map((exercise) => (\n            <button\n              key={exercise}\n              className={`exercise-button ${selectedExercise === exercise ? 'active' : ''}`}\n              onClick={() => setSelectedExercise(exercise)}\n              disabled={isScanning}\n            >\n              {exercise}\n            </button>\n          ))}\n        </aside>\n\n        <main className=\"content-panel\">\n          <div className=\"canvas-area\">\n            <video ref={videoRef} className=\"video-feed\" width=\"640\" height=\"480\" />\n            <canvas ref={canvasRef} className=\"canvas-overlay\" width=\"640\" height=\"480\" />\n          </div>\n\n          <div className=\"feedback\">\n            <p>Posture: {feedback}</p>\n            <p>Repetitions: {reps}</p>\n          </div>\n\n          <div className=\"controls\">\n            <button className=\"control-btn start\" onClick={startScan} disabled={isScanning}>\n              Start\n            </button>\n            <button className=\"control-btn stop\" onClick={stopScan} disabled={!isScanning}>\n              Stop\n            </button>\n            <button className=\"control-btn save\" onClick={saveData}>\n              Save\n            </button>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default ExercisePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}