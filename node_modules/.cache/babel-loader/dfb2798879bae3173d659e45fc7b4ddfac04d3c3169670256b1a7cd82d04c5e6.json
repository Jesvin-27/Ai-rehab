{"ast":null,"code":"/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Step } from '@tensorflow/tfjs-core';\nimport { UnaryOpType } from '../unary_op_util';\nimport { UnaryOpProgram } from '../unary_op_webgpu';\nexport function step({\n  inputs,\n  attrs,\n  backend\n}) {\n  const {\n    x\n  } = inputs;\n  const program = new UnaryOpProgram(x.shape, UnaryOpType.STEP, 'stepAlpha : f32,');\n  const uniformData = [{\n    type: 'float32',\n    data: [attrs.alpha]\n  }];\n  return backend.runWebGPUProgram(program, [x], x.dtype, uniformData);\n}\nexport const stepConfig = {\n  kernelName: Step,\n  backendName: 'webgpu',\n  kernelFunc: step\n};","map":{"version":3,"names":["Step","UnaryOpType","UnaryOpProgram","step","inputs","attrs","backend","x","program","shape","STEP","uniformData","type","data","alpha","runWebGPUProgram","dtype","stepConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/tfjs-backend-webgpu/src/kernels/Step.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Step, StepAttrs, TensorInfo, UnaryInputs} from '@tensorflow/tfjs-core';\n\nimport {WebGPUBackend} from '../backend_webgpu';\nimport {UnaryOpType} from '../unary_op_util';\nimport {UnaryOpProgram} from '../unary_op_webgpu';\n\nexport function step(\n    {inputs, attrs, backend}:\n        {inputs: UnaryInputs, attrs: StepAttrs, backend: WebGPUBackend}):\n    TensorInfo {\n  const {x} = inputs;\n  const program =\n      new UnaryOpProgram(x.shape, UnaryOpType.STEP, 'stepAlpha : f32,');\n  const uniformData = [{type: 'float32', data: [attrs.alpha]}];\n  return backend.runWebGPUProgram(program, [x], x.dtype, uniformData);\n}\n\nexport const stepConfig: KernelConfig = {\n  kernelName: Step,\n  backendName: 'webgpu',\n  kernelFunc: step as unknown as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,IAAI,QAA2C,uBAAuB;AAGxG,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,cAAc,QAAO,oBAAoB;AAEjD,OAAM,SAAUC,IAAIA,CAChB;EAACC,MAAM;EAAEC,KAAK;EAAEC;AAAO,CAC4C;EAErE,MAAM;IAACC;EAAC,CAAC,GAAGH,MAAM;EAClB,MAAMI,OAAO,GACT,IAAIN,cAAc,CAACK,CAAC,CAACE,KAAK,EAAER,WAAW,CAACS,IAAI,EAAE,kBAAkB,CAAC;EACrE,MAAMC,WAAW,GAAG,CAAC;IAACC,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE,CAACR,KAAK,CAACS,KAAK;EAAC,CAAC,CAAC;EAC5D,OAAOR,OAAO,CAACS,gBAAgB,CAACP,OAAO,EAAE,CAACD,CAAC,CAAC,EAAEA,CAAC,CAACS,KAAK,EAAEL,WAAW,CAAC;AACrE;AAEA,OAAO,MAAMM,UAAU,GAAiB;EACtCC,UAAU,EAAElB,IAAI;EAChBmB,WAAW,EAAE,QAAQ;EACrBC,UAAU,EAAEjB;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}