{"ast":null,"code":"let prevState = 'neutral';\nlet lastSpeakTime = 0;\nexport function resetShoulderRolls() {\n  prevState = 'neutral';\n  lastSpeakTime = 0;\n}\nexport function processShoulderRolls(landmarks) {\n  const now = Date.now();\n  const leftShoulder = landmarks[11]; // x, y, z, visibility\n  const rightShoulder = landmarks[12];\n  if (!leftShoulder || !rightShoulder) {\n    return {\n      speak: 'Shoulders not visible. Align properly with the camera'\n    };\n  }\n\n  // Detect circular movement or lift/drop via delta in y axis\n  const verticalDiff = Math.abs(leftShoulder.y - rightShoulder.y);\n  const motionThreshold = 0.05;\n  if (verticalDiff > motionThreshold && prevState === 'neutral') {\n    prevState = 'rolling';\n    return {\n      speak: 'Good! Keep rolling your shoulders'\n    };\n  }\n  if (verticalDiff < motionThreshold && prevState === 'rolling') {\n    prevState = 'neutral';\n    return {\n      speak: 'One rep completed',\n      rep: 1\n    };\n  }\n  if (now - lastSpeakTime > 5000 && prevState === 'neutral') {\n    lastSpeakTime = now;\n    return {\n      speak: 'Try rolling your shoulders more clearly'\n    };\n  }\n  return null;\n}","map":{"version":3,"names":["prevState","lastSpeakTime","resetShoulderRolls","processShoulderRolls","landmarks","now","Date","leftShoulder","rightShoulder","speak","verticalDiff","Math","abs","y","motionThreshold","rep"],"sources":["/Users/jesvinblazegmail.com/Documents/Ai-rehab/src/exercises/ShoulderRolls.js"],"sourcesContent":["let prevState = 'neutral';\nlet lastSpeakTime = 0;\n\nexport function resetShoulderRolls() {\n  prevState = 'neutral';\n  lastSpeakTime = 0;\n}\n\nexport function processShoulderRolls(landmarks) {\n  const now = Date.now();\n\n  const leftShoulder = landmarks[11]; // x, y, z, visibility\n  const rightShoulder = landmarks[12];\n\n  if (!leftShoulder || !rightShoulder) {\n    return { speak: 'Shoulders not visible. Align properly with the camera' };\n  }\n\n  // Detect circular movement or lift/drop via delta in y axis\n  const verticalDiff = Math.abs(leftShoulder.y - rightShoulder.y);\n  const motionThreshold = 0.05;\n\n  if (verticalDiff > motionThreshold && prevState === 'neutral') {\n    prevState = 'rolling';\n    return { speak: 'Good! Keep rolling your shoulders' };\n  }\n\n  if (verticalDiff < motionThreshold && prevState === 'rolling') {\n    prevState = 'neutral';\n    return { speak: 'One rep completed', rep: 1 };\n  }\n\n  if (now - lastSpeakTime > 5000 && prevState === 'neutral') {\n    lastSpeakTime = now;\n    return { speak: 'Try rolling your shoulders more clearly' };\n  }\n\n  return null;\n}\n"],"mappings":"AAAA,IAAIA,SAAS,GAAG,SAAS;AACzB,IAAIC,aAAa,GAAG,CAAC;AAErB,OAAO,SAASC,kBAAkBA,CAAA,EAAG;EACnCF,SAAS,GAAG,SAAS;EACrBC,aAAa,GAAG,CAAC;AACnB;AAEA,OAAO,SAASE,oBAAoBA,CAACC,SAAS,EAAE;EAC9C,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;EAEtB,MAAME,YAAY,GAAGH,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;EACpC,MAAMI,aAAa,GAAGJ,SAAS,CAAC,EAAE,CAAC;EAEnC,IAAI,CAACG,YAAY,IAAI,CAACC,aAAa,EAAE;IACnC,OAAO;MAAEC,KAAK,EAAE;IAAwD,CAAC;EAC3E;;EAEA;EACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,GAAG,CAACL,YAAY,CAACM,CAAC,GAAGL,aAAa,CAACK,CAAC,CAAC;EAC/D,MAAMC,eAAe,GAAG,IAAI;EAE5B,IAAIJ,YAAY,GAAGI,eAAe,IAAId,SAAS,KAAK,SAAS,EAAE;IAC7DA,SAAS,GAAG,SAAS;IACrB,OAAO;MAAES,KAAK,EAAE;IAAoC,CAAC;EACvD;EAEA,IAAIC,YAAY,GAAGI,eAAe,IAAId,SAAS,KAAK,SAAS,EAAE;IAC7DA,SAAS,GAAG,SAAS;IACrB,OAAO;MAAES,KAAK,EAAE,mBAAmB;MAAEM,GAAG,EAAE;IAAE,CAAC;EAC/C;EAEA,IAAIV,GAAG,GAAGJ,aAAa,GAAG,IAAI,IAAID,SAAS,KAAK,SAAS,EAAE;IACzDC,aAAa,GAAGI,GAAG;IACnB,OAAO;MAAEI,KAAK,EAAE;IAA0C,CAAC;EAC7D;EAEA,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}