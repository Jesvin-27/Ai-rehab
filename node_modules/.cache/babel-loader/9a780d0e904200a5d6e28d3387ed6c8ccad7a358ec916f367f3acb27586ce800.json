{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LRNGrad } from '@tensorflow/tfjs-core';\nimport { LRNGradProgram } from '../lrn_grad_webgpu';\nexport function lrnGrad(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x,\n    y,\n    dy\n  } = inputs;\n  const {\n    depthRadius,\n    bias,\n    alpha,\n    beta\n  } = attrs;\n  const program = new LRNGradProgram(x.shape);\n  const uniformData = [{\n    type: 'int32',\n    data: [depthRadius]\n  }, {\n    type: 'float32',\n    data: [bias]\n  }, {\n    type: 'float32',\n    data: [alpha]\n  }, {\n    type: 'float32',\n    data: [beta]\n  }];\n  const res = backend.runWebGPUProgram(program, [x, y, dy], x.dtype, uniformData);\n  return res;\n}\nexport const lrnGradConfig = {\n  kernelName: LRNGrad,\n  backendName: 'webgpu',\n  kernelFunc: lrnGrad\n};","map":{"version":3,"names":["LRNGrad","LRNGradProgram","lrnGrad","args","inputs","backend","attrs","x","y","dy","depthRadius","bias","alpha","beta","program","shape","uniformData","type","data","res","runWebGPUProgram","dtype","lrnGradConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/tfjs-backend-webgpu/src/kernels/LRNGrad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LRNGrad, LRNGradAttrs, LRNGradInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {WebGPUBackend} from '../backend_webgpu';\nimport {LRNGradProgram} from '../lrn_grad_webgpu';\n\nexport function lrnGrad(\n    args: {inputs: LRNGradInputs, backend: WebGPUBackend, attrs: LRNGradAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, y, dy} = inputs;\n  const {depthRadius, bias, alpha, beta} = attrs;\n\n  const program = new LRNGradProgram(x.shape);\n  const uniformData = [\n    {type: 'int32', data: [depthRadius]}, {type: 'float32', data: [bias]},\n    {type: 'float32', data: [alpha]}, {type: 'float32', data: [beta]}\n  ];\n  const res =\n      backend.runWebGPUProgram(program, [x, y, dy], x.dtype, uniformData);\n\n  return res;\n}\n\nexport const lrnGradConfig: KernelConfig = {\n  kernelName: LRNGrad,\n  backendName: 'webgpu',\n  kernelFunc: lrnGrad as unknown as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,OAAO,QAAgD,uBAAuB;AAGhH,SAAQC,cAAc,QAAO,oBAAoB;AAEjD,OAAM,SAAUC,OAAOA,CACnBC,IAA0E;EAE5E,MAAM;IAACC,MAAM;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGH,IAAI;EACrC,MAAM;IAACI,CAAC;IAAEC,CAAC;IAAEC;EAAE,CAAC,GAAGL,MAAM;EACzB,MAAM;IAACM,WAAW;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAGP,KAAK;EAE9C,MAAMQ,OAAO,GAAG,IAAIb,cAAc,CAACM,CAAC,CAACQ,KAAK,CAAC;EAC3C,MAAMC,WAAW,GAAG,CAClB;IAACC,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,CAACR,WAAW;EAAC,CAAC,EAAE;IAACO,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE,CAACP,IAAI;EAAC,CAAC,EACrE;IAACM,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE,CAACN,KAAK;EAAC,CAAC,EAAE;IAACK,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE,CAACL,IAAI;EAAC,CAAC,CAClE;EACD,MAAMM,GAAG,GACLd,OAAO,CAACe,gBAAgB,CAACN,OAAO,EAAE,CAACP,CAAC,EAAEC,CAAC,EAAEC,EAAE,CAAC,EAAEF,CAAC,CAACc,KAAK,EAAEL,WAAW,CAAC;EAEvE,OAAOG,GAAG;AACZ;AAEA,OAAO,MAAMG,aAAa,GAAiB;EACzCC,UAAU,EAAEvB,OAAO;EACnBwB,WAAW,EAAE,QAAQ;EACrBC,UAAU,EAAEvB;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}