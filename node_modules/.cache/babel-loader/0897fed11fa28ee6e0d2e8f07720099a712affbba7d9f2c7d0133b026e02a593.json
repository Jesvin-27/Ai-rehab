{"ast":null,"code":"var _jsxFileName = \"/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/StatsPage.js\",\n  _s = $RefreshSig$();\n// src/pages/StatsPage.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { db } from '../firebase';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend);\nconst StatsPage = () => {\n  _s();\n  const {\n    exerciseName\n  } = useParams();\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const user = JSON.parse(localStorage.getItem('user')); // or get from auth.currentUser\n        if (!(user !== null && user !== void 0 && user.uid)) return;\n        const q = query(collection(db, 'exerciseStats'), where('uid', '==', user.uid), where('exercise', '==', exerciseName));\n        const snapshot = await getDocs(q);\n        const dataByDate = {};\n        snapshot.forEach(doc => {\n          const {\n            date,\n            reps\n          } = doc.data();\n          dataByDate[date] = (dataByDate[date] || 0) + reps;\n        });\n        const sortedDates = Object.keys(dataByDate).sort();\n        const repsArray = sortedDates.map(date => dataByDate[date]);\n        setChartData({\n          labels: sortedDates,\n          datasets: [{\n            label: `${exerciseName} Reps`,\n            data: repsArray,\n            fill: false,\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0.2\n          }]\n        });\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching stats:', error);\n        setLoading(false);\n      }\n    };\n    fetchStats();\n  }, [exerciseName]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading progress data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 23\n  }, this);\n  if (!chartData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"No data found for \", exerciseName, \".\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '90%',\n      margin: '40px auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [exerciseName, \" \\u2013 Progress Chart\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(StatsPage, \"JiIotUlPV1U8Sh+8dry6e5SIc90=\", false, function () {\n  return [useParams];\n});\n_c = StatsPage;\nexport default StatsPage;\nvar _c;\n$RefreshReg$(_c, \"StatsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","db","collection","query","where","getDocs","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","StatsPage","_s","exerciseName","chartData","setChartData","loading","setLoading","fetchStats","user","JSON","parse","localStorage","getItem","uid","q","snapshot","dataByDate","forEach","doc","date","reps","data","sortedDates","Object","keys","sort","repsArray","map","labels","datasets","label","fill","borderColor","tension","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","margin","_c","$RefreshReg$"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/StatsPage.js"],"sourcesContent":["// src/pages/StatsPage.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { db } from '../firebase';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend);\n\nconst StatsPage = () => {\n  const { exerciseName } = useParams();\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const user = JSON.parse(localStorage.getItem('user')); // or get from auth.currentUser\n        if (!user?.uid) return;\n\n        const q = query(\n          collection(db, 'exerciseStats'),\n          where('uid', '==', user.uid),\n          where('exercise', '==', exerciseName)\n        );\n\n        const snapshot = await getDocs(q);\n        const dataByDate = {};\n\n        snapshot.forEach(doc => {\n          const { date, reps } = doc.data();\n          dataByDate[date] = (dataByDate[date] || 0) + reps;\n        });\n\n        const sortedDates = Object.keys(dataByDate).sort();\n        const repsArray = sortedDates.map(date => dataByDate[date]);\n\n        setChartData({\n          labels: sortedDates,\n          datasets: [\n            {\n              label: `${exerciseName} Reps`,\n              data: repsArray,\n              fill: false,\n              borderColor: 'rgb(75, 192, 192)',\n              tension: 0.2,\n            },\n          ],\n        });\n\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching stats:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchStats();\n  }, [exerciseName]);\n\n  if (loading) return <div>Loading progress data...</div>;\n  if (!chartData) return <div>No data found for {exerciseName}.</div>;\n\n  return (\n    <div style={{ width: '90%', margin: '40px auto' }}>\n      <h2>{exerciseName} â€“ Progress Chart</h2>\n      <Line data={chartData} />\n    </div>\n  );\n};\n\nexport default StatsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}