{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNativeBackpropInput } from '@tensorflow/tfjs-core';\nimport { DepthwiseConv2DDerInputProgram } from '../conv_backprop_depthwise_webgpu';\nexport function depthwiseConv2dNativeBackpropInput(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    dy,\n    filter\n  } = inputs;\n  const {\n    strides,\n    dilations,\n    pad,\n    dimRoundingMode,\n    inputShape\n  } = attrs;\n  const convInfo = backend_util.computeConv2DInfo(inputShape, filter.shape, strides, dilations, pad, dimRoundingMode, true /* depthwise */);\n  const program = new DepthwiseConv2DDerInputProgram(convInfo);\n  const uniformData = [{\n    type: 'int32',\n    data: [convInfo.strideHeight, convInfo.strideWidth]\n  }, {\n    type: 'int32',\n    data: [convInfo.filterHeight - 1 - convInfo.padInfo.top, convInfo.filterWidth - 1 - convInfo.padInfo.left]\n  }, {\n    type: 'int32',\n    data: [convInfo.filterHeight, convInfo.filterWidth]\n  }, {\n    type: 'int32',\n    data: [convInfo.outHeight]\n  }, {\n    type: 'int32',\n    data: [convInfo.outWidth]\n  }, {\n    type: 'int32',\n    data: [convInfo.outChannels / convInfo.inChannels]\n  }];\n  return backend.runWebGPUProgram(program, [dy, filter], dy.dtype, uniformData);\n}\nexport const depthwiseConv2dNativeBackpropInputConfig = {\n  kernelName: DepthwiseConv2dNativeBackpropInput,\n  backendName: 'webgpu',\n  kernelFunc: depthwiseConv2dNativeBackpropInput\n};","map":{"version":3,"names":["backend_util","DepthwiseConv2dNativeBackpropInput","DepthwiseConv2DDerInputProgram","depthwiseConv2dNativeBackpropInput","args","inputs","backend","attrs","dy","filter","strides","dilations","pad","dimRoundingMode","inputShape","convInfo","computeConv2DInfo","shape","program","uniformData","type","data","strideHeight","strideWidth","filterHeight","padInfo","top","filterWidth","left","outHeight","outWidth","outChannels","inChannels","runWebGPUProgram","dtype","depthwiseConv2dNativeBackpropInputConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/tfjs-backend-webgpu/src/kernels/DepthwiseConv2dNativeBackpropInput.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DepthwiseConv2dNativeBackpropInput, DepthwiseConv2dNativeBackpropInputAttrs, DepthwiseConv2dNativeBackpropInputInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {WebGPUBackend} from '../backend_webgpu';\nimport {DepthwiseConv2DDerInputProgram} from '../conv_backprop_depthwise_webgpu';\n\nexport function depthwiseConv2dNativeBackpropInput(args: {\n  inputs: DepthwiseConv2dNativeBackpropInputInputs,\n  attrs: DepthwiseConv2dNativeBackpropInputAttrs,\n  backend: WebGPUBackend\n}) {\n  const {inputs, backend, attrs} = args;\n  const {dy, filter} = inputs;\n  const {strides, dilations, pad, dimRoundingMode, inputShape} = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      inputShape, filter.shape as [number, number, number, number], strides,\n      dilations, pad, dimRoundingMode, true /* depthwise */);\n\n  const program = new DepthwiseConv2DDerInputProgram(convInfo);\n  const uniformData = [\n    {type: 'int32', data: [convInfo.strideHeight, convInfo.strideWidth]}, {\n      type: 'int32',\n      data: [\n        convInfo.filterHeight - 1 - convInfo.padInfo.top,\n        convInfo.filterWidth - 1 - convInfo.padInfo.left\n      ]\n    },\n    {type: 'int32', data: [convInfo.filterHeight, convInfo.filterWidth]},\n    {type: 'int32', data: [convInfo.outHeight]},\n    {type: 'int32', data: [convInfo.outWidth]},\n    {type: 'int32', data: [convInfo.outChannels / convInfo.inChannels]}\n  ];\n  return backend.runWebGPUProgram(program, [dy, filter], dy.dtype, uniformData);\n}\n\nexport const depthwiseConv2dNativeBackpropInputConfig: KernelConfig = {\n  kernelName: DepthwiseConv2dNativeBackpropInput,\n  backendName: 'webgpu',\n  kernelFunc: depthwiseConv2dNativeBackpropInput as unknown as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,EAAEC,kCAAkC,QAAoH,uBAAuB;AAGnM,SAAQC,8BAA8B,QAAO,mCAAmC;AAEhF,OAAM,SAAUC,kCAAkCA,CAACC,IAIlD;EACC,MAAM;IAACC,MAAM;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGH,IAAI;EACrC,MAAM;IAACI,EAAE;IAAEC;EAAM,CAAC,GAAGJ,MAAM;EAC3B,MAAM;IAACK,OAAO;IAAEC,SAAS;IAAEC,GAAG;IAAEC,eAAe;IAAEC;EAAU,CAAC,GAAGP,KAAK;EAEpE,MAAMQ,QAAQ,GAAGf,YAAY,CAACgB,iBAAiB,CAC3CF,UAAU,EAAEL,MAAM,CAACQ,KAAyC,EAAEP,OAAO,EACrEC,SAAS,EAAEC,GAAG,EAAEC,eAAe,EAAE,IAAI,CAAC,eAAe,CAAC;EAE1D,MAAMK,OAAO,GAAG,IAAIhB,8BAA8B,CAACa,QAAQ,CAAC;EAC5D,MAAMI,WAAW,GAAG,CAClB;IAACC,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,CAACN,QAAQ,CAACO,YAAY,EAAEP,QAAQ,CAACQ,WAAW;EAAC,CAAC,EAAE;IACpEH,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,CACJN,QAAQ,CAACS,YAAY,GAAG,CAAC,GAAGT,QAAQ,CAACU,OAAO,CAACC,GAAG,EAChDX,QAAQ,CAACY,WAAW,GAAG,CAAC,GAAGZ,QAAQ,CAACU,OAAO,CAACG,IAAI;GAEnD,EACD;IAACR,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,CAACN,QAAQ,CAACS,YAAY,EAAET,QAAQ,CAACY,WAAW;EAAC,CAAC,EACpE;IAACP,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,CAACN,QAAQ,CAACc,SAAS;EAAC,CAAC,EAC3C;IAACT,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,CAACN,QAAQ,CAACe,QAAQ;EAAC,CAAC,EAC1C;IAACV,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,CAACN,QAAQ,CAACgB,WAAW,GAAGhB,QAAQ,CAACiB,UAAU;EAAC,CAAC,CACpE;EACD,OAAO1B,OAAO,CAAC2B,gBAAgB,CAACf,OAAO,EAAE,CAACV,EAAE,EAAEC,MAAM,CAAC,EAAED,EAAE,CAAC0B,KAAK,EAAEf,WAAW,CAAC;AAC/E;AAEA,OAAO,MAAMgB,wCAAwC,GAAiB;EACpEC,UAAU,EAAEnC,kCAAkC;EAC9CoC,WAAW,EAAE,QAAQ;EACrBC,UAAU,EAAEnC;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}