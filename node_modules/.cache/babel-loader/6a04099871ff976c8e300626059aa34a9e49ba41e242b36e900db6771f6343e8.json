{"ast":null,"code":"let prevState = 'standing';\nlet lastSpeakTime = 0;\nlet cooldown = false;\nexport function resetChairSquat() {\n  prevState = 'standing';\n  lastSpeakTime = 0;\n  cooldown = false;\n}\nfunction getAngle(a, b, c) {\n  const ab = {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n  const cb = {\n    x: c.x - b.x,\n    y: c.y - b.y\n  };\n  const dot = ab.x * cb.x + ab.y * cb.y;\n  const magAB = Math.sqrt(ab.x ** 2 + ab.y ** 2);\n  const magCB = Math.sqrt(cb.x ** 2 + cb.y ** 2);\n  const cosineAngle = dot / (magAB * magCB);\n  return Math.acos(Math.max(-1, Math.min(1, cosineAngle))) * (180 / Math.PI);\n}\nexport function processChairSquat(landmarks) {\n  const now = Date.now();\n  const leftHip = landmarks[23];\n  const leftKnee = landmarks[25];\n  const leftAnkle = landmarks[27];\n  const rightHip = landmarks[24];\n  const rightKnee = landmarks[26];\n  const rightAnkle = landmarks[28];\n  if (!leftHip || !leftKnee || !leftAnkle || !rightHip || !rightKnee || !rightAnkle) {\n    return {\n      speak: 'Please ensure your full body is visible to the camera.'\n    };\n  }\n  const leftAngle = getAngle(leftHip, leftKnee, leftAnkle);\n  const rightAngle = getAngle(rightHip, rightKnee, rightAnkle);\n  const avgAngle = (leftAngle + rightAngle) / 2;\n  if (avgAngle < 100 && prevState === 'standing') {\n    prevState = 'squatting';\n    cooldown = false;\n    return {\n      speak: 'Good squat form!'\n    };\n  }\n  if (avgAngle > 160 && prevState === 'squatting' && !cooldown) {\n    prevState = 'standing';\n    cooldown = true;\n    return {\n      speak: 'Rep complete',\n      rep: 1\n    };\n  }\n\n  // Optional correctional feedback every 5 seconds\n  if (avgAngle > 140 && avgAngle < 160 && now - lastSpeakTime > 5000) {\n    lastSpeakTime = now;\n    return {\n      speak: 'Try squatting deeper'\n    };\n  }\n  return null;\n}","map":{"version":3,"names":["prevState","lastSpeakTime","cooldown","resetChairSquat","getAngle","a","b","c","ab","x","y","cb","dot","magAB","Math","sqrt","magCB","cosineAngle","acos","max","min","PI","processChairSquat","landmarks","now","Date","leftHip","leftKnee","leftAnkle","rightHip","rightKnee","rightAnkle","speak","leftAngle","rightAngle","avgAngle","rep"],"sources":["/Users/jesvinblazegmail.com/Documents/Ai-rehab/src/exercises/ChairSquats.js"],"sourcesContent":["let prevState = 'standing';\nlet lastSpeakTime = 0;\nlet cooldown = false;\n\nexport function resetChairSquat() {\n  prevState = 'standing';\n  lastSpeakTime = 0;\n  cooldown = false;\n}\n\nfunction getAngle(a, b, c) {\n  const ab = { x: a.x - b.x, y: a.y - b.y };\n  const cb = { x: c.x - b.x, y: c.y - b.y };\n  const dot = ab.x * cb.x + ab.y * cb.y;\n  const magAB = Math.sqrt(ab.x ** 2 + ab.y ** 2);\n  const magCB = Math.sqrt(cb.x ** 2 + cb.y ** 2);\n  const cosineAngle = dot / (magAB * magCB);\n  return Math.acos(Math.max(-1, Math.min(1, cosineAngle))) * (180 / Math.PI);\n}\n\nexport function processChairSquat(landmarks) {\n  const now = Date.now();\n\n  const leftHip = landmarks[23];\n  const leftKnee = landmarks[25];\n  const leftAnkle = landmarks[27];\n  const rightHip = landmarks[24];\n  const rightKnee = landmarks[26];\n  const rightAnkle = landmarks[28];\n\n  if (!leftHip || !leftKnee || !leftAnkle || !rightHip || !rightKnee || !rightAnkle) {\n    return { speak: 'Please ensure your full body is visible to the camera.' };\n  }\n\n  const leftAngle = getAngle(leftHip, leftKnee, leftAnkle);\n  const rightAngle = getAngle(rightHip, rightKnee, rightAnkle);\n  const avgAngle = (leftAngle + rightAngle) / 2;\n\n  if (avgAngle < 100 && prevState === 'standing') {\n    prevState = 'squatting';\n    cooldown = false;\n    return { speak: 'Good squat form!' };\n  }\n\n  if (avgAngle > 160 && prevState === 'squatting' && !cooldown) {\n    prevState = 'standing';\n    cooldown = true;\n    return { speak: 'Rep complete', rep: 1 };\n  }\n\n  // Optional correctional feedback every 5 seconds\n  if (avgAngle > 140 && avgAngle < 160 && now - lastSpeakTime > 5000) {\n    lastSpeakTime = now;\n    return { speak: 'Try squatting deeper' };\n  }\n\n  return null;\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}