{"ast":null,"code":"// src/exercises/ChairSquats.js\nlet lastPosture = 'standing';\nlet repCount = 0;\nlet feedback = 'standing';\nlet isSpeaking = false;\nfunction speak(text) {\n  if (isSpeaking) return;\n  const synth = window.speechSynthesis;\n  const utterance = new SpeechSynthesisUtterance(text);\n  isSpeaking = true;\n  synth.speak(utterance);\n  utterance.onend = () => {\n    isSpeaking = false;\n  };\n}\nexport function processChairSquat(keypoints) {\n  const keypointMap = {};\n  keypoints.forEach(kp => {\n    keypointMap[kp.name] = kp;\n  });\n  const leftHip = keypointMap['left_hip'];\n  const rightHip = keypointMap['right_hip'];\n  const leftKnee = keypointMap['left_knee'];\n  const rightKnee = keypointMap['right_knee'];\n  if (!leftHip || !rightHip || !leftKnee || !rightKnee) return {\n    feedback,\n    repCount\n  };\n  const avgHipY = (leftHip.y + rightHip.y) / 2;\n  const avgKneeY = (leftKnee.y + rightKnee.y) / 2;\n  const isSquatting = avgHipY > avgKneeY + 20;\n  if (isSquatting && lastPosture === 'standing') {\n    lastPosture = 'squatting';\n    feedback = 'squatting';\n    speak('Good squat. Hold it.');\n  } else if (!isSquatting && lastPosture === 'squatting') {\n    lastPosture = 'standing';\n    feedback = 'standing';\n    repCount++;\n    speak(`Nice rep. Total ${repCount}`);\n  } else if (!isSquatting && lastPosture === 'standing') {\n    feedback = 'standing';\n  } else if (isSquatting && lastPosture === 'squatting') {\n    feedback = 'squatting';\n  } else {\n    feedback = 'Adjust posture';\n    speak('Adjust your posture');\n  }\n  return {\n    feedback,\n    repCount\n  };\n}\nexport function resetChairSquat() {\n  lastPosture = 'standing';\n  repCount = 0;\n  feedback = 'standing';\n}","map":{"version":3,"names":["lastPosture","repCount","feedback","isSpeaking","speak","text","synth","window","speechSynthesis","utterance","SpeechSynthesisUtterance","onend","processChairSquat","keypoints","keypointMap","forEach","kp","name","leftHip","rightHip","leftKnee","rightKnee","avgHipY","y","avgKneeY","isSquatting","resetChairSquat"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/exercises/ChairSquats.js"],"sourcesContent":["// src/exercises/ChairSquats.js\nlet lastPosture = 'standing';\nlet repCount = 0;\nlet feedback = 'standing';\nlet isSpeaking = false;\n\nfunction speak(text) {\n  if (isSpeaking) return;\n\n  const synth = window.speechSynthesis;\n  const utterance = new SpeechSynthesisUtterance(text);\n  isSpeaking = true;\n  synth.speak(utterance);\n  utterance.onend = () => {\n    isSpeaking = false;\n  };\n}\n\nexport function processChairSquat(keypoints) {\n  const keypointMap = {};\n  keypoints.forEach(kp => {\n    keypointMap[kp.name] = kp;\n  });\n\n  const leftHip = keypointMap['left_hip'];\n  const rightHip = keypointMap['right_hip'];\n  const leftKnee = keypointMap['left_knee'];\n  const rightKnee = keypointMap['right_knee'];\n\n  if (!leftHip || !rightHip || !leftKnee || !rightKnee) return { feedback, repCount };\n\n  const avgHipY = (leftHip.y + rightHip.y) / 2;\n  const avgKneeY = (leftKnee.y + rightKnee.y) / 2;\n\n  const isSquatting = avgHipY > avgKneeY + 20;\n\n  if (isSquatting && lastPosture === 'standing') {\n    lastPosture = 'squatting';\n    feedback = 'squatting';\n    speak('Good squat. Hold it.');\n  } else if (!isSquatting && lastPosture === 'squatting') {\n    lastPosture = 'standing';\n    feedback = 'standing';\n    repCount++;\n    speak(`Nice rep. Total ${repCount}`);\n  } else if (!isSquatting && lastPosture === 'standing') {\n    feedback = 'standing';\n  } else if (isSquatting && lastPosture === 'squatting') {\n    feedback = 'squatting';\n  } else {\n    feedback = 'Adjust posture';\n    speak('Adjust your posture');\n  }\n\n  return { feedback, repCount };\n}\n\nexport function resetChairSquat() {\n  lastPosture = 'standing';\n  repCount = 0;\n  feedback = 'standing';\n}\n"],"mappings":"AAAA;AACA,IAAIA,WAAW,GAAG,UAAU;AAC5B,IAAIC,QAAQ,GAAG,CAAC;AAChB,IAAIC,QAAQ,GAAG,UAAU;AACzB,IAAIC,UAAU,GAAG,KAAK;AAEtB,SAASC,KAAKA,CAACC,IAAI,EAAE;EACnB,IAAIF,UAAU,EAAE;EAEhB,MAAMG,KAAK,GAAGC,MAAM,CAACC,eAAe;EACpC,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACL,IAAI,CAAC;EACpDF,UAAU,GAAG,IAAI;EACjBG,KAAK,CAACF,KAAK,CAACK,SAAS,CAAC;EACtBA,SAAS,CAACE,KAAK,GAAG,MAAM;IACtBR,UAAU,GAAG,KAAK;EACpB,CAAC;AACH;AAEA,OAAO,SAASS,iBAAiBA,CAACC,SAAS,EAAE;EAC3C,MAAMC,WAAW,GAAG,CAAC,CAAC;EACtBD,SAAS,CAACE,OAAO,CAACC,EAAE,IAAI;IACtBF,WAAW,CAACE,EAAE,CAACC,IAAI,CAAC,GAAGD,EAAE;EAC3B,CAAC,CAAC;EAEF,MAAME,OAAO,GAAGJ,WAAW,CAAC,UAAU,CAAC;EACvC,MAAMK,QAAQ,GAAGL,WAAW,CAAC,WAAW,CAAC;EACzC,MAAMM,QAAQ,GAAGN,WAAW,CAAC,WAAW,CAAC;EACzC,MAAMO,SAAS,GAAGP,WAAW,CAAC,YAAY,CAAC;EAE3C,IAAI,CAACI,OAAO,IAAI,CAACC,QAAQ,IAAI,CAACC,QAAQ,IAAI,CAACC,SAAS,EAAE,OAAO;IAAEnB,QAAQ;IAAED;EAAS,CAAC;EAEnF,MAAMqB,OAAO,GAAG,CAACJ,OAAO,CAACK,CAAC,GAAGJ,QAAQ,CAACI,CAAC,IAAI,CAAC;EAC5C,MAAMC,QAAQ,GAAG,CAACJ,QAAQ,CAACG,CAAC,GAAGF,SAAS,CAACE,CAAC,IAAI,CAAC;EAE/C,MAAME,WAAW,GAAGH,OAAO,GAAGE,QAAQ,GAAG,EAAE;EAE3C,IAAIC,WAAW,IAAIzB,WAAW,KAAK,UAAU,EAAE;IAC7CA,WAAW,GAAG,WAAW;IACzBE,QAAQ,GAAG,WAAW;IACtBE,KAAK,CAAC,sBAAsB,CAAC;EAC/B,CAAC,MAAM,IAAI,CAACqB,WAAW,IAAIzB,WAAW,KAAK,WAAW,EAAE;IACtDA,WAAW,GAAG,UAAU;IACxBE,QAAQ,GAAG,UAAU;IACrBD,QAAQ,EAAE;IACVG,KAAK,CAAC,mBAAmBH,QAAQ,EAAE,CAAC;EACtC,CAAC,MAAM,IAAI,CAACwB,WAAW,IAAIzB,WAAW,KAAK,UAAU,EAAE;IACrDE,QAAQ,GAAG,UAAU;EACvB,CAAC,MAAM,IAAIuB,WAAW,IAAIzB,WAAW,KAAK,WAAW,EAAE;IACrDE,QAAQ,GAAG,WAAW;EACxB,CAAC,MAAM;IACLA,QAAQ,GAAG,gBAAgB;IAC3BE,KAAK,CAAC,qBAAqB,CAAC;EAC9B;EAEA,OAAO;IAAEF,QAAQ;IAAED;EAAS,CAAC;AAC/B;AAEA,OAAO,SAASyB,eAAeA,CAAA,EAAG;EAChC1B,WAAW,GAAG,UAAU;EACxBC,QAAQ,GAAG,CAAC;EACZC,QAAQ,GAAG,UAAU;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}