{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Reshape, util } from '@tensorflow/tfjs-core';\nexport function reshape(args) {\n  const {\n    inputs,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    shape\n  } = attrs;\n  const xSize = util.sizeFromShape(x.shape);\n  const $shape = util.inferFromImplicitShape(shape, xSize);\n  const $xSize = util.sizeFromShape($shape);\n  util.assert(xSize === $xSize, () => `The new shape (${$shape}) has ${$xSize} elements and the old ` + `shape (${x.shape}) has ${xSize} elements. The new shape and old ` + `shape must have the same number of elements.`);\n  // Backend needs to track refCount for the dataId for reshape op\n  args.backend.incRef(x.dataId);\n  return {\n    dataId: x.dataId,\n    shape: $shape,\n    dtype: x.dtype\n  };\n}\nexport const reshapeConfig = {\n  kernelName: Reshape,\n  backendName: 'webgpu',\n  kernelFunc: reshape\n};","map":{"version":3,"names":["Reshape","util","reshape","args","inputs","attrs","x","shape","xSize","sizeFromShape","$shape","inferFromImplicitShape","$xSize","assert","backend","incRef","dataId","dtype","reshapeConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/tfjs-backend-webgpu/src/kernels/Reshape.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Reshape, ReshapeAttrs, ReshapeInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {WebGPUBackend} from '../backend_webgpu';\n\nexport function reshape(\n    args: {inputs: ReshapeInputs, backend: WebGPUBackend, attrs: ReshapeAttrs}):\n    TensorInfo {\n  const {inputs, attrs} = args;\n  const {x} = inputs;\n  const {shape} = attrs;\n\n  const xSize = util.sizeFromShape(x.shape);\n  const $shape = util.inferFromImplicitShape(shape, xSize);\n  const $xSize = util.sizeFromShape($shape);\n\n  util.assert(\n      xSize === $xSize,\n      () => `The new shape (${$shape}) has ${$xSize} elements and the old ` +\n          `shape (${x.shape}) has ${xSize} elements. The new shape and old ` +\n          `shape must have the same number of elements.`);\n\n  // Backend needs to track refCount for the dataId for reshape op\n  args.backend.incRef(x.dataId);\n  return {dataId: x.dataId, shape: $shape, dtype: x.dtype};\n}\n\nexport const reshapeConfig: KernelConfig = {\n  kernelName: Reshape,\n  backendName: 'webgpu',\n  kernelFunc: reshape as unknown as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,OAAO,EAA2CC,IAAI,QAAO,uBAAuB;AAItH,OAAM,SAAUC,OAAOA,CACnBC,IAA0E;EAE5E,MAAM;IAACC,MAAM;IAAEC;EAAK,CAAC,GAAGF,IAAI;EAC5B,MAAM;IAACG;EAAC,CAAC,GAAGF,MAAM;EAClB,MAAM;IAACG;EAAK,CAAC,GAAGF,KAAK;EAErB,MAAMG,KAAK,GAAGP,IAAI,CAACQ,aAAa,CAACH,CAAC,CAACC,KAAK,CAAC;EACzC,MAAMG,MAAM,GAAGT,IAAI,CAACU,sBAAsB,CAACJ,KAAK,EAAEC,KAAK,CAAC;EACxD,MAAMI,MAAM,GAAGX,IAAI,CAACQ,aAAa,CAACC,MAAM,CAAC;EAEzCT,IAAI,CAACY,MAAM,CACPL,KAAK,KAAKI,MAAM,EAChB,MAAM,kBAAkBF,MAAM,SAASE,MAAM,wBAAwB,GACjE,UAAUN,CAAC,CAACC,KAAK,SAASC,KAAK,mCAAmC,GAClE,8CAA8C,CAAC;EAEvD;EACAL,IAAI,CAACW,OAAO,CAACC,MAAM,CAACT,CAAC,CAACU,MAAM,CAAC;EAC7B,OAAO;IAACA,MAAM,EAAEV,CAAC,CAACU,MAAM;IAAET,KAAK,EAAEG,MAAM;IAAEO,KAAK,EAAEX,CAAC,CAACW;EAAK,CAAC;AAC1D;AAEA,OAAO,MAAMC,aAAa,GAAiB;EACzCC,UAAU,EAAEnB,OAAO;EACnBoB,WAAW,EAAE,QAAQ;EACrBC,UAAU,EAAEnB;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}