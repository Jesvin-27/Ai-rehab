{"ast":null,"code":"var _jsxFileName = \"/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ExercisePage.css';\nimport * as pose from '@mediapipe/pose';\nimport { Camera } from '@mediapipe/camera_utils';\nimport { processChairSquat, resetChairSquat } from '../exercises/ChairSquats';\nimport { processArmCircles, resetArmCircles } from '../exercises/ArmCircles';\nimport { processLegRaises, resetLegRaises } from '../exercises/LegRaises';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exerciseMap = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls'],\n  physio: ['Arm Circles', 'Shoulder Rolls', 'Hydration Tips']\n};\nconst logicMap = {\n  'Chair Squats': {\n    process: processChairSquat,\n    reset: resetChairSquat\n  },\n  'Arm Circles': {\n    process: processArmCircles,\n    reset: resetArmCircles\n  },\n  'Leg Raise': {\n    process: processLegRaises,\n    reset: resetLegRaises\n  }\n};\nconst ExercisePage = () => {\n  _s();\n  const {\n    type\n  } = useParams();\n  const exercises = exerciseMap[type] || [];\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const cameraRef = useRef(null);\n  const poseRef = useRef(null);\n  const synthRef = useRef(window.speechSynthesis);\n  const lastSpokenRef = useRef('');\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [repCount, setRepCount] = useState(0);\n  useEffect(() => {\n    return () => stopScan();\n  }, []);\n  const speak = msg => {\n    if (!msg || msg === lastSpokenRef.current) return;\n    if (!synthRef.current) return;\n    synthRef.current.cancel();\n    const utter = new SpeechSynthesisUtterance(msg);\n    synthRef.current.speak(utter);\n    lastSpokenRef.current = msg;\n  };\n  const onPoseResults = results => {\n    const landmarks = results.poseLandmarks;\n    if (!landmarks || !selectedExercise) return;\n    drawKeypoints(landmarks);\n    const {\n      process\n    } = logicMap[selectedExercise] || {};\n    if (process) {\n      const feedback = process(landmarks); // keypoints from MediaPipe\n      if (feedback !== null && feedback !== void 0 && feedback.speak) speak(feedback.speak);\n      if (feedback !== null && feedback !== void 0 && feedback.rep) setRepCount(prev => prev + 1);\n    }\n  };\n  const drawKeypoints = landmarks => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    landmarks.forEach(point => {\n      const {\n        x,\n        y,\n        visibility\n      } = point;\n      if (visibility > 0.5) {\n        ctx.beginPath();\n        ctx.arc(x * canvas.width, y * canvas.height, 5, 0, 2 * Math.PI);\n        ctx.fillStyle = 'lime';\n        ctx.fill();\n      }\n    });\n  };\n  const startScan = async () => {\n    var _logicMap$selectedExe;\n    if (!selectedExercise) return alert('Please select an exercise!');\n    stopScan(); // Reset previous if any\n    setRepCount(0);\n    setIsScanning(true);\n    speak(`Starting ${selectedExercise}`);\n    if ((_logicMap$selectedExe = logicMap[selectedExercise]) !== null && _logicMap$selectedExe !== void 0 && _logicMap$selectedExe.reset) logicMap[selectedExercise].reset();\n    const poseDetector = new pose.Pose({\n      locateFile: file => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`\n    });\n    poseDetector.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: false,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n    poseDetector.onResults(onPoseResults);\n    poseRef.current = poseDetector;\n    cameraRef.current = new Camera(videoRef.current, {\n      onFrame: async () => {\n        await poseDetector.send({\n          image: videoRef.current\n        });\n      },\n      width: 640,\n      height: 480\n    });\n    cameraRef.current.start();\n  };\n  const stopScan = () => {\n    var _canvasRef$current;\n    setIsScanning(false);\n    if (cameraRef.current) {\n      cameraRef.current.stop();\n      cameraRef.current = null;\n    }\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d');\n    ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    speak('Scan stopped');\n  };\n  const saveData = () => {\n    speak('Data saved');\n    console.log('Saved reps:', repCount);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"top-bar\",\n      children: [\"AI-Rehab \\u2013 \", selectedExercise || 'Select Exercise', \" | Reps: \", repCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"left-panel\",\n        children: exercises.map(exercise => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `exercise-button ${selectedExercise === exercise ? 'active' : ''}`,\n          onClick: () => {\n            setSelectedExercise(exercise);\n            setRepCount(0);\n            stopScan();\n          },\n          children: exercise\n        }, exercise, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"content-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canvas-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            className: \"video-feed\",\n            width: \"640\",\n            height: \"480\",\n            playsInline: true,\n            muted: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"canvas-overlay\",\n            width: \"640\",\n            height: \"480\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn start\",\n            onClick: startScan,\n            disabled: isScanning,\n            children: \"Start Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn stop\",\n            onClick: stopScan,\n            disabled: !isScanning,\n            children: \"Stop Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn save\",\n            onClick: saveData,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(ExercisePage, \"SkuDFqp+DDQOoeoTYQBrEBY9Zb4=\", false, function () {\n  return [useParams];\n});\n_c = ExercisePage;\nexport default ExercisePage;\nvar _c;\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useParams","pose","Camera","processChairSquat","resetChairSquat","processArmCircles","resetArmCircles","processLegRaises","resetLegRaises","jsxDEV","_jsxDEV","exerciseMap","cardiac","neuro","ortho","physio","logicMap","process","reset","ExercisePage","_s","type","exercises","videoRef","canvasRef","cameraRef","poseRef","synthRef","window","speechSynthesis","lastSpokenRef","selectedExercise","setSelectedExercise","isScanning","setIsScanning","repCount","setRepCount","stopScan","speak","msg","current","cancel","utter","SpeechSynthesisUtterance","onPoseResults","results","landmarks","poseLandmarks","drawKeypoints","feedback","rep","prev","canvas","ctx","getContext","clearRect","width","height","forEach","point","x","y","visibility","beginPath","arc","Math","PI","fillStyle","fill","startScan","_logicMap$selectedExe","alert","poseDetector","Pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","enableSegmentation","minDetectionConfidence","minTrackingConfidence","onResults","onFrame","send","image","start","_canvasRef$current","stop","saveData","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","exercise","onClick","ref","playsInline","muted","disabled","_c","$RefreshReg$"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ExercisePage.css';\nimport * as pose from '@mediapipe/pose';\nimport { Camera } from '@mediapipe/camera_utils';\n\nimport { processChairSquat, resetChairSquat } from '../exercises/ChairSquats';\nimport { processArmCircles, resetArmCircles } from '../exercises/ArmCircles';\nimport { processLegRaises, resetLegRaises } from '../exercises/LegRaises';\n\nconst exerciseMap = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls'],\n  physio: ['Arm Circles', 'Shoulder Rolls', 'Hydration Tips'],\n};\n\nconst logicMap = {\n  'Chair Squats': { process: processChairSquat, reset: resetChairSquat },\n  'Arm Circles': { process: processArmCircles, reset: resetArmCircles },\n  'Leg Raise': { process: processLegRaises, reset: resetLegRaises },\n};\n\nconst ExercisePage = () => {\n  const { type } = useParams();\n  const exercises = exerciseMap[type] || [];\n\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const cameraRef = useRef(null);\n  const poseRef = useRef(null);\n  const synthRef = useRef(window.speechSynthesis);\n  const lastSpokenRef = useRef('');\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [repCount, setRepCount] = useState(0);\n\n  useEffect(() => {\n    return () => stopScan();\n  }, []);\n\n  const speak = (msg) => {\n    if (!msg || msg === lastSpokenRef.current) return;\n    if (!synthRef.current) return;\n    synthRef.current.cancel();\n    const utter = new SpeechSynthesisUtterance(msg);\n    synthRef.current.speak(utter);\n    lastSpokenRef.current = msg;\n  };\n\n  const onPoseResults = (results) => {\n    const landmarks = results.poseLandmarks;\n    if (!landmarks || !selectedExercise) return;\n\n    drawKeypoints(landmarks);\n\n    const { process } = logicMap[selectedExercise] || {};\n    if (process) {\n      const feedback = process(landmarks); // keypoints from MediaPipe\n      if (feedback?.speak) speak(feedback.speak);\n      if (feedback?.rep) setRepCount((prev) => prev + 1);\n    }\n  };\n\n  const drawKeypoints = (landmarks) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    landmarks.forEach((point) => {\n      const { x, y, visibility } = point;\n      if (visibility > 0.5) {\n        ctx.beginPath();\n        ctx.arc(x * canvas.width, y * canvas.height, 5, 0, 2 * Math.PI);\n        ctx.fillStyle = 'lime';\n        ctx.fill();\n      }\n    });\n  };\n\n  const startScan = async () => {\n    if (!selectedExercise) return alert('Please select an exercise!');\n    stopScan(); // Reset previous if any\n    setRepCount(0);\n    setIsScanning(true);\n    speak(`Starting ${selectedExercise}`);\n\n    if (logicMap[selectedExercise]?.reset) logicMap[selectedExercise].reset();\n\n    const poseDetector = new pose.Pose({\n      locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`,\n    });\n\n    poseDetector.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: false,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5,\n    });\n\n    poseDetector.onResults(onPoseResults);\n    poseRef.current = poseDetector;\n\n    cameraRef.current = new Camera(videoRef.current, {\n      onFrame: async () => {\n        await poseDetector.send({ image: videoRef.current });\n      },\n      width: 640,\n      height: 480,\n    });\n\n    cameraRef.current.start();\n  };\n\n  const stopScan = () => {\n    setIsScanning(false);\n    if (cameraRef.current) {\n      cameraRef.current.stop();\n      cameraRef.current = null;\n    }\n\n    const ctx = canvasRef.current?.getContext('2d');\n    ctx?.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    speak('Scan stopped');\n  };\n\n  const saveData = () => {\n    speak('Data saved');\n    console.log('Saved reps:', repCount);\n  };\n\n  return (\n    <div className=\"exercise-container\">\n      <header className=\"top-bar\">\n        AI-Rehab – {selectedExercise || 'Select Exercise'} | Reps: {repCount}\n      </header>\n\n      <div className=\"main-layout\">\n        <aside className=\"left-panel\">\n          {exercises.map((exercise) => (\n            <button\n              key={exercise}\n              className={`exercise-button ${selectedExercise === exercise ? 'active' : ''}`}\n              onClick={() => {\n                setSelectedExercise(exercise);\n                setRepCount(0);\n                stopScan();\n              }}\n            >\n              {exercise}\n            </button>\n          ))}\n        </aside>\n\n        <main className=\"content-panel\">\n          <div className=\"canvas-area\">\n            <video ref={videoRef} className=\"video-feed\" width=\"640\" height=\"480\" playsInline muted />\n            <canvas ref={canvasRef} className=\"canvas-overlay\" width=\"640\" height=\"480\" />\n          </div>\n\n          <div className=\"controls\">\n            <button className=\"control-btn start\" onClick={startScan} disabled={isScanning}>\n              Start Scan\n            </button>\n            <button className=\"control-btn stop\" onClick={stopScan} disabled={!isScanning}>\n              Stop Scan\n            </button>\n            <button className=\"control-btn save\" onClick={saveData}>\n              Save\n            </button>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default ExercisePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}