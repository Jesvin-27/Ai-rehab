{"ast":null,"code":"// src/exercises/ChairSquats.js\n\nlet prevState = 'standing';\nlet lastSpoken = '';\nlet lastSpeakTime = 0;\nexport function resetChairSquat() {\n  prevState = 'standing';\n  lastSpoken = '';\n  lastSpeakTime = 0;\n}\nexport function processChairSquat(landmarks) {\n  const now = Date.now();\n  const leftHip = landmarks[23];\n  const leftKnee = landmarks[25];\n  const leftAnkle = landmarks[27];\n  const rightHip = landmarks[24];\n  const rightKnee = landmarks[26];\n  const rightAnkle = landmarks[28];\n  if (!leftHip || !leftKnee || !leftAnkle || !rightHip || !rightKnee || !rightAnkle) {\n    return {\n      speak: 'Body not fully visible. Please align with camera'\n    };\n  }\n  const getAngle = (a, b, c) => {\n    const ab = {\n      x: a.x - b.x,\n      y: a.y - b.y\n    };\n    const cb = {\n      x: c.x - b.x,\n      y: c.y - b.y\n    };\n    const dot = ab.x * cb.x + ab.y * cb.y;\n    const magAB = Math.sqrt(ab.x ** 2 + ab.y ** 2);\n    const magCB = Math.sqrt(cb.x ** 2 + cb.y ** 2);\n    return Math.acos(dot / (magAB * magCB)) * 180 / Math.PI;\n  };\n  const leftAngle = getAngle(leftHip, leftKnee, leftAnkle);\n  const rightAngle = getAngle(rightHip, rightKnee, rightAnkle);\n  const avgAngle = (leftAngle + rightAngle) / 2;\n\n  // Detecting squat posture\n  if (avgAngle < 100 && prevState === 'standing') {\n    prevState = 'squatting';\n    return {\n      speak: 'Good squat position'\n    };\n  }\n\n  // Detecting stand up\n  if (avgAngle > 160 && prevState === 'squatting') {\n    prevState = 'standing';\n    return {\n      speak: 'Squat complete',\n      rep: 1\n    };\n  }\n\n  // Encourage user to squat more if angle is too high\n  if (avgAngle > 140 && now - lastSpeakTime > 4000) {\n    lastSpeakTime = now;\n    return {\n      speak: 'Try bending your knees more'\n    };\n  }\n  return null;\n}","map":{"version":3,"names":["prevState","lastSpoken","lastSpeakTime","resetChairSquat","processChairSquat","landmarks","now","Date","leftHip","leftKnee","leftAnkle","rightHip","rightKnee","rightAnkle","speak","getAngle","a","b","c","ab","x","y","cb","dot","magAB","Math","sqrt","magCB","acos","PI","leftAngle","rightAngle","avgAngle","rep"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/exercises/ChairSquats.js"],"sourcesContent":["// src/exercises/ChairSquats.js\n\nlet prevState = 'standing';\nlet lastSpoken = '';\nlet lastSpeakTime = 0;\n\nexport function resetChairSquat() {\n  prevState = 'standing';\n  lastSpoken = '';\n  lastSpeakTime = 0;\n}\n\nexport function processChairSquat(landmarks) {\n  const now = Date.now();\n\n  const leftHip = landmarks[23];\n  const leftKnee = landmarks[25];\n  const leftAnkle = landmarks[27];\n  const rightHip = landmarks[24];\n  const rightKnee = landmarks[26];\n  const rightAnkle = landmarks[28];\n\n  if (!leftHip || !leftKnee || !leftAnkle || !rightHip || !rightKnee || !rightAnkle) {\n    return { speak: 'Body not fully visible. Please align with camera' };\n  }\n\n  const getAngle = (a, b, c) => {\n    const ab = { x: a.x - b.x, y: a.y - b.y };\n    const cb = { x: c.x - b.x, y: c.y - b.y };\n\n    const dot = ab.x * cb.x + ab.y * cb.y;\n    const magAB = Math.sqrt(ab.x ** 2 + ab.y ** 2);\n    const magCB = Math.sqrt(cb.x ** 2 + cb.y ** 2);\n\n    return (Math.acos(dot / (magAB * magCB)) * 180) / Math.PI;\n  };\n\n  const leftAngle = getAngle(leftHip, leftKnee, leftAnkle);\n  const rightAngle = getAngle(rightHip, rightKnee, rightAnkle);\n  const avgAngle = (leftAngle + rightAngle) / 2;\n\n  // Detecting squat posture\n  if (avgAngle < 100 && prevState === 'standing') {\n    prevState = 'squatting';\n    return { speak: 'Good squat position' };\n  }\n\n  // Detecting stand up\n  if (avgAngle > 160 && prevState === 'squatting') {\n    prevState = 'standing';\n    return { speak: 'Squat complete', rep: 1 };\n  }\n\n  // Encourage user to squat more if angle is too high\n  if (avgAngle > 140 && now - lastSpeakTime > 4000) {\n    lastSpeakTime = now;\n    return { speak: 'Try bending your knees more' };\n  }\n\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}