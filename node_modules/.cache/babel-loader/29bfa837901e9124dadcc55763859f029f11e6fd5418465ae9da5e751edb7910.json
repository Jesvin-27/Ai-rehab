{"ast":null,"code":"var _jsxFileName = \"/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js\",\n  _s = $RefreshSig$();\n// src/pages/ExercisePage.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ExercisePage.css';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posedetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nimport { processChairSquat, resetChairSquat } from '../exercises/ChairSquats';\nimport { processArmCircles, resetArmCircles } from '../exercises/ArmCircles';\nimport { processLegRaises, resetLegRaises } from '../exercises/LegRaises';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exerciseMap = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls'],\n  physio: ['Arm Circles', 'Shoulder Rolls', 'Hydration Tips']\n};\nconst logicMap = {\n  'Chair Squats': {\n    process: processChairSquat,\n    reset: resetChairSquat\n  },\n  'Arm Circles': {\n    process: processArmCircles,\n    reset: resetArmCircles\n  },\n  'Leg Raise': {\n    process: processLegRaises,\n    reset: resetLegRaises\n  }\n};\nconst ExercisePage = () => {\n  _s();\n  const {\n    type\n  } = useParams();\n  const exercises = exerciseMap[type] || [];\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const detectorRef = useRef(null);\n  const requestRef = useRef(null);\n  const synthRef = useRef(window.speechSynthesis);\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [repCount, setRepCount] = useState(0);\n  useEffect(() => {\n    tf.setBackend('webgl');\n    return () => stopScan();\n  }, []);\n  const speak = msg => {\n    if (!synthRef.current) return;\n    synthRef.current.cancel();\n    const utterance = new SpeechSynthesisUtterance(msg);\n    synthRef.current.speak(utterance);\n  };\n  const runDetection = async () => {\n    var _poses$;\n    if (!detectorRef.current || !videoRef.current || !canvasRef.current) return;\n    const poses = await detectorRef.current.estimatePoses(videoRef.current);\n    drawKeypoints(poses);\n    const keypoints = ((_poses$ = poses[0]) === null || _poses$ === void 0 ? void 0 : _poses$.keypoints) || [];\n    if (keypoints.length > 0 && logicMap[selectedExercise]) {\n      const {\n        process\n      } = logicMap[selectedExercise];\n      const feedback = process(keypoints);\n      if (feedback !== null && feedback !== void 0 && feedback.speak) speak(feedback.speak);\n      if (feedback !== null && feedback !== void 0 && feedback.rep) setRepCount(prev => prev + 1);\n    }\n    requestRef.current = requestAnimationFrame(runDetection);\n  };\n  const drawKeypoints = poses => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    poses.forEach(pose => {\n      pose.keypoints.forEach(kp => {\n        if (kp.score > 0.4) {\n          ctx.beginPath();\n          ctx.arc(kp.x, kp.y, 5, 0, 2 * Math.PI);\n          ctx.fillStyle = 'lime';\n          ctx.fill();\n        }\n      });\n    });\n  };\n  const startScan = async () => {\n    var _logicMap$selectedExe;\n    if (!selectedExercise) return alert('Please select an exercise!');\n    setIsScanning(true);\n    setRepCount(0);\n    if ((_logicMap$selectedExe = logicMap[selectedExercise]) !== null && _logicMap$selectedExe !== void 0 && _logicMap$selectedExe.reset) logicMap[selectedExercise].reset();\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true\n    });\n    videoRef.current.srcObject = stream;\n    await videoRef.current.play();\n    detectorRef.current = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n      modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING\n    });\n    runDetection();\n  };\n  const stopScan = () => {\n    var _videoRef$current, _canvasRef$current, _canvasRef$current$ge;\n    setIsScanning(false);\n    if (requestRef.current) cancelAnimationFrame(requestRef.current);\n    if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n    }\n    (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : (_canvasRef$current$ge = _canvasRef$current.getContext('2d')) === null || _canvasRef$current$ge === void 0 ? void 0 : _canvasRef$current$ge.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    speak('Scan stopped');\n  };\n  const saveData = () => {\n    speak('Exercise data saved');\n    console.log('Saved reps:', repCount);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"top-bar\",\n      children: [\"AI-Rehab \\u2013 \", selectedExercise || 'Select Exercise', \" | Reps: \", repCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"left-panel\",\n        children: exercises.map(exercise => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `exercise-button ${selectedExercise === exercise ? 'active' : ''}`,\n          onClick: () => {\n            setSelectedExercise(exercise);\n            setRepCount(0);\n            stopScan();\n          },\n          children: exercise\n        }, exercise, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"content-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canvas-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            className: \"video-feed\",\n            width: \"640\",\n            height: \"480\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"canvas-overlay\",\n            width: \"640\",\n            height: \"480\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn start\",\n            onClick: startScan,\n            disabled: isScanning,\n            children: \"Start Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn stop\",\n            onClick: stopScan,\n            disabled: !isScanning,\n            children: \"Stop Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn save\",\n            onClick: saveData,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(ExercisePage, \"TGOJkVXBRKY9rgezWBVYw5kZ9ho=\", false, function () {\n  return [useParams];\n});\n_c = ExercisePage;\nexport default ExercisePage;\nvar _c;\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","tf","posedetection","processChairSquat","resetChairSquat","processArmCircles","resetArmCircles","processLegRaises","resetLegRaises","jsxDEV","_jsxDEV","exerciseMap","cardiac","neuro","ortho","physio","logicMap","process","reset","ExercisePage","_s","type","exercises","videoRef","canvasRef","detectorRef","requestRef","synthRef","window","speechSynthesis","selectedExercise","setSelectedExercise","isScanning","setIsScanning","repCount","setRepCount","setBackend","stopScan","speak","msg","current","cancel","utterance","SpeechSynthesisUtterance","runDetection","_poses$","poses","estimatePoses","drawKeypoints","keypoints","length","feedback","rep","prev","requestAnimationFrame","ctx","getContext","clearRect","width","height","forEach","pose","kp","score","beginPath","arc","x","y","Math","PI","fillStyle","fill","startScan","_logicMap$selectedExe","alert","stream","navigator","mediaDevices","getUserMedia","video","srcObject","play","createDetector","SupportedModels","MoveNet","modelType","movenet","SINGLEPOSE_LIGHTNING","_videoRef$current","_canvasRef$current","_canvasRef$current$ge","cancelAnimationFrame","getTracks","track","stop","saveData","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","exercise","onClick","ref","disabled","_c","$RefreshReg$"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js"],"sourcesContent":["// src/pages/ExercisePage.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ExercisePage.css';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posedetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\n\nimport { processChairSquat, resetChairSquat } from '../exercises/ChairSquats';\nimport { processArmCircles, resetArmCircles } from '../exercises/ArmCircles';\nimport { processLegRaises, resetLegRaises } from '../exercises/LegRaises';\n\nconst exerciseMap = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls'],\n  physio: ['Arm Circles', 'Shoulder Rolls', 'Hydration Tips'],\n};\n\nconst logicMap = {\n  'Chair Squats': { process: processChairSquat, reset: resetChairSquat },\n  'Arm Circles': { process: processArmCircles, reset: resetArmCircles },\n  'Leg Raise': { process: processLegRaises, reset: resetLegRaises },\n};\n\nconst ExercisePage = () => {\n  const { type } = useParams();\n  const exercises = exerciseMap[type] || [];\n\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const detectorRef = useRef(null);\n  const requestRef = useRef(null);\n  const synthRef = useRef(window.speechSynthesis);\n\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [repCount, setRepCount] = useState(0);\n\n  useEffect(() => {\n    tf.setBackend('webgl');\n    return () => stopScan();\n  }, []);\n\n  const speak = (msg) => {\n    if (!synthRef.current) return;\n    synthRef.current.cancel();\n    const utterance = new SpeechSynthesisUtterance(msg);\n    synthRef.current.speak(utterance);\n  };\n\n  const runDetection = async () => {\n    if (!detectorRef.current || !videoRef.current || !canvasRef.current) return;\n\n    const poses = await detectorRef.current.estimatePoses(videoRef.current);\n    drawKeypoints(poses);\n\n    const keypoints = poses[0]?.keypoints || [];\n    if (keypoints.length > 0 && logicMap[selectedExercise]) {\n      const { process } = logicMap[selectedExercise];\n      const feedback = process(keypoints);\n\n      if (feedback?.speak) speak(feedback.speak);\n      if (feedback?.rep) setRepCount((prev) => prev + 1);\n    }\n\n    requestRef.current = requestAnimationFrame(runDetection);\n  };\n\n  const drawKeypoints = (poses) => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    poses.forEach((pose) => {\n      pose.keypoints.forEach((kp) => {\n        if (kp.score > 0.4) {\n          ctx.beginPath();\n          ctx.arc(kp.x, kp.y, 5, 0, 2 * Math.PI);\n          ctx.fillStyle = 'lime';\n          ctx.fill();\n        }\n      });\n    });\n  };\n\n  const startScan = async () => {\n    if (!selectedExercise) return alert('Please select an exercise!');\n    setIsScanning(true);\n    setRepCount(0);\n\n    if (logicMap[selectedExercise]?.reset) logicMap[selectedExercise].reset();\n\n    const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n    videoRef.current.srcObject = stream;\n    await videoRef.current.play();\n\n    detectorRef.current = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n      modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING,\n    });\n\n    runDetection();\n  };\n\n  const stopScan = () => {\n    setIsScanning(false);\n    if (requestRef.current) cancelAnimationFrame(requestRef.current);\n    if (videoRef.current?.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach((track) => track.stop());\n    }\n    canvasRef.current?.getContext('2d')?.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    speak('Scan stopped');\n  };\n\n  const saveData = () => {\n    speak('Exercise data saved');\n    console.log('Saved reps:', repCount);\n  };\n\n  return (\n    <div className=\"exercise-container\">\n      <header className=\"top-bar\">\n        AI-Rehab – {selectedExercise || 'Select Exercise'} | Reps: {repCount}\n      </header>\n      <div className=\"main-layout\">\n        <aside className=\"left-panel\">\n          {exercises.map((exercise) => (\n            <button\n              key={exercise}\n              className={`exercise-button ${selectedExercise === exercise ? 'active' : ''}`}\n              onClick={() => {\n                setSelectedExercise(exercise);\n                setRepCount(0);\n                stopScan();\n              }}\n            >\n              {exercise}\n            </button>\n          ))}\n        </aside>\n\n        <main className=\"content-panel\">\n          <div className=\"canvas-area\">\n            <video ref={videoRef} className=\"video-feed\" width=\"640\" height=\"480\" />\n            <canvas ref={canvasRef} className=\"canvas-overlay\" width=\"640\" height=\"480\" />\n          </div>\n\n          <div className=\"controls\">\n            <button className=\"control-btn start\" onClick={startScan} disabled={isScanning}>\n              Start Scan\n            </button>\n            <button className=\"control-btn stop\" onClick={stopScan} disabled={!isScanning}>\n              Stop Scan\n            </button>\n            <button className=\"control-btn save\" onClick={saveData}>\n              Save\n            </button>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default ExercisePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}