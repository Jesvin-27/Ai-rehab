{"ast":null,"code":"var _jsxFileName = \"/Users/jesvinblazegmail.com/Documents/Ai-rehab/src/pages/StatsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { db, auth } from \"../firebase\";\nimport { collection, query, where, orderBy, getDocs } from \"firebase/firestore\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst StatsPage = () => {\n  _s();\n  const {\n    exerciseName\n  } = useParams();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    const fetchStats = async () => {\n      const user = auth.currentUser;\n      if (!user) {\n        console.error(\"No authenticated user\");\n        return;\n      }\n      try {\n        const q = query(collection(db, \"exercise_logs\"), where(\"uid\", \"==\", user.uid), where(\"exercise\", \"==\", exerciseName), orderBy(\"timestamp\", \"asc\"));\n        const querySnapshot = await getDocs(q);\n        const data = querySnapshot.docs.map(doc => doc.data());\n        setChartData({\n          labels: data.map(d => new Date(d.timestamp.seconds * 1000).toLocaleDateString()),\n          datasets: [{\n            label: `${exerciseName} Reps`,\n            data: data.map(d => d.reps),\n            borderColor: \"rgba(75, 192, 192, 1)\",\n            // teal line\n            backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n            // filled gradient\n            pointBackgroundColor: \"#fff\",\n            pointBorderColor: \"rgba(75, 192, 192, 1)\",\n            borderWidth: 3,\n            tension: 0.4,\n            // smooth curves\n            fill: true\n          }]\n        });\n      } catch (error) {\n        console.error(\"Error fetching stats:\", error);\n      }\n    };\n    fetchStats();\n  }, [exerciseName]);\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        labels: {\n          color: \"#333\",\n          font: {\n            size: 14,\n            weight: \"bold\"\n          }\n        }\n      },\n      title: {\n        display: true,\n        text: `${exerciseName} Progress Over Time`,\n        font: {\n          size: 20,\n          weight: \"bold\"\n        },\n        color: \"#111\"\n      },\n      tooltip: {\n        backgroundColor: \"rgba(0,0,0,0.7)\",\n        titleColor: \"#fff\",\n        bodyColor: \"#fff\"\n      }\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: \"#444\"\n        },\n        grid: {\n          color: \"rgba(200,200,200,0.3)\"\n        }\n      },\n      y: {\n        ticks: {\n          color: \"#444\"\n        },\n        grid: {\n          color: \"rgba(200,200,200,0.3)\"\n        },\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-6 text-center\",\n      children: [exerciseName, \" Stats\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), chartData ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 66\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(StatsPage, \"9WYwy1nfqcb8+Di5g1aCpK2gDNc=\", false, function () {\n  return [useParams];\n});\n_c = StatsPage;\nexport default StatsPage;\nvar _c;\n$RefreshReg$(_c, \"StatsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","db","auth","collection","query","where","orderBy","getDocs","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","StatsPage","_s","exerciseName","chartData","setChartData","fetchStats","user","currentUser","console","error","q","uid","querySnapshot","data","docs","map","doc","labels","d","Date","timestamp","seconds","toLocaleDateString","datasets","label","reps","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","borderWidth","tension","fill","options","responsive","plugins","legend","display","color","font","size","weight","title","text","tooltip","titleColor","bodyColor","scales","x","ticks","grid","y","beginAtZero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jesvinblazegmail.com/Documents/Ai-rehab/src/pages/StatsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { db, auth } from \"../firebase\";\nimport { collection, query, where, orderBy, getDocs } from \"firebase/firestore\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst StatsPage = () => {\n  const { exerciseName } = useParams();\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      const user = auth.currentUser;\n      if (!user) {\n        console.error(\"No authenticated user\");\n        return;\n      }\n\n      try {\n        const q = query(\n          collection(db, \"exercise_logs\"),\n          where(\"uid\", \"==\", user.uid),\n          where(\"exercise\", \"==\", exerciseName),\n          orderBy(\"timestamp\", \"asc\")\n        );\n\n        const querySnapshot = await getDocs(q);\n        const data = querySnapshot.docs.map((doc) => doc.data());\n\n        setChartData({\n          labels: data.map((d) =>\n            new Date(d.timestamp.seconds * 1000).toLocaleDateString()\n          ),\n          datasets: [\n            {\n              label: `${exerciseName} Reps`,\n              data: data.map((d) => d.reps),\n              borderColor: \"rgba(75, 192, 192, 1)\", // teal line\n              backgroundColor: \"rgba(75, 192, 192, 0.2)\", // filled gradient\n              pointBackgroundColor: \"#fff\",\n              pointBorderColor: \"rgba(75, 192, 192, 1)\",\n              borderWidth: 3,\n              tension: 0.4, // smooth curves\n              fill: true,\n            },\n          ],\n        });\n      } catch (error) {\n        console.error(\"Error fetching stats:\", error);\n      }\n    };\n\n    fetchStats();\n  }, [exerciseName]);\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        labels: {\n          color: \"#333\",\n          font: { size: 14, weight: \"bold\" },\n        },\n      },\n      title: {\n        display: true,\n        text: `${exerciseName} Progress Over Time`,\n        font: { size: 20, weight: \"bold\" },\n        color: \"#111\",\n      },\n      tooltip: {\n        backgroundColor: \"rgba(0,0,0,0.7)\",\n        titleColor: \"#fff\",\n        bodyColor: \"#fff\",\n      },\n    },\n    scales: {\n      x: {\n        ticks: { color: \"#444\" },\n        grid: { color: \"rgba(200,200,200,0.3)\" },\n      },\n      y: {\n        ticks: { color: \"#444\" },\n        grid: { color: \"rgba(200,200,200,0.3)\" },\n        beginAtZero: true,\n      },\n    },\n  };\n\n  return (\n    <div className=\"p-6\">\n      <h2 className=\"text-2xl font-bold mb-6 text-center\">\n        {exerciseName} Stats\n      </h2>\n      {chartData ? <Line data={chartData} options={options} /> : <p>Loading...</p>}\n    </div>\n  );\n};\n\nexport default StatsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}