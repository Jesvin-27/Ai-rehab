{"ast":null,"code":"var _jsxFileName = \"/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posedetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nimport './ExercisePage.css';\nimport { ChairSquatTracker } from '../exercises/ChairSquats';\n\n// Corrected skeleton connections for MoveNet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONNECTIONS = [['left_shoulder', 'right_shoulder'], ['left_shoulder', 'left_hip'], ['right_shoulder', 'right_hip'], ['left_hip', 'right_hip'], ['left_shoulder', 'left_elbow'], ['left_elbow', 'left_wrist'], ['right_shoulder', 'right_elbow'], ['right_elbow', 'right_wrist'], ['left_hip', 'left_knee'], ['left_knee', 'left_ankle'], ['right_hip', 'right_knee'], ['right_knee', 'right_ankle']];\nconst exerciseMap = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls']\n};\nconst FPS = 10;\nconst ExercisePage = () => {\n  _s();\n  const {\n    type\n  } = useParams();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const detectorRef = useRef(null);\n  const requestRef = useRef(null);\n  const trackerRef = useRef(null);\n  const lastTimeRef = useRef(0);\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [repCount, setRepCount] = useState(0);\n  const [feedback, setFeedback] = useState('');\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState('');\n  const exercises = exerciseMap[type] || [];\n  useEffect(() => {\n    const initTF = async () => {\n      try {\n        await tf.setBackend('webgl');\n        await tf.ready();\n        setDebugInfo(prev => prev + '\\nTensorFlow initialized successfully');\n      } catch (err) {\n        console.error('TensorFlow initialization failed:', err);\n        setError(`TF Init Failed: ${err.message}`);\n      }\n    };\n    initTF();\n    return () => {\n      stopScan();\n      if (detectorRef.current) {\n        detectorRef.current.dispose();\n      }\n      tf.disposeVariables();\n    };\n  }, []);\n  const drawKeypoints = pose => {\n    if (!canvasRef.current || !pose) {\n      setDebugInfo(prev => prev + '\\nNo canvas or pose for drawing');\n      return;\n    }\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    // Draw skeleton connections\n    ctx.strokeStyle = 'white';\n    ctx.lineWidth = 2;\n    CONNECTIONS.forEach(([joint1, joint2]) => {\n      const kp1 = pose.keypoints.find(kp => kp.name === joint1);\n      const kp2 = pose.keypoints.find(kp => kp.name === joint2);\n      if (kp1 && kp2 && kp1.score > 0.4 && kp2.score > 0.4) {\n        ctx.beginPath();\n        ctx.moveTo(kp1.x, kp1.y);\n        ctx.lineTo(kp2.x, kp2.y);\n        ctx.stroke();\n      }\n    });\n\n    // Draw keypoints\n    pose.keypoints.forEach(kp => {\n      if (kp.score > 0.4) {\n        ctx.beginPath();\n        ctx.arc(kp.x, kp.y, 5, 0, 2 * Math.PI);\n        ctx.fillStyle = 'lime';\n        ctx.fill();\n      }\n    });\n  };\n  const runDetection = async timestamp => {\n    if (!isScanning) {\n      setDebugInfo(prev => prev + '\\nDetection stopped - scanning inactive');\n      return;\n    }\n    try {\n      // Throttle detection\n      if (timestamp - lastTimeRef.current < 1000 / FPS) {\n        requestRef.current = requestAnimationFrame(runDetection);\n        return;\n      }\n      lastTimeRef.current = timestamp;\n\n      // Check essential refs\n      if (!videoRef.current || !canvasRef.current || !detectorRef.current) {\n        setDebugInfo(prev => prev + '\\nMissing required refs for detection');\n        return;\n      }\n\n      // Verify video is ready\n      if (videoRef.current.readyState < 2) {\n        setDebugInfo(prev => prev + '\\nVideo not ready');\n        requestRef.current = requestAnimationFrame(runDetection);\n        return;\n      }\n\n      // Estimate poses\n      const poses = await detectorRef.current.estimatePoses(videoRef.current, {\n        maxPoses: 1,\n        flipHorizontal: false\n      });\n      if (!poses || poses.length === 0) {\n        setDebugInfo(prev => prev + '\\nNo poses detected');\n        setFeedback('Stand in view of the camera');\n      } else {\n        setDebugInfo(prev => prev + `\\nDetected ${poses.length} pose(s)`);\n        drawKeypoints(poses[0]);\n        if (selectedExercise === 'Chair Squats' && trackerRef.current) {\n          const result = trackerRef.current.process(poses[0].keypoints);\n          setRepCount(result.reps);\n          setFeedback(result.feedback);\n        }\n      }\n    } catch (err) {\n      console.error('Detection error:', err);\n      setDebugInfo(prev => prev + `\\nDetection error: ${err.message}`);\n      setFeedback('Detection error - try refreshing');\n    }\n    requestRef.current = requestAnimationFrame(runDetection);\n  };\n  const startScan = async () => {\n    if (!selectedExercise) {\n      setFeedback('Please select an exercise first');\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    setDebugInfo('Starting scan...');\n    try {\n      // Initialize tracker\n      if (selectedExercise === 'Chair Squats') {\n        trackerRef.current = new ChairSquatTracker();\n        setDebugInfo(prev => prev + '\\nChair squat tracker initialized');\n      }\n\n      // Initialize detector\n      setDebugInfo(prev => prev + '\\nInitializing pose detector...');\n      const detector = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n        modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING\n      });\n      detectorRef.current = detector;\n      setDebugInfo(prev => prev + '\\nPose detector initialized');\n\n      // Get camera access\n      setDebugInfo(prev => prev + '\\nRequesting camera access...');\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: 640\n          },\n          height: {\n            ideal: 480\n          },\n          facingMode: 'user',\n          frameRate: {\n            ideal: 30\n          }\n        }\n      });\n      videoRef.current.srcObject = stream;\n      setDebugInfo(prev => prev + '\\nCamera access granted');\n\n      // Handle video playback\n      const playPromise = videoRef.current.play();\n      if (playPromise !== undefined) {\n        await playPromise.catch(err => {\n          setDebugInfo(prev => prev + `\\nVideo play error: ${err.message}`);\n          throw err;\n        });\n      }\n\n      // Reset and start detection\n      if (trackerRef.current) {\n        trackerRef.current.reset();\n      }\n      setRepCount(0);\n      setFeedback('Starting detection...');\n      setIsScanning(true);\n      lastTimeRef.current = 0;\n      requestRef.current = requestAnimationFrame(runDetection);\n    } catch (err) {\n      console.error('Start scan error:', err);\n      setError(`Failed to start: ${err.message}`);\n      setDebugInfo(prev => prev + `\\nStart scan error: ${err.message}`);\n      stopScan();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const stopScan = () => {\n    var _videoRef$current, _canvasRef$current;\n    setIsScanning(false);\n    cancelAnimationFrame(requestRef.current);\n    if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d');\n    ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setFeedback('Detection stopped');\n    setDebugInfo(prev => prev + '\\nScan stopped');\n  };\n  const saveData = () => {\n    alert(`Saved ${repCount} reps for ${selectedExercise}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"top-bar\",\n      children: [\"AI-Rehab \\u2013 \", selectedExercise || 'Select Exercise']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), exercises.map(exercise => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `exercise-button ${selectedExercise === exercise ? 'active' : ''}`,\n          onClick: () => {\n            setSelectedExercise(exercise);\n            setRepCount(0);\n            setFeedback('');\n            stopScan();\n          },\n          disabled: isScanning,\n          children: exercise\n        }, exercise, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"content-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canvas-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            className: \"video-feed\",\n            width: \"640\",\n            height: \"480\",\n            playsInline: true,\n            muted: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"canvas-overlay\",\n            width: \"640\",\n            height: \"480\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Feedback:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 16\n            }, this), \" \", feedback || 'No feedback yet']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Reps:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 16\n            }, this), \" \", repCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Debug Info:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"debug-info\",\n            children: debugInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn start\",\n            onClick: startScan,\n            disabled: isScanning || isLoading || !selectedExercise,\n            children: isLoading ? 'Initializing...' : 'Start Scan'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn stop\",\n            onClick: stopScan,\n            disabled: !isScanning,\n            children: \"Stop Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn save\",\n            onClick: saveData,\n            disabled: repCount === 0,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(ExercisePage, \"jgKI8EX3EvXJ8uS6EqFiYSGxIWU=\", false, function () {\n  return [useParams];\n});\n_c = ExercisePage;\nexport default ExercisePage;\nvar _c;\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useParams","tf","posedetection","ChairSquatTracker","jsxDEV","_jsxDEV","CONNECTIONS","exerciseMap","cardiac","neuro","ortho","FPS","ExercisePage","_s","type","videoRef","canvasRef","detectorRef","requestRef","trackerRef","lastTimeRef","selectedExercise","setSelectedExercise","isScanning","setIsScanning","isLoading","setIsLoading","repCount","setRepCount","feedback","setFeedback","error","setError","debugInfo","setDebugInfo","exercises","initTF","setBackend","ready","prev","err","console","message","stopScan","current","dispose","disposeVariables","drawKeypoints","pose","ctx","getContext","clearRect","width","height","strokeStyle","lineWidth","forEach","joint1","joint2","kp1","keypoints","find","kp","name","kp2","score","beginPath","moveTo","x","y","lineTo","stroke","arc","Math","PI","fillStyle","fill","runDetection","timestamp","requestAnimationFrame","readyState","poses","estimatePoses","maxPoses","flipHorizontal","length","result","process","reps","startScan","detector","createDetector","SupportedModels","MoveNet","modelType","movenet","SINGLEPOSE_LIGHTNING","stream","navigator","mediaDevices","getUserMedia","video","ideal","facingMode","frameRate","srcObject","playPromise","play","undefined","catch","reset","_videoRef$current","_canvasRef$current","cancelAnimationFrame","getTracks","track","stop","saveData","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","exercise","onClick","disabled","ref","playsInline","muted","_c","$RefreshReg$"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posedetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nimport './ExercisePage.css';\nimport { ChairSquatTracker } from '../exercises/ChairSquats';\n\n// Corrected skeleton connections for MoveNet\nconst CONNECTIONS = [\n  ['left_shoulder', 'right_shoulder'],\n  ['left_shoulder', 'left_hip'],\n  ['right_shoulder', 'right_hip'],\n  ['left_hip', 'right_hip'],\n  ['left_shoulder', 'left_elbow'],\n  ['left_elbow', 'left_wrist'],\n  ['right_shoulder', 'right_elbow'],\n  ['right_elbow', 'right_wrist'],\n  ['left_hip', 'left_knee'],\n  ['left_knee', 'left_ankle'],\n  ['right_hip', 'right_knee'],\n  ['right_knee', 'right_ankle'],\n];\n\nconst exerciseMap = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls'],\n};\n\nconst FPS = 10;\n\nconst ExercisePage = () => {\n  const { type } = useParams();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const detectorRef = useRef(null);\n  const requestRef = useRef(null);\n  const trackerRef = useRef(null);\n  const lastTimeRef = useRef(0);\n\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [repCount, setRepCount] = useState(0);\n  const [feedback, setFeedback] = useState('');\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState('');\n\n  const exercises = exerciseMap[type] || [];\n\n  useEffect(() => {\n    const initTF = async () => {\n      try {\n        await tf.setBackend('webgl');\n        await tf.ready();\n        setDebugInfo(prev => prev + '\\nTensorFlow initialized successfully');\n      } catch (err) {\n        console.error('TensorFlow initialization failed:', err);\n        setError(`TF Init Failed: ${err.message}`);\n      }\n    };\n\n    initTF();\n\n    return () => {\n      stopScan();\n      if (detectorRef.current) {\n        detectorRef.current.dispose();\n      }\n      tf.disposeVariables();\n    };\n  }, []);\n\n  const drawKeypoints = (pose) => {\n    if (!canvasRef.current || !pose) {\n      setDebugInfo(prev => prev + '\\nNo canvas or pose for drawing');\n      return;\n    }\n\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    // Draw skeleton connections\n    ctx.strokeStyle = 'white';\n    ctx.lineWidth = 2;\n\n    CONNECTIONS.forEach(([joint1, joint2]) => {\n      const kp1 = pose.keypoints.find(kp => kp.name === joint1);\n      const kp2 = pose.keypoints.find(kp => kp.name === joint2);\n\n      if (kp1 && kp2 && kp1.score > 0.4 && kp2.score > 0.4) {\n        ctx.beginPath();\n        ctx.moveTo(kp1.x, kp1.y);\n        ctx.lineTo(kp2.x, kp2.y);\n        ctx.stroke();\n      }\n    });\n\n    // Draw keypoints\n    pose.keypoints.forEach((kp) => {\n      if (kp.score > 0.4) {\n        ctx.beginPath();\n        ctx.arc(kp.x, kp.y, 5, 0, 2 * Math.PI);\n        ctx.fillStyle = 'lime';\n        ctx.fill();\n      }\n    });\n  };\n\n  const runDetection = async (timestamp) => {\n    if (!isScanning) {\n      setDebugInfo(prev => prev + '\\nDetection stopped - scanning inactive');\n      return;\n    }\n\n    try {\n      // Throttle detection\n      if (timestamp - lastTimeRef.current < 1000 / FPS) {\n        requestRef.current = requestAnimationFrame(runDetection);\n        return;\n      }\n      lastTimeRef.current = timestamp;\n\n      // Check essential refs\n      if (!videoRef.current || !canvasRef.current || !detectorRef.current) {\n        setDebugInfo(prev => prev + '\\nMissing required refs for detection');\n        return;\n      }\n\n      // Verify video is ready\n      if (videoRef.current.readyState < 2) {\n        setDebugInfo(prev => prev + '\\nVideo not ready');\n        requestRef.current = requestAnimationFrame(runDetection);\n        return;\n      }\n\n      // Estimate poses\n      const poses = await detectorRef.current.estimatePoses(videoRef.current, {\n        maxPoses: 1,\n        flipHorizontal: false\n      });\n\n      if (!poses || poses.length === 0) {\n        setDebugInfo(prev => prev + '\\nNo poses detected');\n        setFeedback('Stand in view of the camera');\n      } else {\n        setDebugInfo(prev => prev + `\\nDetected ${poses.length} pose(s)`);\n        drawKeypoints(poses[0]);\n\n        if (selectedExercise === 'Chair Squats' && trackerRef.current) {\n          const result = trackerRef.current.process(poses[0].keypoints);\n          setRepCount(result.reps);\n          setFeedback(result.feedback);\n        }\n      }\n    } catch (err) {\n      console.error('Detection error:', err);\n      setDebugInfo(prev => prev + `\\nDetection error: ${err.message}`);\n      setFeedback('Detection error - try refreshing');\n    }\n\n    requestRef.current = requestAnimationFrame(runDetection);\n  };\n\n  const startScan = async () => {\n    if (!selectedExercise) {\n      setFeedback('Please select an exercise first');\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    setDebugInfo('Starting scan...');\n\n    try {\n      // Initialize tracker\n      if (selectedExercise === 'Chair Squats') {\n        trackerRef.current = new ChairSquatTracker();\n        setDebugInfo(prev => prev + '\\nChair squat tracker initialized');\n      }\n\n      // Initialize detector\n      setDebugInfo(prev => prev + '\\nInitializing pose detector...');\n      const detector = await posedetection.createDetector(\n        posedetection.SupportedModels.MoveNet,\n        {\n          modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING,\n        }\n      );\n      detectorRef.current = detector;\n      setDebugInfo(prev => prev + '\\nPose detector initialized');\n\n      // Get camera access\n      setDebugInfo(prev => prev + '\\nRequesting camera access...');\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: { ideal: 640 },\n          height: { ideal: 480 },\n          facingMode: 'user',\n          frameRate: { ideal: 30 }\n        }\n      });\n\n      videoRef.current.srcObject = stream;\n      setDebugInfo(prev => prev + '\\nCamera access granted');\n\n      // Handle video playback\n      const playPromise = videoRef.current.play();\n      if (playPromise !== undefined) {\n        await playPromise.catch(err => {\n          setDebugInfo(prev => prev + `\\nVideo play error: ${err.message}`);\n          throw err;\n        });\n      }\n\n      // Reset and start detection\n      if (trackerRef.current) {\n        trackerRef.current.reset();\n      }\n      setRepCount(0);\n      setFeedback('Starting detection...');\n      setIsScanning(true);\n      lastTimeRef.current = 0;\n      requestRef.current = requestAnimationFrame(runDetection);\n\n    } catch (err) {\n      console.error('Start scan error:', err);\n      setError(`Failed to start: ${err.message}`);\n      setDebugInfo(prev => prev + `\\nStart scan error: ${err.message}`);\n      stopScan();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const stopScan = () => {\n    setIsScanning(false);\n    cancelAnimationFrame(requestRef.current);\n\n    if (videoRef.current?.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n\n    const ctx = canvasRef.current?.getContext('2d');\n    ctx?.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    setFeedback('Detection stopped');\n    setDebugInfo(prev => prev + '\\nScan stopped');\n  };\n\n  const saveData = () => {\n    alert(`Saved ${repCount} reps for ${selectedExercise}`);\n  };\n\n  return (\n    <div className=\"exercise-container\">\n      <header className=\"top-bar\">\n        AI-Rehab – {selectedExercise || 'Select Exercise'}\n      </header>\n\n      {error && (\n        <div className=\"error-message\">\n          {error}\n        </div>\n      )}\n\n      <div className=\"main-layout\">\n        <aside className=\"left-panel\">\n          <h3>Exercises</h3>\n          {exercises.map((exercise) => (\n            <button\n              key={exercise}\n              className={`exercise-button ${selectedExercise === exercise ? 'active' : ''}`}\n              onClick={() => {\n                setSelectedExercise(exercise);\n                setRepCount(0);\n                setFeedback('');\n                stopScan();\n              }}\n              disabled={isScanning}\n            >\n              {exercise}\n            </button>\n          ))}\n        </aside>\n\n        <main className=\"content-panel\">\n          <div className=\"canvas-area\">\n            <video\n              ref={videoRef}\n              className=\"video-feed\"\n              width=\"640\"\n              height=\"480\"\n              playsInline\n              muted\n            />\n            <canvas\n              ref={canvasRef}\n              className=\"canvas-overlay\"\n              width=\"640\"\n              height=\"480\"\n            />\n          </div>\n\n          <div className=\"feedback-section\">\n            <p><strong>Feedback:</strong> {feedback || 'No feedback yet'}</p>\n            <p><strong>Reps:</strong> {repCount}</p>\n            <p><strong>Debug Info:</strong></p>\n            <pre className=\"debug-info\">{debugInfo}</pre>\n          </div>\n\n          <div className=\"controls\">\n            <button \n              className=\"control-btn start\" \n              onClick={startScan} \n              disabled={isScanning || isLoading || !selectedExercise}\n            >\n              {isLoading ? 'Initializing...' : 'Start Scan'}\n            </button>\n            <button \n              className=\"control-btn stop\" \n              onClick={stopScan} \n              disabled={!isScanning}\n            >\n              Stop Scan\n            </button>\n            <button \n              className=\"control-btn save\" \n              onClick={saveData}\n              disabled={repCount === 0}\n            >\n              Save\n            </button>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default ExercisePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}