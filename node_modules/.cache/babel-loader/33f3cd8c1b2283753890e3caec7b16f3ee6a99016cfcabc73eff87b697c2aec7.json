{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { UnaryOpType } from '../unary_op_util';\nimport { UnaryOpProgram } from '../unary_op_webgpu';\nexport function int(input, backend) {\n  const program = new UnaryOpProgram(input.shape, UnaryOpType.TO_INT);\n  const output = backend.runWebGPUProgram(program, [input], 'int32');\n  return {\n    dataId: output.dataId,\n    shape: output.shape,\n    dtype: output.dtype\n  };\n}","map":{"version":3,"names":["UnaryOpType","UnaryOpProgram","int","input","backend","program","shape","TO_INT","output","runWebGPUProgram","dataId","dtype"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/tfjs-backend-webgpu/src/kernel_utils/int.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TensorInfo} from '@tensorflow/tfjs-core';\nimport {WebGPUBackend} from '../backend_webgpu';\nimport {UnaryOpType} from '../unary_op_util';\nimport {UnaryOpProgram} from '../unary_op_webgpu';\n\nexport function int(input: TensorInfo, backend: WebGPUBackend): TensorInfo {\n  const program = new UnaryOpProgram(input.shape, UnaryOpType.TO_INT);\n  const output = backend.runWebGPUProgram(program, [input], 'int32');\n  return {dataId: output.dataId, shape: output.shape, dtype: output.dtype};\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAmBA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,cAAc,QAAO,oBAAoB;AAEjD,OAAM,SAAUC,GAAGA,CAACC,KAAiB,EAAEC,OAAsB;EAC3D,MAAMC,OAAO,GAAG,IAAIJ,cAAc,CAACE,KAAK,CAACG,KAAK,EAAEN,WAAW,CAACO,MAAM,CAAC;EACnE,MAAMC,MAAM,GAAGJ,OAAO,CAACK,gBAAgB,CAACJ,OAAO,EAAE,CAACF,KAAK,CAAC,EAAE,OAAO,CAAC;EAClE,OAAO;IAACO,MAAM,EAAEF,MAAM,CAACE,MAAM;IAAEJ,KAAK,EAAEE,MAAM,CAACF,KAAK;IAAEK,KAAK,EAAEH,MAAM,CAACG;EAAK,CAAC;AAC1E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}