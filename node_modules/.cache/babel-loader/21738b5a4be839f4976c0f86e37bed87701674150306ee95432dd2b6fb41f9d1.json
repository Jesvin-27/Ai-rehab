{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { kernel_impls, NonMaxSuppressionV3 } from '@tensorflow/tfjs-core';\nexport function nonMaxSuppressionV3(args) {\n  console.warn('tf.nonMaxSuppression() in webgpu locks the UI thread. ' + 'Call tf.nonMaxSuppressionAsync() instead');\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    boxes,\n    scores\n  } = inputs;\n  const {\n    maxOutputSize,\n    iouThreshold,\n    scoreThreshold\n  } = attrs;\n  const boxesVals = backend.readSync(boxes.dataId);\n  const scoresVals = backend.readSync(scores.dataId);\n  const {\n    selectedIndices\n  } = kernel_impls.nonMaxSuppressionV3Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n  return backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices));\n}\nexport const nonMaxSuppressionV3Config = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'webgpu',\n  kernelFunc: nonMaxSuppressionV3\n};","map":{"version":3,"names":["kernel_impls","NonMaxSuppressionV3","nonMaxSuppressionV3","args","console","warn","inputs","backend","attrs","boxes","scores","maxOutputSize","iouThreshold","scoreThreshold","boxesVals","readSync","dataId","scoresVals","selectedIndices","nonMaxSuppressionV3Impl","makeTensorInfo","length","Int32Array","nonMaxSuppressionV3Config","kernelName","backendName","kernelFunc"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/tfjs-backend-webgpu/src/kernels/NonMaxSuppressionV3.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {kernel_impls, KernelConfig, KernelFunc, NonMaxSuppressionV3, NonMaxSuppressionV3Attrs, NonMaxSuppressionV3Inputs, TypedArray} from '@tensorflow/tfjs-core';\nimport {WebGPUBackend} from '../backend_webgpu';\n\nexport function nonMaxSuppressionV3(args: {\n  inputs: NonMaxSuppressionV3Inputs,\n  backend: WebGPUBackend,\n  attrs: NonMaxSuppressionV3Attrs\n}) {\n  console.warn(\n      'tf.nonMaxSuppression() in webgpu locks the UI thread. ' +\n      'Call tf.nonMaxSuppressionAsync() instead');\n\n  const {inputs, backend, attrs} = args;\n  const {boxes, scores} = inputs;\n  const {maxOutputSize, iouThreshold, scoreThreshold} = attrs;\n\n  const boxesVals = backend.readSync(boxes.dataId) as TypedArray;\n  const scoresVals = backend.readSync(scores.dataId) as TypedArray;\n\n  const {selectedIndices} = kernel_impls.nonMaxSuppressionV3Impl(\n      boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n\n  return backend.makeTensorInfo(\n      [selectedIndices.length], 'int32', new Int32Array(selectedIndices));\n}\n\nexport const nonMaxSuppressionV3Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'webgpu',\n  kernelFunc: nonMaxSuppressionV3 as unknown as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,EAA4BC,mBAAmB,QAAwE,uBAAuB;AAGlK,OAAM,SAAUC,mBAAmBA,CAACC,IAInC;EACCC,OAAO,CAACC,IAAI,CACR,wDAAwD,GACxD,0CAA0C,CAAC;EAE/C,MAAM;IAACC,MAAM;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGL,IAAI;EACrC,MAAM;IAACM,KAAK;IAAEC;EAAM,CAAC,GAAGJ,MAAM;EAC9B,MAAM;IAACK,aAAa;IAAEC,YAAY;IAAEC;EAAc,CAAC,GAAGL,KAAK;EAE3D,MAAMM,SAAS,GAAGP,OAAO,CAACQ,QAAQ,CAACN,KAAK,CAACO,MAAM,CAAe;EAC9D,MAAMC,UAAU,GAAGV,OAAO,CAACQ,QAAQ,CAACL,MAAM,CAACM,MAAM,CAAe;EAEhE,MAAM;IAACE;EAAe,CAAC,GAAGlB,YAAY,CAACmB,uBAAuB,CAC1DL,SAAS,EAAEG,UAAU,EAAEN,aAAa,EAAEC,YAAY,EAAEC,cAAc,CAAC;EAEvE,OAAON,OAAO,CAACa,cAAc,CACzB,CAACF,eAAe,CAACG,MAAM,CAAC,EAAE,OAAO,EAAE,IAAIC,UAAU,CAACJ,eAAe,CAAC,CAAC;AACzE;AAEA,OAAO,MAAMK,yBAAyB,GAAiB;EACrDC,UAAU,EAAEvB,mBAAmB;EAC/BwB,WAAW,EAAE,QAAQ;EACrBC,UAAU,EAAExB;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}