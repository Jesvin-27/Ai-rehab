{"ast":null,"code":"let prevState = 'down';\nexport function resetLegRaises() {\n  prevState = 'down';\n}\nexport function processLegRaises(landmarks) {\n  const rightHip = landmarks[24];\n  const rightKnee = landmarks[26];\n  const rightAnkle = landmarks[28];\n  if (!rightHip || !rightKnee || !rightAnkle) {\n    return {\n      speak: 'Make sure your leg is visible'\n    };\n  }\n  const getDistance = (a, b) => Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n  const hipToAnkleY = rightHip.y - rightAnkle.y;\n  const kneeBend = getDistance(rightKnee, rightAnkle);\n  if (hipToAnkleY > 0.1 && kneeBend > 0.1 && prevState === 'down') {\n    prevState = 'up';\n    return {\n      speak: 'Good raise!'\n    };\n  }\n  if (hipToAnkleY < 0.05 && prevState === 'up') {\n    prevState = 'down';\n    return {\n      speak: 'Rep complete',\n      rep: 1\n    };\n  }\n  return null;\n}","map":{"version":3,"names":["prevState","resetLegRaises","processLegRaises","landmarks","rightHip","rightKnee","rightAnkle","speak","getDistance","a","b","Math","sqrt","x","y","hipToAnkleY","kneeBend","rep"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/exercises/LegRaises.js"],"sourcesContent":["let prevState = 'down';\n\nexport function resetLegRaises() {\n  prevState = 'down';\n}\n\nexport function processLegRaises(landmarks) {\n  const rightHip = landmarks[24];\n  const rightKnee = landmarks[26];\n  const rightAnkle = landmarks[28];\n\n  if (!rightHip || !rightKnee || !rightAnkle) {\n    return { speak: 'Make sure your leg is visible' };\n  }\n\n  const getDistance = (a, b) => Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n\n  const hipToAnkleY = rightHip.y - rightAnkle.y;\n  const kneeBend = getDistance(rightKnee, rightAnkle);\n\n  if (hipToAnkleY > 0.1 && kneeBend > 0.1 && prevState === 'down') {\n    prevState = 'up';\n    return { speak: 'Good raise!' };\n  }\n\n  if (hipToAnkleY < 0.05 && prevState === 'up') {\n    prevState = 'down';\n    return { speak: 'Rep complete', rep: 1 };\n  }\n\n  return null;\n}\n"],"mappings":"AAAA,IAAIA,SAAS,GAAG,MAAM;AAEtB,OAAO,SAASC,cAAcA,CAAA,EAAG;EAC/BD,SAAS,GAAG,MAAM;AACpB;AAEA,OAAO,SAASE,gBAAgBA,CAACC,SAAS,EAAE;EAC1C,MAAMC,QAAQ,GAAGD,SAAS,CAAC,EAAE,CAAC;EAC9B,MAAME,SAAS,GAAGF,SAAS,CAAC,EAAE,CAAC;EAC/B,MAAMG,UAAU,GAAGH,SAAS,CAAC,EAAE,CAAC;EAEhC,IAAI,CAACC,QAAQ,IAAI,CAACC,SAAS,IAAI,CAACC,UAAU,EAAE;IAC1C,OAAO;MAAEC,KAAK,EAAE;IAAgC,CAAC;EACnD;EAEA,MAAMC,WAAW,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAKC,IAAI,CAACC,IAAI,CAAC,CAACH,CAAC,CAACI,CAAC,GAAGH,CAAC,CAACG,CAAC,KAAK,CAAC,GAAG,CAACJ,CAAC,CAACK,CAAC,GAAGJ,CAAC,CAACI,CAAC,KAAK,CAAC,CAAC;EAE5E,MAAMC,WAAW,GAAGX,QAAQ,CAACU,CAAC,GAAGR,UAAU,CAACQ,CAAC;EAC7C,MAAME,QAAQ,GAAGR,WAAW,CAACH,SAAS,EAAEC,UAAU,CAAC;EAEnD,IAAIS,WAAW,GAAG,GAAG,IAAIC,QAAQ,GAAG,GAAG,IAAIhB,SAAS,KAAK,MAAM,EAAE;IAC/DA,SAAS,GAAG,IAAI;IAChB,OAAO;MAAEO,KAAK,EAAE;IAAc,CAAC;EACjC;EAEA,IAAIQ,WAAW,GAAG,IAAI,IAAIf,SAAS,KAAK,IAAI,EAAE;IAC5CA,SAAS,GAAG,MAAM;IAClB,OAAO;MAAEO,KAAK,EAAE,cAAc;MAAEU,GAAG,EAAE;IAAE,CAAC;EAC1C;EAEA,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}