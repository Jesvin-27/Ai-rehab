{"ast":null,"code":"var _jsxFileName = \"/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js\",\n  _s = $RefreshSig$();\n// src/pages/ExercisePage.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ExercisePage.css';\nimport Chart from 'chart.js/auto';\nimport ChairSquatsLogic from '../exercises/ChairSquats'; // future: dynamically import based on selection\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exerciseData = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Chair Squats'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls'],\n  physio: ['Arm Circles', 'Shoulder Rolls', 'Hydration Tips']\n};\nconst ExercisePage = () => {\n  _s();\n  const {\n    type\n  } = useParams();\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [reps, setReps] = useState(0);\n  const [showGraph, setShowGraph] = useState(false);\n  const [poseScore, setPoseScore] = useState(0);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [intervalId, setIntervalId] = useState(null);\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const chartRef = useRef(null);\n  const detectorRef = useRef(null);\n  const exercises = exerciseData[type] || [];\n\n  // Start timer\n  useEffect(() => {\n    if (isScanning) {\n      const id = setInterval(() => {\n        setTimeElapsed(prev => prev + 1);\n      }, 1000);\n      setIntervalId(id);\n    } else {\n      clearInterval(intervalId);\n    }\n  }, [isScanning]);\n\n  // Pose detection logic\n  useEffect(() => {\n    if (!isScanning || !selectedExercise) return;\n    const run = async () => {\n      const {\n        loadModel,\n        detectPose\n      } = ChairSquatsLogic; // Later: switch by name\n      const detector = await loadModel();\n      detectorRef.current = detector;\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      videoRef.current.srcObject = stream;\n      videoRef.current.onloadeddata = () => {\n        detectFrame();\n      };\n    };\n    const detectFrame = async () => {\n      if (!detectorRef.current) return;\n      const poses = await detectorRef.current.estimatePoses(videoRef.current);\n      drawPose(poses);\n      const feedback = ChairSquatsLogic.validatePose(poses[0]);\n      if (feedback.isValid) {\n        setReps(r => r + 1);\n        speak('Good posture. Repetition counted.');\n      } else {\n        speak(feedback.message);\n      }\n      requestAnimationFrame(detectFrame);\n    };\n    const drawPose = poses => {\n      const ctx = canvasRef.current.getContext('2d');\n      ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      poses.forEach(pose => {\n        pose.keypoints.forEach(kp => {\n          if (kp.score > 0.4) {\n            ctx.beginPath();\n            ctx.arc(kp.x, kp.y, 5, 0, 2 * Math.PI);\n            ctx.fillStyle = 'lime';\n            ctx.fill();\n          }\n        });\n      });\n    };\n    run();\n  }, [isScanning, selectedExercise]);\n  const speak = msg => {\n    const synth = window.speechSynthesis;\n    if (!synth.speaking) {\n      const utter = new SpeechSynthesisUtterance(msg);\n      synth.speak(utter);\n    }\n  };\n  const handleStart = () => {\n    if (!selectedExercise) {\n      alert('Please select an exercise');\n      return;\n    }\n    setIsScanning(true);\n    setTimeElapsed(0);\n    setReps(0);\n  };\n  const handleStop = () => {\n    var _videoRef$current;\n    setIsScanning(false);\n    if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(t => t.stop());\n    }\n  };\n  const handleSave = () => {\n    alert(`Saved: ${reps} reps in ${timeElapsed} seconds`);\n  };\n  useEffect(() => {\n    if (showGraph && chartRef.current) {\n      const ctx = chartRef.current.getContext('2d');\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: Array.from({\n            length: timeElapsed\n          }, (_, i) => i + 1),\n          datasets: [{\n            label: 'Reps Over Time',\n            data: Array.from({\n              length: timeElapsed\n            }, (_, i) => i < reps ? i + 1 : reps),\n            borderColor: 'rgba(75, 192, 192, 1)',\n            fill: false\n          }]\n        }\n      });\n    }\n  }, [showGraph]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"top-bar\",\n      children: [\"AI-Rehab \\u2013 \", selectedExercise || 'Select Exercise']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"left-panel\",\n        children: [exercises.map(exercise => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `exercise-button ${selectedExercise === exercise ? 'active' : ''}`,\n          onClick: () => {\n            setSelectedExercise(exercise);\n            setShowGraph(false);\n          },\n          children: exercise\n        }, exercise, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"exercise-button graph-button\",\n          onClick: () => {\n            setShowGraph(true);\n            setIsScanning(false);\n          },\n          children: \"\\uD83D\\uDCC8 View Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"content-panel\",\n        children: [showGraph ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canvas-placeholder graph-view\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: chartRef,\n            width: \"500\",\n            height: \"300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canvas-placeholder\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            width: \"640\",\n            height: \"480\",\n            autoPlay: true,\n            muted: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            width: \"640\",\n            height: \"480\",\n            className: \"absolute top-0 left-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), !showGraph && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn start\",\n            onClick: handleStart,\n            children: \"Start Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn stop\",\n            onClick: handleStop,\n            children: \"Stop Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn save\",\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm mt-3 text-gray-500\",\n            children: [\"\\u23F1 \", timeElapsed, \"s | \\uD83D\\uDD01 \", reps, \" reps\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(ExercisePage, \"MyB2UDTVZpWkV2pflol0lwWFWtM=\", false, function () {\n  return [useParams];\n});\n_c = ExercisePage;\nexport default ExercisePage;\nvar _c;\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useParams","Chart","ChairSquatsLogic","jsxDEV","_jsxDEV","exerciseData","cardiac","neuro","ortho","physio","ExercisePage","_s","type","selectedExercise","setSelectedExercise","isScanning","setIsScanning","reps","setReps","showGraph","setShowGraph","poseScore","setPoseScore","timeElapsed","setTimeElapsed","intervalId","setIntervalId","canvasRef","videoRef","chartRef","detectorRef","exercises","id","setInterval","prev","clearInterval","run","loadModel","detectPose","detector","current","stream","navigator","mediaDevices","getUserMedia","video","srcObject","onloadeddata","detectFrame","poses","estimatePoses","drawPose","feedback","validatePose","isValid","r","speak","message","requestAnimationFrame","ctx","getContext","clearRect","width","height","forEach","pose","keypoints","kp","score","beginPath","arc","x","y","Math","PI","fillStyle","fill","msg","synth","window","speechSynthesis","speaking","utter","SpeechSynthesisUtterance","handleStart","alert","handleStop","_videoRef$current","getTracks","t","stop","handleSave","data","labels","Array","from","length","_","i","datasets","label","borderColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","exercise","onClick","ref","autoPlay","muted","_c","$RefreshReg$"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js"],"sourcesContent":["// src/pages/ExercisePage.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ExercisePage.css';\nimport Chart from 'chart.js/auto';\nimport ChairSquatsLogic from '../exercises/ChairSquats'; // future: dynamically import based on selection\n\nconst exerciseData = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Chair Squats'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls'],\n  physio: ['Arm Circles', 'Shoulder Rolls', 'Hydration Tips'],\n};\n\nconst ExercisePage = () => {\n  const { type } = useParams();\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [reps, setReps] = useState(0);\n  const [showGraph, setShowGraph] = useState(false);\n  const [poseScore, setPoseScore] = useState(0);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [intervalId, setIntervalId] = useState(null);\n\n  const canvasRef = useRef(null);\n  const videoRef = useRef(null);\n  const chartRef = useRef(null);\n  const detectorRef = useRef(null);\n\n  const exercises = exerciseData[type] || [];\n\n  // Start timer\n  useEffect(() => {\n    if (isScanning) {\n      const id = setInterval(() => {\n        setTimeElapsed((prev) => prev + 1);\n      }, 1000);\n      setIntervalId(id);\n    } else {\n      clearInterval(intervalId);\n    }\n  }, [isScanning]);\n\n  // Pose detection logic\n  useEffect(() => {\n    if (!isScanning || !selectedExercise) return;\n\n    const run = async () => {\n      const { loadModel, detectPose } = ChairSquatsLogic; // Later: switch by name\n      const detector = await loadModel();\n      detectorRef.current = detector;\n\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      videoRef.current.srcObject = stream;\n\n      videoRef.current.onloadeddata = () => {\n        detectFrame();\n      };\n    };\n\n    const detectFrame = async () => {\n      if (!detectorRef.current) return;\n      const poses = await detectorRef.current.estimatePoses(videoRef.current);\n      drawPose(poses);\n      const feedback = ChairSquatsLogic.validatePose(poses[0]);\n      if (feedback.isValid) {\n        setReps((r) => r + 1);\n        speak('Good posture. Repetition counted.');\n      } else {\n        speak(feedback.message);\n      }\n      requestAnimationFrame(detectFrame);\n    };\n\n    const drawPose = (poses) => {\n      const ctx = canvasRef.current.getContext('2d');\n      ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      poses.forEach((pose) => {\n        pose.keypoints.forEach((kp) => {\n          if (kp.score > 0.4) {\n            ctx.beginPath();\n            ctx.arc(kp.x, kp.y, 5, 0, 2 * Math.PI);\n            ctx.fillStyle = 'lime';\n            ctx.fill();\n          }\n        });\n      });\n    };\n\n    run();\n  }, [isScanning, selectedExercise]);\n\n  const speak = (msg) => {\n    const synth = window.speechSynthesis;\n    if (!synth.speaking) {\n      const utter = new SpeechSynthesisUtterance(msg);\n      synth.speak(utter);\n    }\n  };\n\n  const handleStart = () => {\n    if (!selectedExercise) {\n      alert('Please select an exercise');\n      return;\n    }\n    setIsScanning(true);\n    setTimeElapsed(0);\n    setReps(0);\n  };\n\n  const handleStop = () => {\n    setIsScanning(false);\n    if (videoRef.current?.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach((t) => t.stop());\n    }\n  };\n\n  const handleSave = () => {\n    alert(`Saved: ${reps} reps in ${timeElapsed} seconds`);\n  };\n\n  useEffect(() => {\n    if (showGraph && chartRef.current) {\n      const ctx = chartRef.current.getContext('2d');\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: Array.from({ length: timeElapsed }, (_, i) => i + 1),\n          datasets: [\n            {\n              label: 'Reps Over Time',\n              data: Array.from({ length: timeElapsed }, (_, i) => (i < reps ? i + 1 : reps)),\n              borderColor: 'rgba(75, 192, 192, 1)',\n              fill: false,\n            },\n          ],\n        },\n      });\n    }\n  }, [showGraph]);\n\n  return (\n    <div className=\"exercise-container\">\n      <header className=\"top-bar\">\n        AI-Rehab – {selectedExercise || 'Select Exercise'}\n      </header>\n\n      <div className=\"main-layout\">\n        <aside className=\"left-panel\">\n          {exercises.map((exercise) => (\n            <button\n              key={exercise}\n              className={`exercise-button ${selectedExercise === exercise ? 'active' : ''}`}\n              onClick={() => {\n                setSelectedExercise(exercise);\n                setShowGraph(false);\n              }}\n            >\n              {exercise}\n            </button>\n          ))}\n          <button\n            className=\"exercise-button graph-button\"\n            onClick={() => {\n              setShowGraph(true);\n              setIsScanning(false);\n            }}\n          >\n            📈 View Graph\n          </button>\n        </aside>\n\n        <main className=\"content-panel\">\n          {showGraph ? (\n            <div className=\"canvas-placeholder graph-view\">\n              <canvas ref={chartRef} width=\"500\" height=\"300\" />\n            </div>\n          ) : (\n            <div className=\"canvas-placeholder\">\n              <video ref={videoRef} width=\"640\" height=\"480\" autoPlay muted />\n              <canvas ref={canvasRef} width=\"640\" height=\"480\" className=\"absolute top-0 left-0\" />\n            </div>\n          )}\n\n          {!showGraph && (\n            <div className=\"controls\">\n              <button className=\"control-btn start\" onClick={handleStart}>Start Scan</button>\n              <button className=\"control-btn stop\" onClick={handleStop}>Stop Scan</button>\n              <button className=\"control-btn save\" onClick={handleSave}>Save</button>\n              <div className=\"text-sm mt-3 text-gray-500\">\n                ⏱ {timeElapsed}s | 🔁 {reps} reps\n              </div>\n            </div>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default ExercisePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}