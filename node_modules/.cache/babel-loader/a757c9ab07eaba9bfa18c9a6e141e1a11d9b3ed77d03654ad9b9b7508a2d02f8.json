{"ast":null,"code":"/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LinSpace } from '@tensorflow/tfjs-core';\nimport { LinSpaceProgram } from '../lin_space_webgpu';\nexport function linSpace(args) {\n  const {\n    backend,\n    attrs\n  } = args;\n  const {\n    start,\n    stop,\n    num\n  } = attrs;\n  const step = (stop - start) / (num - 1);\n  const program = new LinSpaceProgram(num);\n  const uniformData = [{\n    type: 'float32',\n    data: [start]\n  }, {\n    type: 'float32',\n    data: [step]\n  }];\n  return backend.runWebGPUProgram(program, [], 'float32', uniformData);\n}\nexport const linSpaceConfig = {\n  kernelName: LinSpace,\n  backendName: 'webgpu',\n  kernelFunc: linSpace\n};","map":{"version":3,"names":["LinSpace","LinSpaceProgram","linSpace","args","backend","attrs","start","stop","num","step","program","uniformData","type","data","runWebGPUProgram","linSpaceConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/tfjs-backend-webgpu/src/kernels/LinSpace.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LinSpace, LinSpaceAttrs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {WebGPUBackend} from '../backend_webgpu';\nimport {LinSpaceProgram} from '../lin_space_webgpu';\n\nexport function linSpace(args: {backend: WebGPUBackend, attrs: LinSpaceAttrs}):\n    TensorInfo {\n  const {backend, attrs} = args;\n  const {start, stop, num} = attrs;\n  const step = (stop - start) / (num - 1);\n\n  const program = new LinSpaceProgram(num);\n  const uniformData =\n      [{type: 'float32', data: [start]}, {type: 'float32', data: [step]}];\n  return backend.runWebGPUProgram(program, [], 'float32', uniformData);\n}\n\nexport const linSpaceConfig: KernelConfig = {\n  kernelName: LinSpace,\n  backendName: 'webgpu',\n  kernelFunc: linSpace as unknown as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,QAAQ,QAAkC,uBAAuB;AAGnG,SAAQC,eAAe,QAAO,qBAAqB;AAEnD,OAAM,SAAUC,QAAQA,CAACC,IAAoD;EAE3E,MAAM;IAACC,OAAO;IAAEC;EAAK,CAAC,GAAGF,IAAI;EAC7B,MAAM;IAACG,KAAK;IAAEC,IAAI;IAAEC;EAAG,CAAC,GAAGH,KAAK;EAChC,MAAMI,IAAI,GAAG,CAACF,IAAI,GAAGD,KAAK,KAAKE,GAAG,GAAG,CAAC,CAAC;EAEvC,MAAME,OAAO,GAAG,IAAIT,eAAe,CAACO,GAAG,CAAC;EACxC,MAAMG,WAAW,GACb,CAAC;IAACC,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE,CAACP,KAAK;EAAC,CAAC,EAAE;IAACM,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE,CAACJ,IAAI;EAAC,CAAC,CAAC;EACvE,OAAOL,OAAO,CAACU,gBAAgB,CAACJ,OAAO,EAAE,EAAE,EAAE,SAAS,EAAEC,WAAW,CAAC;AACtE;AAEA,OAAO,MAAMI,cAAc,GAAiB;EAC1CC,UAAU,EAAEhB,QAAQ;EACpBiB,WAAW,EAAE,QAAQ;EACrBC,UAAU,EAAEhB;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}