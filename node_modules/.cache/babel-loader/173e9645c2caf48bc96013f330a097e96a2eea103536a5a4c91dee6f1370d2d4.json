{"ast":null,"code":"/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2DBackpropFilter } from '@tensorflow/tfjs-core';\nimport { Conv2DDerFilterProgram } from '../conv_backprop_webgpu';\nexport function conv2DBackpropFilter(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x,\n    dy\n  } = inputs;\n  const {\n    strides,\n    pad,\n    dataFormat,\n    dimRoundingMode,\n    filterShape\n  } = attrs;\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(x.shape, filterShape, strides, 1 /* dilations */, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n  const program = new Conv2DDerFilterProgram(convInfo);\n  const uniformData = [{\n    type: 'int32',\n    data: [convInfo.padInfo.top, convInfo.padInfo.left]\n  }, {\n    type: 'int32',\n    data: [convInfo.strideHeight, convInfo.strideWidth]\n  }, {\n    type: 'int32',\n    data: [convInfo.batchSize]\n  }, {\n    type: 'int32',\n    data: [convInfo.outHeight]\n  }, {\n    type: 'int32',\n    data: [convInfo.outWidth]\n  }, {\n    type: 'int32',\n    data: [convInfo.inHeight]\n  }, {\n    type: 'int32',\n    data: [convInfo.inWidth]\n  }];\n  return backend.runWebGPUProgram(program, [x, dy], x.dtype, uniformData);\n}\nexport const conv2DBackpropFilterConfig = {\n  kernelName: Conv2DBackpropFilter,\n  backendName: 'webgpu',\n  kernelFunc: conv2DBackpropFilter\n};","map":{"version":3,"names":["backend_util","Conv2DBackpropFilter","Conv2DDerFilterProgram","conv2DBackpropFilter","args","inputs","backend","attrs","x","dy","strides","pad","dataFormat","dimRoundingMode","filterShape","$dataFormat","convertConv2DDataFormat","convInfo","computeConv2DInfo","shape","program","uniformData","type","data","padInfo","top","left","strideHeight","strideWidth","batchSize","outHeight","outWidth","inHeight","inWidth","runWebGPUProgram","dtype","conv2DBackpropFilterConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/tfjs-backend-webgpu/src/kernels/Conv2DBackpropFilter.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2DBackpropFilter, Conv2DBackpropFilterAttrs, Conv2DBackpropFilterInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {WebGPUBackend} from '../backend_webgpu';\nimport {Conv2DDerFilterProgram} from '../conv_backprop_webgpu';\n\nexport function conv2DBackpropFilter(args: {\n  inputs: Conv2DBackpropFilterInputs,\n  backend: WebGPUBackend,\n  attrs: Conv2DBackpropFilterAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x, dy} = inputs;\n  const {strides, pad, dataFormat, dimRoundingMode, filterShape} = attrs;\n\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      x.shape as [number, number, number, number], filterShape, strides,\n      1 /* dilations */, pad, dimRoundingMode, false /* depthwise */,\n      $dataFormat);\n\n  const program = new Conv2DDerFilterProgram(convInfo);\n  const uniformData = [\n    {type: 'int32', data: [convInfo.padInfo.top, convInfo.padInfo.left]},\n    {type: 'int32', data: [convInfo.strideHeight, convInfo.strideWidth]},\n    {type: 'int32', data: [convInfo.batchSize]},\n    {type: 'int32', data: [convInfo.outHeight]},\n    {type: 'int32', data: [convInfo.outWidth]},\n    {type: 'int32', data: [convInfo.inHeight]},\n    {type: 'int32', data: [convInfo.inWidth]}\n  ];\n  return backend.runWebGPUProgram(program, [x, dy], x.dtype, uniformData);\n}\n\nexport const conv2DBackpropFilterConfig: KernelConfig = {\n  kernelName: Conv2DBackpropFilter,\n  backendName: 'webgpu',\n  kernelFunc: conv2DBackpropFilter as unknown as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,EAAEC,oBAAoB,QAAoG,uBAAuB;AAGrK,SAAQC,sBAAsB,QAAO,yBAAyB;AAE9D,OAAM,SAAUC,oBAAoBA,CAACC,IAIpC;EACC,MAAM;IAACC,MAAM;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGH,IAAI;EACrC,MAAM;IAACI,CAAC;IAAEC;EAAE,CAAC,GAAGJ,MAAM;EACtB,MAAM;IAACK,OAAO;IAAEC,GAAG;IAAEC,UAAU;IAAEC,eAAe;IAAEC;EAAW,CAAC,GAAGP,KAAK;EAEtE,MAAMQ,WAAW,GAAGf,YAAY,CAACgB,uBAAuB,CAACJ,UAAU,CAAC;EACpE,MAAMK,QAAQ,GAAGjB,YAAY,CAACkB,iBAAiB,CAC3CV,CAAC,CAACW,KAAyC,EAAEL,WAAW,EAAEJ,OAAO,EACjE,CAAC,CAAC,iBAAiBC,GAAG,EAAEE,eAAe,EAAE,KAAK,CAAC,iBAC/CE,WAAW,CAAC;EAEhB,MAAMK,OAAO,GAAG,IAAIlB,sBAAsB,CAACe,QAAQ,CAAC;EACpD,MAAMI,WAAW,GAAG,CAClB;IAACC,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,CAACN,QAAQ,CAACO,OAAO,CAACC,GAAG,EAAER,QAAQ,CAACO,OAAO,CAACE,IAAI;EAAC,CAAC,EACpE;IAACJ,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,CAACN,QAAQ,CAACU,YAAY,EAAEV,QAAQ,CAACW,WAAW;EAAC,CAAC,EACpE;IAACN,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,CAACN,QAAQ,CAACY,SAAS;EAAC,CAAC,EAC3C;IAACP,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,CAACN,QAAQ,CAACa,SAAS;EAAC,CAAC,EAC3C;IAACR,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,CAACN,QAAQ,CAACc,QAAQ;EAAC,CAAC,EAC1C;IAACT,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,CAACN,QAAQ,CAACe,QAAQ;EAAC,CAAC,EAC1C;IAACV,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,CAACN,QAAQ,CAACgB,OAAO;EAAC,CAAC,CAC1C;EACD,OAAO3B,OAAO,CAAC4B,gBAAgB,CAACd,OAAO,EAAE,CAACZ,CAAC,EAAEC,EAAE,CAAC,EAAED,CAAC,CAAC2B,KAAK,EAAEd,WAAW,CAAC;AACzE;AAEA,OAAO,MAAMe,0BAA0B,GAAiB;EACtDC,UAAU,EAAEpC,oBAAoB;EAChCqC,WAAW,EAAE,QAAQ;EACrBC,UAAU,EAAEpC;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}