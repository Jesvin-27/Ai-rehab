{"ast":null,"code":"var _jsxFileName = \"/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posedetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nimport './ExercisePage.css';\nimport { ChairSquatTracker } from '../exercises/ChairSquats';\n\n// Skeleton connections for MoveNet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONNECTIONS = [['left_shoulder', 'right_shoulder'], ['left_shoulder', 'left_hip'], ['right_shoulder', 'right_hip'], ['left_hip', 'right_hip'], ['left_shoulder', 'left_elbow'], ['left_elbow', 'left_wrist'], ['right_shoulder', 'right_elbow'], ['right_elbow', 'right_wrist'], ['left_hip', 'left_knee'], ['left_knee', 'left_ankle'], ['right_hip', 'right_knee'], ['right_knee', 'right_ankle']];\nconst exerciseMap = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls']\n};\nconst FPS = 10; // Frames per second for detection\n\nconst ExercisePage = () => {\n  _s();\n  const {\n    type\n  } = useParams();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const detectorRef = useRef(null);\n  const requestRef = useRef(null);\n  const trackerRef = useRef(null);\n  const lastTimeRef = useRef(0);\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [repCount, setRepCount] = useState(0);\n  const [feedback, setFeedback] = useState('');\n  const [error, setError] = useState(null);\n  const exercises = exerciseMap[type] || [];\n  useEffect(() => {\n    // Initialize TensorFlow\n    const initTF = async () => {\n      try {\n        await tf.setBackend('webgl');\n        await tf.ready();\n      } catch (err) {\n        console.error('TensorFlow initialization failed:', err);\n        setError('Failed to initialize TensorFlow. Please try refreshing the page.');\n      }\n    };\n    initTF();\n    return () => {\n      // Cleanup on unmount\n      stopScan();\n      if (detectorRef.current) {\n        detectorRef.current.dispose();\n      }\n    };\n  }, []);\n  const drawKeypoints = pose => {\n    if (!canvasRef.current || !pose) return;\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    // Draw skeleton connections\n    ctx.strokeStyle = 'white';\n    ctx.lineWidth = 2;\n    CONNECTIONS.forEach(([joint1, joint2]) => {\n      const kp1 = pose.keypoints.find(kp => kp.name === joint1);\n      const kp2 = pose.keypoints.find(kp => kp.name === joint2);\n      if (kp1 && kp2 && kp1.score > 0.4 && kp2.score > 0.4) {\n        ctx.beginPath();\n        ctx.moveTo(kp1.x, kp1.y);\n        ctx.lineTo(kp2.x, kp2.y);\n        ctx.stroke();\n      }\n    });\n\n    // Draw keypoints\n    pose.keypoints.forEach(kp => {\n      if (kp.score > 0.4) {\n        ctx.beginPath();\n        ctx.arc(kp.x, kp.y, 5, 0, 2 * Math.PI);\n        ctx.fillStyle = 'lime';\n        ctx.fill();\n      }\n    });\n  };\n  const runDetection = async timestamp => {\n    if (!isScanning || !videoRef.current || !canvasRef.current || !detectorRef.current) {\n      return;\n    }\n\n    // Throttle detection to target FPS\n    if (timestamp - lastTimeRef.current > 1000 / FPS) {\n      lastTimeRef.current = timestamp;\n      try {\n        const poses = await detectorRef.current.estimatePoses(videoRef.current);\n        if (poses && poses.length > 0) {\n          drawKeypoints(poses[0]);\n          if (selectedExercise === 'Chair Squats' && trackerRef.current) {\n            const result = trackerRef.current.process(poses[0].keypoints);\n            setRepCount(result.reps);\n            setFeedback(result.feedback);\n          }\n        }\n      } catch (err) {\n        console.error('Detection error:', err);\n        setFeedback('Error during pose detection');\n      }\n    }\n    requestRef.current = requestAnimationFrame(runDetection);\n  };\n  const startScan = async () => {\n    if (!selectedExercise) {\n      setFeedback('Please select an exercise first');\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Initialize exercise tracker\n      if (selectedExercise === 'Chair Squats') {\n        trackerRef.current = new ChairSquatTracker();\n      }\n\n      // Initialize pose detector\n      const detector = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n        modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING\n      });\n      detectorRef.current = detector;\n\n      // Get camera stream\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: 640,\n          height: 480,\n          facingMode: 'user'\n        }\n      });\n      videoRef.current.srcObject = stream;\n      await videoRef.current.play();\n\n      // Reset counters and start detection\n      if (trackerRef.current) {\n        trackerRef.current.reset();\n      }\n      setRepCount(0);\n      setFeedback('Starting detection...');\n      setIsScanning(true);\n      lastTimeRef.current = 0;\n      requestRef.current = requestAnimationFrame(runDetection);\n    } catch (err) {\n      console.error('Start scan error:', err);\n      setError(`Failed to start: ${err.message}`);\n      stopScan();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const stopScan = () => {\n    var _videoRef$current, _canvasRef$current;\n    setIsScanning(false);\n    cancelAnimationFrame(requestRef.current);\n    if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d');\n    ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setFeedback('Detection stopped');\n  };\n  const saveData = () => {\n    alert(`Saved ${repCount} reps for ${selectedExercise}`);\n    // Here you would typically send data to your backend\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"top-bar\",\n      children: [\"AI-Rehab \\u2013 \", selectedExercise || 'Select Exercise']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), exercises.map(exercise => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `exercise-button ${selectedExercise === exercise ? 'active' : ''}`,\n          onClick: () => {\n            setSelectedExercise(exercise);\n            setRepCount(0);\n            setFeedback('');\n            stopScan();\n          },\n          disabled: isScanning,\n          children: exercise\n        }, exercise, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"content-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canvas-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            className: \"video-feed\",\n            width: \"640\",\n            height: \"480\",\n            playsInline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"canvas-overlay\",\n            width: \"640\",\n            height: \"480\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Feedback:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 16\n            }, this), \" \", feedback || 'No feedback yet']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Reps:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 16\n            }, this), \" \", repCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn start\",\n            onClick: startScan,\n            disabled: isScanning || isLoading || !selectedExercise,\n            children: isLoading ? 'Initializing...' : 'Start Scan'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn stop\",\n            onClick: stopScan,\n            disabled: !isScanning,\n            children: \"Stop Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn save\",\n            onClick: saveData,\n            disabled: repCount === 0,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(ExercisePage, \"3nL8dZ4hcaPFZ0tl8LlyCK0zaG8=\", false, function () {\n  return [useParams];\n});\n_c = ExercisePage;\nexport default ExercisePage;\nvar _c;\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useParams","tf","posedetection","ChairSquatTracker","jsxDEV","_jsxDEV","CONNECTIONS","exerciseMap","cardiac","neuro","ortho","FPS","ExercisePage","_s","type","videoRef","canvasRef","detectorRef","requestRef","trackerRef","lastTimeRef","selectedExercise","setSelectedExercise","isScanning","setIsScanning","isLoading","setIsLoading","repCount","setRepCount","feedback","setFeedback","error","setError","exercises","initTF","setBackend","ready","err","console","stopScan","current","dispose","drawKeypoints","pose","ctx","getContext","clearRect","width","height","strokeStyle","lineWidth","forEach","joint1","joint2","kp1","keypoints","find","kp","name","kp2","score","beginPath","moveTo","x","y","lineTo","stroke","arc","Math","PI","fillStyle","fill","runDetection","timestamp","poses","estimatePoses","length","result","process","reps","requestAnimationFrame","startScan","detector","createDetector","SupportedModels","MoveNet","modelType","movenet","SINGLEPOSE_LIGHTNING","stream","navigator","mediaDevices","getUserMedia","video","facingMode","srcObject","play","reset","message","_videoRef$current","_canvasRef$current","cancelAnimationFrame","getTracks","track","stop","saveData","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","exercise","onClick","disabled","ref","playsInline","_c","$RefreshReg$"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posedetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nimport './ExercisePage.css';\nimport { ChairSquatTracker } from '../exercises/ChairSquats';\n\n// Skeleton connections for MoveNet\nconst CONNECTIONS = [\n  ['left_shoulder', 'right_shoulder'],\n  ['left_shoulder', 'left_hip'],\n  ['right_shoulder', 'right_hip'],\n  ['left_hip', 'right_hip'],\n  ['left_shoulder', 'left_elbow'],\n  ['left_elbow', 'left_wrist'],\n  ['right_shoulder', 'right_elbow'],\n  ['right_elbow', 'right_wrist'],\n  ['left_hip', 'left_knee'],\n  ['left_knee', 'left_ankle'],\n  ['right_hip', 'right_knee'],\n  ['right_knee', 'right_ankle'],\n];\n\nconst exerciseMap = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls'],\n};\n\nconst FPS = 10; // Frames per second for detection\n\nconst ExercisePage = () => {\n  const { type } = useParams();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const detectorRef = useRef(null);\n  const requestRef = useRef(null);\n  const trackerRef = useRef(null);\n  const lastTimeRef = useRef(0);\n  \n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [repCount, setRepCount] = useState(0);\n  const [feedback, setFeedback] = useState('');\n  const [error, setError] = useState(null);\n\n  const exercises = exerciseMap[type] || [];\n\n  useEffect(() => {\n    // Initialize TensorFlow\n    const initTF = async () => {\n      try {\n        await tf.setBackend('webgl');\n        await tf.ready();\n      } catch (err) {\n        console.error('TensorFlow initialization failed:', err);\n        setError('Failed to initialize TensorFlow. Please try refreshing the page.');\n      }\n    };\n\n    initTF();\n\n    return () => {\n      // Cleanup on unmount\n      stopScan();\n      if (detectorRef.current) {\n        detectorRef.current.dispose();\n      }\n    };\n  }, []);\n\n  const drawKeypoints = (pose) => {\n    if (!canvasRef.current || !pose) return;\n    \n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    \n    // Draw skeleton connections\n    ctx.strokeStyle = 'white';\n    ctx.lineWidth = 2;\n    \n    CONNECTIONS.forEach(([joint1, joint2]) => {\n      const kp1 = pose.keypoints.find(kp => kp.name === joint1);\n      const kp2 = pose.keypoints.find(kp => kp.name === joint2);\n      \n      if (kp1 && kp2 && kp1.score > 0.4 && kp2.score > 0.4) {\n        ctx.beginPath();\n        ctx.moveTo(kp1.x, kp1.y);\n        ctx.lineTo(kp2.x, kp2.y);\n        ctx.stroke();\n      }\n    });\n    \n    // Draw keypoints\n    pose.keypoints.forEach((kp) => {\n      if (kp.score > 0.4) {\n        ctx.beginPath();\n        ctx.arc(kp.x, kp.y, 5, 0, 2 * Math.PI);\n        ctx.fillStyle = 'lime';\n        ctx.fill();\n      }\n    });\n  };\n\n  const runDetection = async (timestamp) => {\n    if (!isScanning || !videoRef.current || !canvasRef.current || !detectorRef.current) {\n      return;\n    }\n\n    // Throttle detection to target FPS\n    if (timestamp - lastTimeRef.current > 1000 / FPS) {\n      lastTimeRef.current = timestamp;\n      \n      try {\n        const poses = await detectorRef.current.estimatePoses(videoRef.current);\n        \n        if (poses && poses.length > 0) {\n          drawKeypoints(poses[0]);\n          \n          if (selectedExercise === 'Chair Squats' && trackerRef.current) {\n            const result = trackerRef.current.process(poses[0].keypoints);\n            setRepCount(result.reps);\n            setFeedback(result.feedback);\n          }\n        }\n      } catch (err) {\n        console.error('Detection error:', err);\n        setFeedback('Error during pose detection');\n      }\n    }\n    \n    requestRef.current = requestAnimationFrame(runDetection);\n  };\n\n  const startScan = async () => {\n    if (!selectedExercise) {\n      setFeedback('Please select an exercise first');\n      return;\n    }\n    \n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      // Initialize exercise tracker\n      if (selectedExercise === 'Chair Squats') {\n        trackerRef.current = new ChairSquatTracker();\n      }\n      \n      // Initialize pose detector\n      const detector = await posedetection.createDetector(\n        posedetection.SupportedModels.MoveNet,\n        {\n          modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING,\n        }\n      );\n      detectorRef.current = detector;\n      \n      // Get camera stream\n      const stream = await navigator.mediaDevices.getUserMedia({ \n        video: { \n          width: 640, \n          height: 480, \n          facingMode: 'user' \n        } \n      });\n      \n      videoRef.current.srcObject = stream;\n      await videoRef.current.play();\n      \n      // Reset counters and start detection\n      if (trackerRef.current) {\n        trackerRef.current.reset();\n      }\n      setRepCount(0);\n      setFeedback('Starting detection...');\n      setIsScanning(true);\n      lastTimeRef.current = 0;\n      requestRef.current = requestAnimationFrame(runDetection);\n      \n    } catch (err) {\n      console.error('Start scan error:', err);\n      setError(`Failed to start: ${err.message}`);\n      stopScan();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const stopScan = () => {\n    setIsScanning(false);\n    cancelAnimationFrame(requestRef.current);\n    \n    if (videoRef.current?.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n    \n    const ctx = canvasRef.current?.getContext('2d');\n    ctx?.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    \n    setFeedback('Detection stopped');\n  };\n\n  const saveData = () => {\n    alert(`Saved ${repCount} reps for ${selectedExercise}`);\n    // Here you would typically send data to your backend\n  };\n\n  return (\n    <div className=\"exercise-container\">\n      <header className=\"top-bar\">\n        AI-Rehab – {selectedExercise || 'Select Exercise'}\n      </header>\n      \n      {error && (\n        <div className=\"error-message\">\n          {error}\n        </div>\n      )}\n      \n      <div className=\"main-layout\">\n        <aside className=\"left-panel\">\n          <h3>Exercises</h3>\n          {exercises.map((exercise) => (\n            <button\n              key={exercise}\n              className={`exercise-button ${selectedExercise === exercise ? 'active' : ''}`}\n              onClick={() => {\n                setSelectedExercise(exercise);\n                setRepCount(0);\n                setFeedback('');\n                stopScan();\n              }}\n              disabled={isScanning}\n            >\n              {exercise}\n            </button>\n          ))}\n        </aside>\n\n        <main className=\"content-panel\">\n          <div className=\"canvas-area\">\n            <video \n              ref={videoRef} \n              className=\"video-feed\" \n              width=\"640\" \n              height=\"480\" \n              playsInline\n            />\n            <canvas \n              ref={canvasRef} \n              className=\"canvas-overlay\" \n              width=\"640\" \n              height=\"480\" \n            />\n          </div>\n\n          <div className=\"feedback-section\">\n            <p><strong>Feedback:</strong> {feedback || 'No feedback yet'}</p>\n            <p><strong>Reps:</strong> {repCount}</p>\n          </div>\n\n          <div className=\"controls\">\n            <button \n              className=\"control-btn start\" \n              onClick={startScan} \n              disabled={isScanning || isLoading || !selectedExercise}\n            >\n              {isLoading ? 'Initializing...' : 'Start Scan'}\n            </button>\n            <button \n              className=\"control-btn stop\" \n              onClick={stopScan} \n              disabled={!isScanning}\n            >\n              Stop Scan\n            </button>\n            <button \n              className=\"control-btn save\" \n              onClick={saveData}\n              disabled={repCount === 0}\n            >\n              Save\n            </button>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default ExercisePage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,KAAKC,EAAE,MAAM,kBAAkB;AACtC,OAAO,KAAKC,aAAa,MAAM,mCAAmC;AAClE,OAAO,gCAAgC;AACvC,OAAO,oBAAoB;AAC3B,SAASC,iBAAiB,QAAQ,0BAA0B;;AAE5D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,CAClB,CAAC,eAAe,EAAE,gBAAgB,CAAC,EACnC,CAAC,eAAe,EAAE,UAAU,CAAC,EAC7B,CAAC,gBAAgB,EAAE,WAAW,CAAC,EAC/B,CAAC,UAAU,EAAE,WAAW,CAAC,EACzB,CAAC,eAAe,EAAE,YAAY,CAAC,EAC/B,CAAC,YAAY,EAAE,YAAY,CAAC,EAC5B,CAAC,gBAAgB,EAAE,aAAa,CAAC,EACjC,CAAC,aAAa,EAAE,aAAa,CAAC,EAC9B,CAAC,UAAU,EAAE,WAAW,CAAC,EACzB,CAAC,WAAW,EAAE,YAAY,CAAC,EAC3B,CAAC,WAAW,EAAE,YAAY,CAAC,EAC3B,CAAC,YAAY,EAAE,aAAa,CAAC,CAC9B;AAED,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,UAAU,CAAC;EACzDC,KAAK,EAAE,CAAC,kBAAkB,EAAE,eAAe,EAAE,cAAc,CAAC;EAC5DC,KAAK,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,gBAAgB;AACvD,CAAC;AAED,MAAMC,GAAG,GAAG,EAAE,CAAC,CAAC;;AAEhB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAK,CAAC,GAAGd,SAAS,CAAC,CAAC;EAC5B,MAAMe,QAAQ,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMmB,SAAS,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMoB,WAAW,GAAGpB,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMqB,UAAU,GAAGrB,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMsB,UAAU,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMuB,WAAW,GAAGvB,MAAM,CAAC,CAAC,CAAC;EAE7B,MAAM,CAACwB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC+B,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiC,KAAK,EAAEC,QAAQ,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMmC,SAAS,GAAG1B,WAAW,CAACO,IAAI,CAAC,IAAI,EAAE;EAEzCf,SAAS,CAAC,MAAM;IACd;IACA,MAAMmC,MAAM,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI;QACF,MAAMjC,EAAE,CAACkC,UAAU,CAAC,OAAO,CAAC;QAC5B,MAAMlC,EAAE,CAACmC,KAAK,CAAC,CAAC;MAClB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACP,KAAK,CAAC,mCAAmC,EAAEM,GAAG,CAAC;QACvDL,QAAQ,CAAC,kEAAkE,CAAC;MAC9E;IACF,CAAC;IAEDE,MAAM,CAAC,CAAC;IAER,OAAO,MAAM;MACX;MACAK,QAAQ,CAAC,CAAC;MACV,IAAItB,WAAW,CAACuB,OAAO,EAAE;QACvBvB,WAAW,CAACuB,OAAO,CAACC,OAAO,CAAC,CAAC;MAC/B;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,aAAa,GAAIC,IAAI,IAAK;IAC9B,IAAI,CAAC3B,SAAS,CAACwB,OAAO,IAAI,CAACG,IAAI,EAAE;IAEjC,MAAMC,GAAG,GAAG5B,SAAS,CAACwB,OAAO,CAACK,UAAU,CAAC,IAAI,CAAC;IAC9CD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE9B,SAAS,CAACwB,OAAO,CAACO,KAAK,EAAE/B,SAAS,CAACwB,OAAO,CAACQ,MAAM,CAAC;;IAEtE;IACAJ,GAAG,CAACK,WAAW,GAAG,OAAO;IACzBL,GAAG,CAACM,SAAS,GAAG,CAAC;IAEjB5C,WAAW,CAAC6C,OAAO,CAAC,CAAC,CAACC,MAAM,EAAEC,MAAM,CAAC,KAAK;MACxC,MAAMC,GAAG,GAAGX,IAAI,CAACY,SAAS,CAACC,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACC,IAAI,KAAKN,MAAM,CAAC;MACzD,MAAMO,GAAG,GAAGhB,IAAI,CAACY,SAAS,CAACC,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACC,IAAI,KAAKL,MAAM,CAAC;MAEzD,IAAIC,GAAG,IAAIK,GAAG,IAAIL,GAAG,CAACM,KAAK,GAAG,GAAG,IAAID,GAAG,CAACC,KAAK,GAAG,GAAG,EAAE;QACpDhB,GAAG,CAACiB,SAAS,CAAC,CAAC;QACfjB,GAAG,CAACkB,MAAM,CAACR,GAAG,CAACS,CAAC,EAAET,GAAG,CAACU,CAAC,CAAC;QACxBpB,GAAG,CAACqB,MAAM,CAACN,GAAG,CAACI,CAAC,EAAEJ,GAAG,CAACK,CAAC,CAAC;QACxBpB,GAAG,CAACsB,MAAM,CAAC,CAAC;MACd;IACF,CAAC,CAAC;;IAEF;IACAvB,IAAI,CAACY,SAAS,CAACJ,OAAO,CAAEM,EAAE,IAAK;MAC7B,IAAIA,EAAE,CAACG,KAAK,GAAG,GAAG,EAAE;QAClBhB,GAAG,CAACiB,SAAS,CAAC,CAAC;QACfjB,GAAG,CAACuB,GAAG,CAACV,EAAE,CAACM,CAAC,EAAEN,EAAE,CAACO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGI,IAAI,CAACC,EAAE,CAAC;QACtCzB,GAAG,CAAC0B,SAAS,GAAG,MAAM;QACtB1B,GAAG,CAAC2B,IAAI,CAAC,CAAC;MACZ;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,SAAS,IAAK;IACxC,IAAI,CAAClD,UAAU,IAAI,CAACR,QAAQ,CAACyB,OAAO,IAAI,CAACxB,SAAS,CAACwB,OAAO,IAAI,CAACvB,WAAW,CAACuB,OAAO,EAAE;MAClF;IACF;;IAEA;IACA,IAAIiC,SAAS,GAAGrD,WAAW,CAACoB,OAAO,GAAG,IAAI,GAAG7B,GAAG,EAAE;MAChDS,WAAW,CAACoB,OAAO,GAAGiC,SAAS;MAE/B,IAAI;QACF,MAAMC,KAAK,GAAG,MAAMzD,WAAW,CAACuB,OAAO,CAACmC,aAAa,CAAC5D,QAAQ,CAACyB,OAAO,CAAC;QAEvE,IAAIkC,KAAK,IAAIA,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;UAC7BlC,aAAa,CAACgC,KAAK,CAAC,CAAC,CAAC,CAAC;UAEvB,IAAIrD,gBAAgB,KAAK,cAAc,IAAIF,UAAU,CAACqB,OAAO,EAAE;YAC7D,MAAMqC,MAAM,GAAG1D,UAAU,CAACqB,OAAO,CAACsC,OAAO,CAACJ,KAAK,CAAC,CAAC,CAAC,CAACnB,SAAS,CAAC;YAC7D3B,WAAW,CAACiD,MAAM,CAACE,IAAI,CAAC;YACxBjD,WAAW,CAAC+C,MAAM,CAAChD,QAAQ,CAAC;UAC9B;QACF;MACF,CAAC,CAAC,OAAOQ,GAAG,EAAE;QACZC,OAAO,CAACP,KAAK,CAAC,kBAAkB,EAAEM,GAAG,CAAC;QACtCP,WAAW,CAAC,6BAA6B,CAAC;MAC5C;IACF;IAEAZ,UAAU,CAACsB,OAAO,GAAGwC,qBAAqB,CAACR,YAAY,CAAC;EAC1D,CAAC;EAED,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAAC5D,gBAAgB,EAAE;MACrBS,WAAW,CAAC,iCAAiC,CAAC;MAC9C;IACF;IAEAJ,YAAY,CAAC,IAAI,CAAC;IAClBM,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF;MACA,IAAIX,gBAAgB,KAAK,cAAc,EAAE;QACvCF,UAAU,CAACqB,OAAO,GAAG,IAAIrC,iBAAiB,CAAC,CAAC;MAC9C;;MAEA;MACA,MAAM+E,QAAQ,GAAG,MAAMhF,aAAa,CAACiF,cAAc,CACjDjF,aAAa,CAACkF,eAAe,CAACC,OAAO,EACrC;QACEC,SAAS,EAAEpF,aAAa,CAACqF,OAAO,CAACD,SAAS,CAACE;MAC7C,CACF,CAAC;MACDvE,WAAW,CAACuB,OAAO,GAAG0C,QAAQ;;MAE9B;MACA,MAAMO,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QACvDC,KAAK,EAAE;UACL9C,KAAK,EAAE,GAAG;UACVC,MAAM,EAAE,GAAG;UACX8C,UAAU,EAAE;QACd;MACF,CAAC,CAAC;MAEF/E,QAAQ,CAACyB,OAAO,CAACuD,SAAS,GAAGN,MAAM;MACnC,MAAM1E,QAAQ,CAACyB,OAAO,CAACwD,IAAI,CAAC,CAAC;;MAE7B;MACA,IAAI7E,UAAU,CAACqB,OAAO,EAAE;QACtBrB,UAAU,CAACqB,OAAO,CAACyD,KAAK,CAAC,CAAC;MAC5B;MACArE,WAAW,CAAC,CAAC,CAAC;MACdE,WAAW,CAAC,uBAAuB,CAAC;MACpCN,aAAa,CAAC,IAAI,CAAC;MACnBJ,WAAW,CAACoB,OAAO,GAAG,CAAC;MACvBtB,UAAU,CAACsB,OAAO,GAAGwC,qBAAqB,CAACR,YAAY,CAAC;IAE1D,CAAC,CAAC,OAAOnC,GAAG,EAAE;MACZC,OAAO,CAACP,KAAK,CAAC,mBAAmB,EAAEM,GAAG,CAAC;MACvCL,QAAQ,CAAC,oBAAoBK,GAAG,CAAC6D,OAAO,EAAE,CAAC;MAC3C3D,QAAQ,CAAC,CAAC;IACZ,CAAC,SAAS;MACRb,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMa,QAAQ,GAAGA,CAAA,KAAM;IAAA,IAAA4D,iBAAA,EAAAC,kBAAA;IACrB5E,aAAa,CAAC,KAAK,CAAC;IACpB6E,oBAAoB,CAACnF,UAAU,CAACsB,OAAO,CAAC;IAExC,KAAA2D,iBAAA,GAAIpF,QAAQ,CAACyB,OAAO,cAAA2D,iBAAA,eAAhBA,iBAAA,CAAkBJ,SAAS,EAAE;MAC/BhF,QAAQ,CAACyB,OAAO,CAACuD,SAAS,CAACO,SAAS,CAAC,CAAC,CAACnD,OAAO,CAACoD,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACrEzF,QAAQ,CAACyB,OAAO,CAACuD,SAAS,GAAG,IAAI;IACnC;IAEA,MAAMnD,GAAG,IAAAwD,kBAAA,GAAGpF,SAAS,CAACwB,OAAO,cAAA4D,kBAAA,uBAAjBA,kBAAA,CAAmBvD,UAAU,CAAC,IAAI,CAAC;IAC/CD,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE9B,SAAS,CAACwB,OAAO,CAACO,KAAK,EAAE/B,SAAS,CAACwB,OAAO,CAACQ,MAAM,CAAC;IAEvElB,WAAW,CAAC,mBAAmB,CAAC;EAClC,CAAC;EAED,MAAM2E,QAAQ,GAAGA,CAAA,KAAM;IACrBC,KAAK,CAAC,SAAS/E,QAAQ,aAAaN,gBAAgB,EAAE,CAAC;IACvD;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKsG,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCvG,OAAA;MAAQsG,SAAS,EAAC,SAAS;MAAAC,QAAA,GAAC,kBACf,EAACvF,gBAAgB,IAAI,iBAAiB;IAAA;MAAAwF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EAERjF,KAAK,iBACJ1B,OAAA;MAAKsG,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3B7E;IAAK;MAAA8E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAED3G,OAAA;MAAKsG,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BvG,OAAA;QAAOsG,SAAS,EAAC,YAAY;QAAAC,QAAA,gBAC3BvG,OAAA;UAAAuG,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACjB/E,SAAS,CAACgF,GAAG,CAAEC,QAAQ,iBACtB7G,OAAA;UAEEsG,SAAS,EAAE,mBAAmBtF,gBAAgB,KAAK6F,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC9EC,OAAO,EAAEA,CAAA,KAAM;YACb7F,mBAAmB,CAAC4F,QAAQ,CAAC;YAC7BtF,WAAW,CAAC,CAAC,CAAC;YACdE,WAAW,CAAC,EAAE,CAAC;YACfS,QAAQ,CAAC,CAAC;UACZ,CAAE;UACF6E,QAAQ,EAAE7F,UAAW;UAAAqF,QAAA,EAEpBM;QAAQ,GAVJA,QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWP,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAER3G,OAAA;QAAMsG,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC7BvG,OAAA;UAAKsG,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BvG,OAAA;YACEgH,GAAG,EAAEtG,QAAS;YACd4F,SAAS,EAAC,YAAY;YACtB5D,KAAK,EAAC,KAAK;YACXC,MAAM,EAAC,KAAK;YACZsE,WAAW;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,eACF3G,OAAA;YACEgH,GAAG,EAAErG,SAAU;YACf2F,SAAS,EAAC,gBAAgB;YAC1B5D,KAAK,EAAC,KAAK;YACXC,MAAM,EAAC;UAAK;YAAA6D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN3G,OAAA;UAAKsG,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/BvG,OAAA;YAAAuG,QAAA,gBAAGvG,OAAA;cAAAuG,QAAA,EAAQ;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACnF,QAAQ,IAAI,iBAAiB;UAAA;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjE3G,OAAA;YAAAuG,QAAA,gBAAGvG,OAAA;cAAAuG,QAAA,EAAQ;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACrF,QAAQ;UAAA;YAAAkF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,eAEN3G,OAAA;UAAKsG,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACvBvG,OAAA;YACEsG,SAAS,EAAC,mBAAmB;YAC7BQ,OAAO,EAAElC,SAAU;YACnBmC,QAAQ,EAAE7F,UAAU,IAAIE,SAAS,IAAI,CAACJ,gBAAiB;YAAAuF,QAAA,EAEtDnF,SAAS,GAAG,iBAAiB,GAAG;UAAY;YAAAoF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC,eACT3G,OAAA;YACEsG,SAAS,EAAC,kBAAkB;YAC5BQ,OAAO,EAAE5E,QAAS;YAClB6E,QAAQ,EAAE,CAAC7F,UAAW;YAAAqF,QAAA,EACvB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT3G,OAAA;YACEsG,SAAS,EAAC,kBAAkB;YAC5BQ,OAAO,EAAEV,QAAS;YAClBW,QAAQ,EAAEzF,QAAQ,KAAK,CAAE;YAAAiF,QAAA,EAC1B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnG,EAAA,CApQID,YAAY;EAAA,QACCZ,SAAS;AAAA;AAAAuH,EAAA,GADtB3G,YAAY;AAsQlB,eAAeA,YAAY;AAAC,IAAA2G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}