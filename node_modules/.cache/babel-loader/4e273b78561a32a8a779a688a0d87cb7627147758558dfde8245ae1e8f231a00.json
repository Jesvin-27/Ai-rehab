{"ast":null,"code":"let direction = 'forward';\nlet prevAngle = 0;\nlet completedReps = 0;\nexport function resetArmCircles() {\n  direction = 'forward';\n  prevAngle = 0;\n  completedReps = 0;\n}\nexport function processArmCircles(landmarks) {\n  const leftShoulder = landmarks[11];\n  const leftElbow = landmarks[13];\n  const leftWrist = landmarks[15];\n  if (!leftShoulder || !leftElbow || !leftWrist) {\n    return {\n      speak: 'Ensure your left arm is visible'\n    };\n  }\n  const getAngle = (a, b, c) => {\n    const ab = {\n      x: a.x - b.x,\n      y: a.y - b.y\n    };\n    const cb = {\n      x: c.x - b.x,\n      y: c.y - b.y\n    };\n    const dot = ab.x * cb.x + ab.y * cb.y;\n    const magAB = Math.sqrt(ab.x ** 2 + ab.y ** 2);\n    const magCB = Math.sqrt(cb.x ** 2 + cb.y ** 2);\n    return Math.acos(dot / (magAB * magCB)) * 180 / Math.PI;\n  };\n  const angle = getAngle(leftShoulder, leftElbow, leftWrist);\n  if (direction === 'forward' && angle < 90 && prevAngle >= 90) {\n    direction = 'backward';\n  } else if (direction === 'backward' && angle > 150 && prevAngle <= 150) {\n    direction = 'forward';\n    completedReps++;\n    return {\n      speak: 'Circle complete',\n      rep: 1\n    };\n  }\n  prevAngle = angle;\n  return null;\n}","map":{"version":3,"names":["direction","prevAngle","completedReps","resetArmCircles","processArmCircles","landmarks","leftShoulder","leftElbow","leftWrist","speak","getAngle","a","b","c","ab","x","y","cb","dot","magAB","Math","sqrt","magCB","acos","PI","angle","rep"],"sources":["/Users/jesvinblazegmail.com/Documents/Ai-rehab/src/exercises/ArmCircles.js"],"sourcesContent":["let direction = 'forward';\nlet prevAngle = 0;\nlet completedReps = 0;\n\nexport function resetArmCircles() {\n  direction = 'forward';\n  prevAngle = 0;\n  completedReps = 0;\n}\n\nexport function processArmCircles(landmarks) {\n  const leftShoulder = landmarks[11];\n  const leftElbow = landmarks[13];\n  const leftWrist = landmarks[15];\n\n  if (!leftShoulder || !leftElbow || !leftWrist) {\n    return { speak: 'Ensure your left arm is visible' };\n  }\n\n  const getAngle = (a, b, c) => {\n    const ab = { x: a.x - b.x, y: a.y - b.y };\n    const cb = { x: c.x - b.x, y: c.y - b.y };\n    const dot = ab.x * cb.x + ab.y * cb.y;\n    const magAB = Math.sqrt(ab.x ** 2 + ab.y ** 2);\n    const magCB = Math.sqrt(cb.x ** 2 + cb.y ** 2);\n    return (Math.acos(dot / (magAB * magCB)) * 180) / Math.PI;\n  };\n\n  const angle = getAngle(leftShoulder, leftElbow, leftWrist);\n\n  if (direction === 'forward' && angle < 90 && prevAngle >= 90) {\n    direction = 'backward';\n  } else if (direction === 'backward' && angle > 150 && prevAngle <= 150) {\n    direction = 'forward';\n    completedReps++;\n    return { speak: 'Circle complete', rep: 1 };\n  }\n\n  prevAngle = angle;\n  return null;\n}\n"],"mappings":"AAAA,IAAIA,SAAS,GAAG,SAAS;AACzB,IAAIC,SAAS,GAAG,CAAC;AACjB,IAAIC,aAAa,GAAG,CAAC;AAErB,OAAO,SAASC,eAAeA,CAAA,EAAG;EAChCH,SAAS,GAAG,SAAS;EACrBC,SAAS,GAAG,CAAC;EACbC,aAAa,GAAG,CAAC;AACnB;AAEA,OAAO,SAASE,iBAAiBA,CAACC,SAAS,EAAE;EAC3C,MAAMC,YAAY,GAAGD,SAAS,CAAC,EAAE,CAAC;EAClC,MAAME,SAAS,GAAGF,SAAS,CAAC,EAAE,CAAC;EAC/B,MAAMG,SAAS,GAAGH,SAAS,CAAC,EAAE,CAAC;EAE/B,IAAI,CAACC,YAAY,IAAI,CAACC,SAAS,IAAI,CAACC,SAAS,EAAE;IAC7C,OAAO;MAAEC,KAAK,EAAE;IAAkC,CAAC;EACrD;EAEA,MAAMC,QAAQ,GAAGA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,KAAK;IAC5B,MAAMC,EAAE,GAAG;MAAEC,CAAC,EAAEJ,CAAC,CAACI,CAAC,GAAGH,CAAC,CAACG,CAAC;MAAEC,CAAC,EAAEL,CAAC,CAACK,CAAC,GAAGJ,CAAC,CAACI;IAAE,CAAC;IACzC,MAAMC,EAAE,GAAG;MAAEF,CAAC,EAAEF,CAAC,CAACE,CAAC,GAAGH,CAAC,CAACG,CAAC;MAAEC,CAAC,EAAEH,CAAC,CAACG,CAAC,GAAGJ,CAAC,CAACI;IAAE,CAAC;IACzC,MAAME,GAAG,GAAGJ,EAAE,CAACC,CAAC,GAAGE,EAAE,CAACF,CAAC,GAAGD,EAAE,CAACE,CAAC,GAAGC,EAAE,CAACD,CAAC;IACrC,MAAMG,KAAK,GAAGC,IAAI,CAACC,IAAI,CAACP,EAAE,CAACC,CAAC,IAAI,CAAC,GAAGD,EAAE,CAACE,CAAC,IAAI,CAAC,CAAC;IAC9C,MAAMM,KAAK,GAAGF,IAAI,CAACC,IAAI,CAACJ,EAAE,CAACF,CAAC,IAAI,CAAC,GAAGE,EAAE,CAACD,CAAC,IAAI,CAAC,CAAC;IAC9C,OAAQI,IAAI,CAACG,IAAI,CAACL,GAAG,IAAIC,KAAK,GAAGG,KAAK,CAAC,CAAC,GAAG,GAAG,GAAIF,IAAI,CAACI,EAAE;EAC3D,CAAC;EAED,MAAMC,KAAK,GAAGf,QAAQ,CAACJ,YAAY,EAAEC,SAAS,EAAEC,SAAS,CAAC;EAE1D,IAAIR,SAAS,KAAK,SAAS,IAAIyB,KAAK,GAAG,EAAE,IAAIxB,SAAS,IAAI,EAAE,EAAE;IAC5DD,SAAS,GAAG,UAAU;EACxB,CAAC,MAAM,IAAIA,SAAS,KAAK,UAAU,IAAIyB,KAAK,GAAG,GAAG,IAAIxB,SAAS,IAAI,GAAG,EAAE;IACtED,SAAS,GAAG,SAAS;IACrBE,aAAa,EAAE;IACf,OAAO;MAAEO,KAAK,EAAE,iBAAiB;MAAEiB,GAAG,EAAE;IAAE,CAAC;EAC7C;EAEAzB,SAAS,GAAGwB,KAAK;EACjB,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}