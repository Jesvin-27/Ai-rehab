{"ast":null,"code":"// src/exercises/ArmCircles.js\nlet armCircleState = 'rest';\nlet armReps = 0;\nexport function processArmCircles(pose, speak, setReps) {\n  const keypoints = pose.keypoints;\n  const rightWrist = keypoints.find(kp => kp.name === 'right_wrist');\n  const rightShoulder = keypoints.find(kp => kp.name === 'right_shoulder');\n  if (!rightWrist || !rightShoulder || rightWrist.score < 0.5 || rightShoulder.score < 0.5) {\n    speak('Make sure your right arm is visible');\n    return;\n  }\n  const wristAboveShoulder = rightWrist.y < rightShoulder.y;\n  if (wristAboveShoulder && armCircleState === 'rest') {\n    armCircleState = 'up';\n    speak('Good! Now lower your arm.');\n  }\n  if (!wristAboveShoulder && armCircleState === 'up') {\n    armCircleState = 'rest';\n    armReps += 1;\n    speak('Great! One arm circle completed.');\n    setReps(armReps);\n  }\n}\nexport function resetArmCircles() {\n  armCircleState = 'rest';\n  armReps = 0;\n}","map":{"version":3,"names":["armCircleState","armReps","processArmCircles","pose","speak","setReps","keypoints","rightWrist","find","kp","name","rightShoulder","score","wristAboveShoulder","y","resetArmCircles"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/exercises/ArmCircles.js"],"sourcesContent":["// src/exercises/ArmCircles.js\nlet armCircleState = 'rest';\nlet armReps = 0;\n\nexport function processArmCircles(pose, speak, setReps) {\n  const keypoints = pose.keypoints;\n  const rightWrist = keypoints.find(kp => kp.name === 'right_wrist');\n  const rightShoulder = keypoints.find(kp => kp.name === 'right_shoulder');\n\n  if (!rightWrist || !rightShoulder || rightWrist.score < 0.5 || rightShoulder.score < 0.5) {\n    speak('Make sure your right arm is visible');\n    return;\n  }\n\n  const wristAboveShoulder = rightWrist.y < rightShoulder.y;\n\n  if (wristAboveShoulder && armCircleState === 'rest') {\n    armCircleState = 'up';\n    speak('Good! Now lower your arm.');\n  }\n\n  if (!wristAboveShoulder && armCircleState === 'up') {\n    armCircleState = 'rest';\n    armReps += 1;\n    speak('Great! One arm circle completed.');\n    setReps(armReps);\n  }\n}\n\nexport function resetArmCircles() {\n  armCircleState = 'rest';\n  armReps = 0;\n}\n"],"mappings":"AAAA;AACA,IAAIA,cAAc,GAAG,MAAM;AAC3B,IAAIC,OAAO,GAAG,CAAC;AAEf,OAAO,SAASC,iBAAiBA,CAACC,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAE;EACtD,MAAMC,SAAS,GAAGH,IAAI,CAACG,SAAS;EAChC,MAAMC,UAAU,GAAGD,SAAS,CAACE,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACC,IAAI,KAAK,aAAa,CAAC;EAClE,MAAMC,aAAa,GAAGL,SAAS,CAACE,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACC,IAAI,KAAK,gBAAgB,CAAC;EAExE,IAAI,CAACH,UAAU,IAAI,CAACI,aAAa,IAAIJ,UAAU,CAACK,KAAK,GAAG,GAAG,IAAID,aAAa,CAACC,KAAK,GAAG,GAAG,EAAE;IACxFR,KAAK,CAAC,qCAAqC,CAAC;IAC5C;EACF;EAEA,MAAMS,kBAAkB,GAAGN,UAAU,CAACO,CAAC,GAAGH,aAAa,CAACG,CAAC;EAEzD,IAAID,kBAAkB,IAAIb,cAAc,KAAK,MAAM,EAAE;IACnDA,cAAc,GAAG,IAAI;IACrBI,KAAK,CAAC,2BAA2B,CAAC;EACpC;EAEA,IAAI,CAACS,kBAAkB,IAAIb,cAAc,KAAK,IAAI,EAAE;IAClDA,cAAc,GAAG,MAAM;IACvBC,OAAO,IAAI,CAAC;IACZG,KAAK,CAAC,kCAAkC,CAAC;IACzCC,OAAO,CAACJ,OAAO,CAAC;EAClB;AACF;AAEA,OAAO,SAASc,eAAeA,CAAA,EAAG;EAChCf,cAAc,GAAG,MAAM;EACvBC,OAAO,GAAG,CAAC;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}