{"ast":null,"code":"var _jsxFileName = \"/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js\",\n  _s = $RefreshSig$();\n// src/pages/ExercisePage.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ExercisePage.css';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posedetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nimport { processChairSquat, resetChairSquat } from '../exercises/ChairSquats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExercisePage = () => {\n  _s();\n  const {\n    type\n  } = useParams();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const detectorRef = useRef(null);\n  const speakRef = useRef(window.speechSynthesis);\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [repCount, setRepCount] = useState(0);\n  const [poseStatus, setPoseStatus] = useState('');\n  const [timer, setTimer] = useState(0);\n  const [intervalId, setIntervalId] = useState(null);\n  const exerciseData = {\n    cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n    neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n    ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls'],\n    physio: ['Arm Circles', 'Shoulder Rolls', 'Hydration Tips']\n  };\n  const exercises = exerciseData[type] || [];\n  const speak = text => {\n    if (!speakRef.current.speaking) {\n      const utter = new SpeechSynthesisUtterance(text);\n      speakRef.current.speak(utter);\n    }\n  };\n  const startTimer = () => {\n    const id = setInterval(() => {\n      setTimer(prev => prev + 1);\n    }, 1000);\n    setIntervalId(id);\n  };\n  const stopTimer = () => {\n    clearInterval(intervalId);\n    setIntervalId(null);\n  };\n  const reset = () => {\n    setRepCount(0);\n    setPoseStatus('');\n    setTimer(0);\n    resetChairSquat();\n  };\n  const handleStart = () => {\n    if (!selectedExercise) return alert('Select an exercise first!');\n    setIsScanning(true);\n    reset();\n    startTimer();\n  };\n  const handleStop = () => {\n    setIsScanning(false);\n    stopTimer();\n    if (speakRef.current.speaking) speakRef.current.cancel();\n  };\n  const handleSave = () => {\n    alert(`Saved ${repCount} reps in ${timer} sec`);\n  };\n  useEffect(() => {\n    const runPose = async () => {\n      await tf.setBackend('webgl');\n      detectorRef.current = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n        modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING\n      });\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        videoRef.current.onloadedmetadata = () => videoRef.current.play();\n      }\n    };\n    runPose();\n  }, []);\n  useEffect(() => {\n    const detect = async () => {\n      if (!isScanning || !videoRef.current || videoRef.current.readyState !== 4 || !detectorRef.current) {\n        requestAnimationFrame(detect);\n        return;\n      }\n      const poses = await detectorRef.current.estimatePoses(videoRef.current);\n      drawResults(poses);\n      if (selectedExercise === 'Chair Squats') {\n        const {\n          isCorrect,\n          count,\n          feedback\n        } = processChairSquat(poses[0]);\n        if (count > repCount) setRepCount(count);\n        setPoseStatus(feedback);\n        if (!isCorrect) {\n          speak('Posture incorrect');\n        } else if (feedback === 'Posture correct') {\n          speak('Posture correct');\n        }\n      }\n      requestAnimationFrame(detect);\n    };\n    const drawResults = poses => {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      poses.forEach(pose => {\n        pose.keypoints.forEach(keypoint => {\n          if (keypoint.score > 0.4) {\n            ctx.beginPath();\n            ctx.arc(keypoint.x, keypoint.y, 5, 0, 2 * Math.PI);\n            ctx.fillStyle = 'lime';\n            ctx.fill();\n          }\n        });\n      });\n    };\n    detect();\n  }, [isScanning, selectedExercise]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"top-bar\",\n      children: [\"AI-Rehab \\u2013 \", selectedExercise || 'Select Exercise']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"left-panel\",\n        children: exercises.map(exercise => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `exercise-button ${selectedExercise === exercise ? 'active' : ''}`,\n          onClick: () => {\n            setSelectedExercise(exercise);\n            reset();\n          },\n          children: exercise\n        }, exercise, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"content-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canvas-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            width: \"640\",\n            height: \"480\",\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            width: \"640\",\n            height: \"480\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 16\n            }, this), \" \", poseStatus]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Reps:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 16\n            }, this), \" \", repCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 16\n            }, this), \" \", timer, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn start\",\n            onClick: handleStart,\n            children: \"Start Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn stop\",\n            onClick: handleStop,\n            children: \"Stop Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn save\",\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(ExercisePage, \"nBeya9ki2JPW6eUYf2bS+lEGK/U=\", false, function () {\n  return [useParams];\n});\n_c = ExercisePage;\nexport default ExercisePage;\nvar _c;\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","tf","posedetection","processChairSquat","resetChairSquat","jsxDEV","_jsxDEV","ExercisePage","_s","type","videoRef","canvasRef","detectorRef","speakRef","window","speechSynthesis","selectedExercise","setSelectedExercise","isScanning","setIsScanning","repCount","setRepCount","poseStatus","setPoseStatus","timer","setTimer","intervalId","setIntervalId","exerciseData","cardiac","neuro","ortho","physio","exercises","speak","text","current","speaking","utter","SpeechSynthesisUtterance","startTimer","id","setInterval","prev","stopTimer","clearInterval","reset","handleStart","alert","handleStop","cancel","handleSave","runPose","setBackend","createDetector","SupportedModels","MoveNet","modelType","movenet","SINGLEPOSE_LIGHTNING","stream","navigator","mediaDevices","getUserMedia","video","srcObject","onloadedmetadata","play","detect","readyState","requestAnimationFrame","poses","estimatePoses","drawResults","isCorrect","count","feedback","canvas","ctx","getContext","clearRect","width","height","forEach","pose","keypoints","keypoint","score","beginPath","arc","x","y","Math","PI","fillStyle","fill","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","exercise","onClick","ref","style","display","_c","$RefreshReg$"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js"],"sourcesContent":["// src/pages/ExercisePage.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ExercisePage.css';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posedetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nimport { processChairSquat, resetChairSquat } from '../exercises/ChairSquats';\n\nconst ExercisePage = () => {\n  const { type } = useParams();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const detectorRef = useRef(null);\n  const speakRef = useRef(window.speechSynthesis);\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [repCount, setRepCount] = useState(0);\n  const [poseStatus, setPoseStatus] = useState('');\n  const [timer, setTimer] = useState(0);\n  const [intervalId, setIntervalId] = useState(null);\n\n  const exerciseData = {\n    cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n    neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n    ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls'],\n    physio: ['Arm Circles', 'Shoulder Rolls', 'Hydration Tips'],\n  };\n\n  const exercises = exerciseData[type] || [];\n\n  const speak = (text) => {\n    if (!speakRef.current.speaking) {\n      const utter = new SpeechSynthesisUtterance(text);\n      speakRef.current.speak(utter);\n    }\n  };\n\n  const startTimer = () => {\n    const id = setInterval(() => {\n      setTimer((prev) => prev + 1);\n    }, 1000);\n    setIntervalId(id);\n  };\n\n  const stopTimer = () => {\n    clearInterval(intervalId);\n    setIntervalId(null);\n  };\n\n  const reset = () => {\n    setRepCount(0);\n    setPoseStatus('');\n    setTimer(0);\n    resetChairSquat();\n  };\n\n  const handleStart = () => {\n    if (!selectedExercise) return alert('Select an exercise first!');\n    setIsScanning(true);\n    reset();\n    startTimer();\n  };\n\n  const handleStop = () => {\n    setIsScanning(false);\n    stopTimer();\n    if (speakRef.current.speaking) speakRef.current.cancel();\n  };\n\n  const handleSave = () => {\n    alert(`Saved ${repCount} reps in ${timer} sec`);\n  };\n\n  useEffect(() => {\n    const runPose = async () => {\n      await tf.setBackend('webgl');\n      detectorRef.current = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n        modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING,\n      });\n\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        videoRef.current.onloadedmetadata = () => videoRef.current.play();\n      }\n    };\n\n    runPose();\n  }, []);\n\n  useEffect(() => {\n    const detect = async () => {\n      if (\n        !isScanning ||\n        !videoRef.current ||\n        videoRef.current.readyState !== 4 ||\n        !detectorRef.current\n      ) {\n        requestAnimationFrame(detect);\n        return;\n      }\n\n      const poses = await detectorRef.current.estimatePoses(videoRef.current);\n      drawResults(poses);\n\n      if (selectedExercise === 'Chair Squats') {\n        const { isCorrect, count, feedback } = processChairSquat(poses[0]);\n        if (count > repCount) setRepCount(count);\n        setPoseStatus(feedback);\n\n        if (!isCorrect) {\n          speak('Posture incorrect');\n        } else if (feedback === 'Posture correct') {\n          speak('Posture correct');\n        }\n      }\n\n      requestAnimationFrame(detect);\n    };\n\n    const drawResults = (poses) => {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      poses.forEach((pose) => {\n        pose.keypoints.forEach((keypoint) => {\n          if (keypoint.score > 0.4) {\n            ctx.beginPath();\n            ctx.arc(keypoint.x, keypoint.y, 5, 0, 2 * Math.PI);\n            ctx.fillStyle = 'lime';\n            ctx.fill();\n          }\n        });\n      });\n    };\n\n    detect();\n  }, [isScanning, selectedExercise]);\n\n  return (\n    <div className=\"exercise-container\">\n      <header className=\"top-bar\">AI-Rehab – {selectedExercise || 'Select Exercise'}</header>\n      <div className=\"main-layout\">\n        <aside className=\"left-panel\">\n          {exercises.map((exercise) => (\n            <button\n              key={exercise}\n              className={`exercise-button ${selectedExercise === exercise ? 'active' : ''}`}\n              onClick={() => {\n                setSelectedExercise(exercise);\n                reset();\n              }}\n            >\n              {exercise}\n            </button>\n          ))}\n        </aside>\n\n        <main className=\"content-panel\">\n          <div className=\"canvas-wrapper\">\n            <video ref={videoRef} width=\"640\" height=\"480\" style={{ display: 'none' }} />\n            <canvas ref={canvasRef} width=\"640\" height=\"480\" />\n          </div>\n\n          <div className=\"controls\">\n            <p><strong>Status:</strong> {poseStatus}</p>\n            <p><strong>Reps:</strong> {repCount}</p>\n            <p><strong>Time:</strong> {timer}s</p>\n            <button className=\"control-btn start\" onClick={handleStart}>Start Scan</button>\n            <button className=\"control-btn stop\" onClick={handleStop}>Stop Scan</button>\n            <button className=\"control-btn save\" onClick={handleSave}>Save</button>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default ExercisePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}