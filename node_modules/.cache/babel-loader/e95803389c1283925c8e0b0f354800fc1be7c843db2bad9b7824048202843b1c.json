{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AddN, upcastType } from '@tensorflow/tfjs-core';\nimport { AddNPackedProgram } from '../addn_packed_webgpu';\nimport { identity } from './Identity';\nexport function addN(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const tensors = inputs;\n  if (tensors.length === 1) {\n    return identity({\n      inputs: {\n        x: tensors[0]\n      },\n      backend\n    });\n  }\n  const dtype = tensors.map(t => t.dtype).reduce((d1, d2) => upcastType(d1, d2));\n  const shapes = tensors.map(t => t.shape);\n  const program = new AddNPackedProgram(shapes);\n  return backend.runWebGPUProgram(program, tensors, dtype);\n}\nexport const addNConfig = {\n  kernelName: AddN,\n  backendName: 'webgpu',\n  kernelFunc: addN\n};","map":{"version":3,"names":["AddN","upcastType","AddNPackedProgram","identity","addN","args","inputs","backend","tensors","length","x","dtype","map","t","reduce","d1","d2","shapes","shape","program","runWebGPUProgram","addNConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/tfjs-backend-webgpu/src/kernels/AddN.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AddN, AddNInputs, KernelConfig, KernelFunc, TensorInfo, upcastType} from '@tensorflow/tfjs-core';\n\nimport {WebGPUBackend} from '../backend_webgpu';\n\nimport {AddNPackedProgram} from '../addn_packed_webgpu';\nimport {identity} from './Identity';\n\nexport function addN(args: {inputs: AddNInputs, backend: WebGPUBackend}):\n    TensorInfo {\n  const {inputs, backend} = args;\n\n  const tensors = inputs;\n  if (tensors.length === 1) {\n    return identity({inputs: {x: tensors[0]}, backend});\n  }\n\n  const dtype =\n      tensors.map(t => t.dtype).reduce((d1, d2) => upcastType(d1, d2));\n  const shapes = tensors.map(t => t.shape);\n  const program = new AddNPackedProgram(shapes);\n  return backend.runWebGPUProgram(program, tensors, dtype);\n}\n\nexport const addNConfig: KernelConfig = {\n  kernelName: AddN,\n  backendName: 'webgpu',\n  kernelFunc: addN as unknown as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,IAAI,EAAoDC,UAAU,QAAO,uBAAuB;AAIxG,SAAQC,iBAAiB,QAAO,uBAAuB;AACvD,SAAQC,QAAQ,QAAO,YAAY;AAEnC,OAAM,SAAUC,IAAIA,CAACC,IAAkD;EAErE,MAAM;IAACC,MAAM;IAAEC;EAAO,CAAC,GAAGF,IAAI;EAE9B,MAAMG,OAAO,GAAGF,MAAM;EACtB,IAAIE,OAAO,CAACC,MAAM,KAAK,CAAC,EAAE;IACxB,OAAON,QAAQ,CAAC;MAACG,MAAM,EAAE;QAACI,CAAC,EAAEF,OAAO,CAAC,CAAC;MAAC,CAAC;MAAED;IAAO,CAAC,CAAC;;EAGrD,MAAMI,KAAK,GACPH,OAAO,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACF,KAAK,CAAC,CAACG,MAAM,CAAC,CAACC,EAAE,EAAEC,EAAE,KAAKf,UAAU,CAACc,EAAE,EAAEC,EAAE,CAAC,CAAC;EACpE,MAAMC,MAAM,GAAGT,OAAO,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACK,KAAK,CAAC;EACxC,MAAMC,OAAO,GAAG,IAAIjB,iBAAiB,CAACe,MAAM,CAAC;EAC7C,OAAOV,OAAO,CAACa,gBAAgB,CAACD,OAAO,EAAEX,OAAO,EAAEG,KAAK,CAAC;AAC1D;AAEA,OAAO,MAAMU,UAAU,GAAiB;EACtCC,UAAU,EAAEtB,IAAI;EAChBuB,WAAW,EAAE,QAAQ;EACrBC,UAAU,EAAEpB;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}