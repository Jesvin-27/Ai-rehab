{"ast":null,"code":"var _jsxFileName = \"/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ExercisePage.css';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posedetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nimport { processChairSquat, resetChairSquat } from '../exercises/ChairSquats';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst exerciseMap = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls']\n};\nconst ExercisePage = () => {\n  _s();\n  const {\n    type\n  } = useParams();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const detectorRef = useRef(null);\n  const requestRef = useRef(null);\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [repCount, setRepCount] = useState(0);\n  const [feedback, setFeedback] = useState('');\n  const synthRef = useRef(window.speechSynthesis);\n  const exercises = exerciseMap[type] || [];\n  useEffect(() => {\n    tf.setBackend('webgl');\n    return () => stopScan(); // Cleanup\n  }, []);\n  const speak = text => {\n    if (!synthRef.current) return;\n    const utterance = new SpeechSynthesisUtterance(text);\n    synthRef.current.cancel(); // cancel previous\n    synthRef.current.speak(utterance);\n  };\n  const drawKeypoints = poses => {\n    var _canvasRef$current;\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d');\n    if (!ctx) return;\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    poses.forEach(pose => {\n      pose.keypoints.forEach(kp => {\n        if (kp.score > 0.4) {\n          ctx.beginPath();\n          ctx.arc(kp.x, kp.y, 5, 0, 2 * Math.PI);\n          ctx.fillStyle = 'lime';\n          ctx.fill();\n        }\n      });\n    });\n  };\n  const runDetection = async () => {\n    var _poses$;\n    if (!videoRef.current || !canvasRef.current || !detectorRef.current) return;\n    const poses = await detectorRef.current.estimatePoses(videoRef.current);\n    drawKeypoints(poses);\n    if ((_poses$ = poses[0]) !== null && _poses$ !== void 0 && _poses$.keypoints) {\n      const keypoints = poses[0].keypoints;\n\n      // âœ… Exercise-specific logic\n      if (selectedExercise === 'Chair Squats') {\n        const result = processChairSquat(keypoints);\n        if (result.feedback) {\n          setFeedback(result.feedback);\n        }\n        if (result.reps !== repCount) {\n          setRepCount(result.reps);\n        }\n      }\n    }\n    requestRef.current = requestAnimationFrame(runDetection);\n  };\n  const startScan = async () => {\n    if (!selectedExercise) return alert('Please select an exercise first');\n    setIsScanning(true);\n    speak(`Starting ${selectedExercise}`);\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true\n    });\n    videoRef.current.srcObject = stream;\n    await videoRef.current.play();\n    const detector = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n      modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING\n    });\n    detectorRef.current = detector;\n    runDetection();\n  };\n  const stopScan = () => {\n    var _videoRef$current, _canvasRef$current2;\n    setIsScanning(false);\n    if (requestRef.current) cancelAnimationFrame(requestRef.current);\n    if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n    }\n    const ctx = (_canvasRef$current2 = canvasRef.current) === null || _canvasRef$current2 === void 0 ? void 0 : _canvasRef$current2.getContext('2d');\n    ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    resetChairSquat();\n    setRepCount(0);\n    setFeedback('');\n    speak('Scan stopped');\n  };\n  const saveData = () => {\n    speak(`You completed ${repCount} reps of ${selectedExercise}`);\n    console.log(`Saved data: ${repCount} reps of ${selectedExercise}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"top-bar\",\n      children: [\"AI-Rehab \\u2013 \", selectedExercise || 'Select Exercise']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"left-panel\",\n        children: exercises.map(exercise => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `exercise-button ${selectedExercise === exercise ? 'active' : ''}`,\n          onClick: () => {\n            setSelectedExercise(exercise);\n            resetChairSquat();\n            setRepCount(0);\n            setFeedback('');\n          },\n          children: exercise\n        }, exercise, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"content-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canvas-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            className: \"video-feed\",\n            width: \"640\",\n            height: \"480\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"canvas-overlay\",\n            width: \"640\",\n            height: \"480\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback\",\n          children: selectedExercise === 'Chair Squats' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Reps:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 20\n              }, this), \" \", repCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Feedback:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 20\n              }, this), \" \", feedback]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn start\",\n            onClick: startScan,\n            disabled: isScanning,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn stop\",\n            onClick: stopScan,\n            disabled: !isScanning,\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn save\",\n            onClick: saveData,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(ExercisePage, \"2en+4YnJ52Wlsuv2BuhQq/opEyQ=\", false, function () {\n  return [useParams];\n});\n_c = ExercisePage;\nexport default ExercisePage;\nvar _c;\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","tf","posedetection","processChairSquat","resetChairSquat","jsxDEV","_jsxDEV","Fragment","_Fragment","exerciseMap","cardiac","neuro","ortho","ExercisePage","_s","type","videoRef","canvasRef","detectorRef","requestRef","selectedExercise","setSelectedExercise","isScanning","setIsScanning","repCount","setRepCount","feedback","setFeedback","synthRef","window","speechSynthesis","exercises","setBackend","stopScan","speak","text","current","utterance","SpeechSynthesisUtterance","cancel","drawKeypoints","poses","_canvasRef$current","ctx","getContext","clearRect","width","height","forEach","pose","keypoints","kp","score","beginPath","arc","x","y","Math","PI","fillStyle","fill","runDetection","_poses$","estimatePoses","result","reps","requestAnimationFrame","startScan","alert","stream","navigator","mediaDevices","getUserMedia","video","srcObject","play","detector","createDetector","SupportedModels","MoveNet","modelType","movenet","SINGLEPOSE_LIGHTNING","_videoRef$current","_canvasRef$current2","cancelAnimationFrame","getTracks","track","stop","saveData","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","exercise","onClick","ref","disabled","_c","$RefreshReg$"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ExercisePage.css';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posedetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nimport { processChairSquat, resetChairSquat } from '../exercises/ChairSquats';\n\nconst exerciseMap = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls'],\n};\n\nconst ExercisePage = () => {\n  const { type } = useParams();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const detectorRef = useRef(null);\n  const requestRef = useRef(null);\n\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [repCount, setRepCount] = useState(0);\n  const [feedback, setFeedback] = useState('');\n\n  const synthRef = useRef(window.speechSynthesis);\n\n  const exercises = exerciseMap[type] || [];\n\n  useEffect(() => {\n    tf.setBackend('webgl');\n    return () => stopScan(); // Cleanup\n  }, []);\n\n  const speak = (text) => {\n    if (!synthRef.current) return;\n    const utterance = new SpeechSynthesisUtterance(text);\n    synthRef.current.cancel(); // cancel previous\n    synthRef.current.speak(utterance);\n  };\n\n  const drawKeypoints = (poses) => {\n    const ctx = canvasRef.current?.getContext('2d');\n    if (!ctx) return;\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    poses.forEach((pose) => {\n      pose.keypoints.forEach((kp) => {\n        if (kp.score > 0.4) {\n          ctx.beginPath();\n          ctx.arc(kp.x, kp.y, 5, 0, 2 * Math.PI);\n          ctx.fillStyle = 'lime';\n          ctx.fill();\n        }\n      });\n    });\n  };\n\n  const runDetection = async () => {\n    if (!videoRef.current || !canvasRef.current || !detectorRef.current) return;\n\n    const poses = await detectorRef.current.estimatePoses(videoRef.current);\n    drawKeypoints(poses);\n\n    if (poses[0]?.keypoints) {\n      const keypoints = poses[0].keypoints;\n\n      // âœ… Exercise-specific logic\n      if (selectedExercise === 'Chair Squats') {\n        const result = processChairSquat(keypoints);\n        if (result.feedback) {\n          setFeedback(result.feedback);\n        }\n        if (result.reps !== repCount) {\n          setRepCount(result.reps);\n        }\n      }\n    }\n\n    requestRef.current = requestAnimationFrame(runDetection);\n  };\n\n  const startScan = async () => {\n    if (!selectedExercise) return alert('Please select an exercise first');\n\n    setIsScanning(true);\n    speak(`Starting ${selectedExercise}`);\n\n    const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n    videoRef.current.srcObject = stream;\n    await videoRef.current.play();\n\n    const detector = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n      modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING,\n    });\n\n    detectorRef.current = detector;\n    runDetection();\n  };\n\n  const stopScan = () => {\n    setIsScanning(false);\n    if (requestRef.current) cancelAnimationFrame(requestRef.current);\n\n    if (videoRef.current?.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach((track) => track.stop());\n    }\n\n    const ctx = canvasRef.current?.getContext('2d');\n    ctx?.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    resetChairSquat();\n    setRepCount(0);\n    setFeedback('');\n    speak('Scan stopped');\n  };\n\n  const saveData = () => {\n    speak(`You completed ${repCount} reps of ${selectedExercise}`);\n    console.log(`Saved data: ${repCount} reps of ${selectedExercise}`);\n  };\n\n  return (\n    <div className=\"exercise-container\">\n      <header className=\"top-bar\">AI-Rehab â€“ {selectedExercise || 'Select Exercise'}</header>\n\n      <div className=\"main-layout\">\n        <aside className=\"left-panel\">\n          {exercises.map((exercise) => (\n            <button\n              key={exercise}\n              className={`exercise-button ${selectedExercise === exercise ? 'active' : ''}`}\n              onClick={() => {\n                setSelectedExercise(exercise);\n                resetChairSquat();\n                setRepCount(0);\n                setFeedback('');\n              }}\n            >\n              {exercise}\n            </button>\n          ))}\n        </aside>\n\n        <main className=\"content-panel\">\n          <div className=\"canvas-area\">\n            <video ref={videoRef} className=\"video-feed\" width=\"640\" height=\"480\" />\n            <canvas ref={canvasRef} className=\"canvas-overlay\" width=\"640\" height=\"480\" />\n          </div>\n\n          <div className=\"feedback\">\n            {selectedExercise === 'Chair Squats' && (\n              <>\n                <p><strong>Reps:</strong> {repCount}</p>\n                <p><strong>Feedback:</strong> {feedback}</p>\n              </>\n            )}\n          </div>\n\n          <div className=\"controls\">\n            <button className=\"control-btn start\" onClick={startScan} disabled={isScanning}>\n              Start\n            </button>\n            <button className=\"control-btn stop\" onClick={stopScan} disabled={!isScanning}>\n              Stop\n            </button>\n            <button className=\"control-btn save\" onClick={saveData}>\n              Save\n            </button>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default ExercisePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,oBAAoB;AAC3B,OAAO,KAAKC,EAAE,MAAM,kBAAkB;AACtC,OAAO,KAAKC,aAAa,MAAM,mCAAmC;AAClE,OAAO,gCAAgC;AACvC,SAASC,iBAAiB,EAAEC,eAAe,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9E,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,UAAU,CAAC;EACzDC,KAAK,EAAE,CAAC,kBAAkB,EAAE,eAAe,EAAE,cAAc,CAAC;EAC5DC,KAAK,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,gBAAgB;AACvD,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAK,CAAC,GAAGf,SAAS,CAAC,CAAC;EAC5B,MAAMgB,QAAQ,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMmB,SAAS,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMoB,WAAW,GAAGpB,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMqB,UAAU,GAAGrB,MAAM,CAAC,IAAI,CAAC;EAE/B,MAAM,CAACsB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM6B,QAAQ,GAAG9B,MAAM,CAAC+B,MAAM,CAACC,eAAe,CAAC;EAE/C,MAAMC,SAAS,GAAGtB,WAAW,CAACM,IAAI,CAAC,IAAI,EAAE;EAEzClB,SAAS,CAAC,MAAM;IACdI,EAAE,CAAC+B,UAAU,CAAC,OAAO,CAAC;IACtB,OAAO,MAAMC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAIC,IAAI,IAAK;IACtB,IAAI,CAACP,QAAQ,CAACQ,OAAO,EAAE;IACvB,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACH,IAAI,CAAC;IACpDP,QAAQ,CAACQ,OAAO,CAACG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3BX,QAAQ,CAACQ,OAAO,CAACF,KAAK,CAACG,SAAS,CAAC;EACnC,CAAC;EAED,MAAMG,aAAa,GAAIC,KAAK,IAAK;IAAA,IAAAC,kBAAA;IAC/B,MAAMC,GAAG,IAAAD,kBAAA,GAAGzB,SAAS,CAACmB,OAAO,cAAAM,kBAAA,uBAAjBA,kBAAA,CAAmBE,UAAU,CAAC,IAAI,CAAC;IAC/C,IAAI,CAACD,GAAG,EAAE;IACVA,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE5B,SAAS,CAACmB,OAAO,CAACU,KAAK,EAAE7B,SAAS,CAACmB,OAAO,CAACW,MAAM,CAAC;IAEtEN,KAAK,CAACO,OAAO,CAAEC,IAAI,IAAK;MACtBA,IAAI,CAACC,SAAS,CAACF,OAAO,CAAEG,EAAE,IAAK;QAC7B,IAAIA,EAAE,CAACC,KAAK,GAAG,GAAG,EAAE;UAClBT,GAAG,CAACU,SAAS,CAAC,CAAC;UACfV,GAAG,CAACW,GAAG,CAACH,EAAE,CAACI,CAAC,EAAEJ,EAAE,CAACK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGC,IAAI,CAACC,EAAE,CAAC;UACtCf,GAAG,CAACgB,SAAS,GAAG,MAAM;UACtBhB,GAAG,CAACiB,IAAI,CAAC,CAAC;QACZ;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAAA,IAAAC,OAAA;IAC/B,IAAI,CAAC9C,QAAQ,CAACoB,OAAO,IAAI,CAACnB,SAAS,CAACmB,OAAO,IAAI,CAAClB,WAAW,CAACkB,OAAO,EAAE;IAErE,MAAMK,KAAK,GAAG,MAAMvB,WAAW,CAACkB,OAAO,CAAC2B,aAAa,CAAC/C,QAAQ,CAACoB,OAAO,CAAC;IACvEI,aAAa,CAACC,KAAK,CAAC;IAEpB,KAAAqB,OAAA,GAAIrB,KAAK,CAAC,CAAC,CAAC,cAAAqB,OAAA,eAARA,OAAA,CAAUZ,SAAS,EAAE;MACvB,MAAMA,SAAS,GAAGT,KAAK,CAAC,CAAC,CAAC,CAACS,SAAS;;MAEpC;MACA,IAAI9B,gBAAgB,KAAK,cAAc,EAAE;QACvC,MAAM4C,MAAM,GAAG7D,iBAAiB,CAAC+C,SAAS,CAAC;QAC3C,IAAIc,MAAM,CAACtC,QAAQ,EAAE;UACnBC,WAAW,CAACqC,MAAM,CAACtC,QAAQ,CAAC;QAC9B;QACA,IAAIsC,MAAM,CAACC,IAAI,KAAKzC,QAAQ,EAAE;UAC5BC,WAAW,CAACuC,MAAM,CAACC,IAAI,CAAC;QAC1B;MACF;IACF;IAEA9C,UAAU,CAACiB,OAAO,GAAG8B,qBAAqB,CAACL,YAAY,CAAC;EAC1D,CAAC;EAED,MAAMM,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAAC/C,gBAAgB,EAAE,OAAOgD,KAAK,CAAC,iCAAiC,CAAC;IAEtE7C,aAAa,CAAC,IAAI,CAAC;IACnBW,KAAK,CAAC,YAAYd,gBAAgB,EAAE,CAAC;IAErC,MAAMiD,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACzEzD,QAAQ,CAACoB,OAAO,CAACsC,SAAS,GAAGL,MAAM;IACnC,MAAMrD,QAAQ,CAACoB,OAAO,CAACuC,IAAI,CAAC,CAAC;IAE7B,MAAMC,QAAQ,GAAG,MAAM1E,aAAa,CAAC2E,cAAc,CAAC3E,aAAa,CAAC4E,eAAe,CAACC,OAAO,EAAE;MACzFC,SAAS,EAAE9E,aAAa,CAAC+E,OAAO,CAACD,SAAS,CAACE;IAC7C,CAAC,CAAC;IAEFhE,WAAW,CAACkB,OAAO,GAAGwC,QAAQ;IAC9Bf,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,MAAM5B,QAAQ,GAAGA,CAAA,KAAM;IAAA,IAAAkD,iBAAA,EAAAC,mBAAA;IACrB7D,aAAa,CAAC,KAAK,CAAC;IACpB,IAAIJ,UAAU,CAACiB,OAAO,EAAEiD,oBAAoB,CAAClE,UAAU,CAACiB,OAAO,CAAC;IAEhE,KAAA+C,iBAAA,GAAInE,QAAQ,CAACoB,OAAO,cAAA+C,iBAAA,eAAhBA,iBAAA,CAAkBT,SAAS,EAAE;MAC/B1D,QAAQ,CAACoB,OAAO,CAACsC,SAAS,CAACY,SAAS,CAAC,CAAC,CAACtC,OAAO,CAAEuC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;IACzE;IAEA,MAAM7C,GAAG,IAAAyC,mBAAA,GAAGnE,SAAS,CAACmB,OAAO,cAAAgD,mBAAA,uBAAjBA,mBAAA,CAAmBxC,UAAU,CAAC,IAAI,CAAC;IAC/CD,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE5B,SAAS,CAACmB,OAAO,CAACU,KAAK,EAAE7B,SAAS,CAACmB,OAAO,CAACW,MAAM,CAAC;IAEvE3C,eAAe,CAAC,CAAC;IACjBqB,WAAW,CAAC,CAAC,CAAC;IACdE,WAAW,CAAC,EAAE,CAAC;IACfO,KAAK,CAAC,cAAc,CAAC;EACvB,CAAC;EAED,MAAMuD,QAAQ,GAAGA,CAAA,KAAM;IACrBvD,KAAK,CAAC,iBAAiBV,QAAQ,YAAYJ,gBAAgB,EAAE,CAAC;IAC9DsE,OAAO,CAACC,GAAG,CAAC,eAAenE,QAAQ,YAAYJ,gBAAgB,EAAE,CAAC;EACpE,CAAC;EAED,oBACEd,OAAA;IAAKsF,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCvF,OAAA;MAAQsF,SAAS,EAAC,SAAS;MAAAC,QAAA,GAAC,kBAAW,EAACzE,gBAAgB,IAAI,iBAAiB;IAAA;MAAA0E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAEvF3F,OAAA;MAAKsF,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BvF,OAAA;QAAOsF,SAAS,EAAC,YAAY;QAAAC,QAAA,EAC1B9D,SAAS,CAACmE,GAAG,CAAEC,QAAQ,iBACtB7F,OAAA;UAEEsF,SAAS,EAAE,mBAAmBxE,gBAAgB,KAAK+E,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC9EC,OAAO,EAAEA,CAAA,KAAM;YACb/E,mBAAmB,CAAC8E,QAAQ,CAAC;YAC7B/F,eAAe,CAAC,CAAC;YACjBqB,WAAW,CAAC,CAAC,CAAC;YACdE,WAAW,CAAC,EAAE,CAAC;UACjB,CAAE;UAAAkE,QAAA,EAEDM;QAAQ,GATJA,QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUP,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAER3F,OAAA;QAAMsF,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC7BvF,OAAA;UAAKsF,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BvF,OAAA;YAAO+F,GAAG,EAAErF,QAAS;YAAC4E,SAAS,EAAC,YAAY;YAAC9C,KAAK,EAAC,KAAK;YAACC,MAAM,EAAC;UAAK;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxE3F,OAAA;YAAQ+F,GAAG,EAAEpF,SAAU;YAAC2E,SAAS,EAAC,gBAAgB;YAAC9C,KAAK,EAAC,KAAK;YAACC,MAAM,EAAC;UAAK;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC,eAEN3F,OAAA;UAAKsF,SAAS,EAAC,UAAU;UAAAC,QAAA,EACtBzE,gBAAgB,KAAK,cAAc,iBAClCd,OAAA,CAAAE,SAAA;YAAAqF,QAAA,gBACEvF,OAAA;cAAAuF,QAAA,gBAAGvF,OAAA;gBAAAuF,QAAA,EAAQ;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACzE,QAAQ;YAAA;cAAAsE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxC3F,OAAA;cAAAuF,QAAA,gBAAGvF,OAAA;gBAAAuF,QAAA,EAAQ;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACvE,QAAQ;YAAA;cAAAoE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,eAC5C;QACH;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEN3F,OAAA;UAAKsF,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACvBvF,OAAA;YAAQsF,SAAS,EAAC,mBAAmB;YAACQ,OAAO,EAAEjC,SAAU;YAACmC,QAAQ,EAAEhF,UAAW;YAAAuE,QAAA,EAAC;UAEhF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT3F,OAAA;YAAQsF,SAAS,EAAC,kBAAkB;YAACQ,OAAO,EAAEnE,QAAS;YAACqE,QAAQ,EAAE,CAAChF,UAAW;YAAAuE,QAAA,EAAC;UAE/E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT3F,OAAA;YAAQsF,SAAS,EAAC,kBAAkB;YAACQ,OAAO,EAAEX,QAAS;YAAAI,QAAA,EAAC;UAExD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnF,EAAA,CAjKID,YAAY;EAAA,QACCb,SAAS;AAAA;AAAAuG,EAAA,GADtB1F,YAAY;AAmKlB,eAAeA,YAAY;AAAC,IAAA0F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}