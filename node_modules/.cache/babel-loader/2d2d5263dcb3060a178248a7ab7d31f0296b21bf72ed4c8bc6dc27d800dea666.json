{"ast":null,"code":"var _jsxFileName = \"/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posedetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nimport './ExercisePage.css';\nimport { Chart as ChartJS, LineElement, PointElement, CategoryScale, LinearScale } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, PointElement, CategoryScale, LinearScale);\nconst exerciseData = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls'],\n  physio: ['Arm Circles', 'Shoulder Rolls', 'Hydration Tips']\n};\nfunction ExercisePage() {\n  _s();\n  const {\n    type\n  } = useParams();\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [showGraph, setShowGraph] = useState(false);\n  const [poseScores, setPoseScores] = useState([]);\n  const [repCount, setRepCount] = useState(0);\n  const [timer, setTimer] = useState(0);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const detectorRef = useRef(null);\n  const intervalRef = useRef(null);\n  const synthRef = useRef(window.speechSynthesis);\n  const exercises = exerciseData[type] || [];\n\n  // Start Timer\n  useEffect(() => {\n    let timerId;\n    if (isScanning) {\n      timerId = setInterval(() => {\n        setTimer(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(timerId);\n  }, [isScanning]);\n\n  // Load Pose Detector\n  useEffect(() => {\n    const loadModel = async () => {\n      await tf.setBackend('webgl');\n      detectorRef.current = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n        modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING\n      });\n    };\n    loadModel();\n  }, []);\n  const speak = text => {\n    if (!synthRef.current.speaking) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      synthRef.current.speak(utterance);\n    }\n  };\n  const startPoseDetection = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true\n    });\n    videoRef.current.srcObject = stream;\n    await videoRef.current.play();\n    const detect = async () => {\n      var _poses$;\n      if (!isScanning || !detectorRef.current) return;\n      const poses = await detectorRef.current.estimatePoses(videoRef.current);\n      drawCanvas(poses);\n      const score = ((_poses$ = poses[0]) === null || _poses$ === void 0 ? void 0 : _poses$.keypoints.reduce((acc, k) => acc + k.score, 0)) / 17 || 0;\n      setPoseScores(prev => [...prev.slice(-20), score]);\n\n      // Voice feedback\n      if (score < 0.4) speak('Please correct your posture');\n\n      // Simple rep count logic (e.g. above threshold means 1 rep)\n      if (score > 0.6) setRepCount(prev => prev + 1);\n      requestAnimationFrame(detect);\n    };\n    detect();\n  };\n  const drawCanvas = poses => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    poses.forEach(pose => {\n      pose.keypoints.forEach(keypoint => {\n        if (keypoint.score > 0.3) {\n          ctx.beginPath();\n          ctx.arc(keypoint.x, keypoint.y, 5, 0, 2 * Math.PI);\n          ctx.fillStyle = 'lime';\n          ctx.fill();\n        }\n      });\n    });\n  };\n  const handleStart = () => {\n    if (!selectedExercise) return alert('Please select an exercise!');\n    setIsScanning(true);\n    setRepCount(0);\n    setTimer(0);\n    startPoseDetection();\n  };\n  const handleStop = () => {\n    var _videoRef$current;\n    setIsScanning(false);\n    if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n    }\n    console.log(\"Session ended\");\n  };\n  const handleSave = () => {\n    console.log('Session saved');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"top-bar\",\n      children: [\"AI-Rehab \\u2013 \", selectedExercise || 'Select Exercise']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"left-panel\",\n        children: [exercises.map(ex => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `exercise-button ${selectedExercise === ex ? 'active' : ''}`,\n          onClick: () => {\n            setSelectedExercise(ex);\n            setShowGraph(false);\n          },\n          children: ex\n        }, ex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"exercise-button graph-button\",\n          onClick: () => setShowGraph(true),\n          children: \"View Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"content-panel\",\n        children: showGraph ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canvas-placeholder\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: {\n              labels: poseScores.map((_, i) => i + 1),\n              datasets: [{\n                label: 'Pose Score',\n                data: poseScores,\n                fill: false,\n                borderColor: 'rgb(75, 192, 192)'\n              }]\n            },\n            options: {\n              responsive: true,\n              scales: {\n                y: {\n                  min: 0,\n                  max: 1\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"canvas-placeholder\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              width: \"640\",\n              height: \"480\",\n              className: \"absolute\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              width: \"640\",\n              height: \"480\",\n              className: \"absolute\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"control-btn start\",\n              onClick: handleStart,\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"control-btn stop\",\n              onClick: handleStop,\n              children: \"Stop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"control-btn save\",\n              onClick: handleSave,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uD83D\\uDD52 Timer: \", timer, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uD83D\\uDD01 Reps: \", repCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(ExercisePage, \"9g5l+KnBVGP3vrpxJPE1Ww2TJCE=\", false, function () {\n  return [useParams];\n});\n_c = ExercisePage;\nexport default ExercisePage;\nvar _c;\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useParams","tf","posedetection","Chart","ChartJS","LineElement","PointElement","CategoryScale","LinearScale","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","register","exerciseData","cardiac","neuro","ortho","physio","ExercisePage","_s","type","selectedExercise","setSelectedExercise","isScanning","setIsScanning","showGraph","setShowGraph","poseScores","setPoseScores","repCount","setRepCount","timer","setTimer","videoRef","canvasRef","detectorRef","intervalRef","synthRef","window","speechSynthesis","exercises","timerId","setInterval","prev","clearInterval","loadModel","setBackend","current","createDetector","SupportedModels","MoveNet","modelType","movenet","SINGLEPOSE_LIGHTNING","speak","text","speaking","utterance","SpeechSynthesisUtterance","startPoseDetection","stream","navigator","mediaDevices","getUserMedia","video","srcObject","play","detect","_poses$","poses","estimatePoses","drawCanvas","score","keypoints","reduce","acc","k","slice","requestAnimationFrame","ctx","getContext","clearRect","width","height","forEach","pose","keypoint","beginPath","arc","x","y","Math","PI","fillStyle","fill","handleStart","alert","handleStop","_videoRef$current","getTracks","track","stop","console","log","handleSave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","ex","onClick","data","labels","_","i","datasets","label","borderColor","options","responsive","scales","min","max","ref","_c","$RefreshReg$"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posedetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nimport './ExercisePage.css';\nimport { Chart as ChartJS, LineElement, PointElement, CategoryScale, LinearScale } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(LineElement, PointElement, CategoryScale, LinearScale);\n\nconst exerciseData = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls'],\n  physio: ['Arm Circles', 'Shoulder Rolls', 'Hydration Tips'],\n};\n\nfunction ExercisePage() {\n  const { type } = useParams();\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [showGraph, setShowGraph] = useState(false);\n  const [poseScores, setPoseScores] = useState([]);\n  const [repCount, setRepCount] = useState(0);\n  const [timer, setTimer] = useState(0);\n\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const detectorRef = useRef(null);\n  const intervalRef = useRef(null);\n  const synthRef = useRef(window.speechSynthesis);\n\n  const exercises = exerciseData[type] || [];\n\n  // Start Timer\n  useEffect(() => {\n    let timerId;\n    if (isScanning) {\n      timerId = setInterval(() => {\n        setTimer(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(timerId);\n  }, [isScanning]);\n\n  // Load Pose Detector\n  useEffect(() => {\n    const loadModel = async () => {\n      await tf.setBackend('webgl');\n      detectorRef.current = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n        modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING,\n      });\n    };\n    loadModel();\n  }, []);\n\n  const speak = (text) => {\n    if (!synthRef.current.speaking) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      synthRef.current.speak(utterance);\n    }\n  };\n\n  const startPoseDetection = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n    videoRef.current.srcObject = stream;\n    await videoRef.current.play();\n\n    const detect = async () => {\n      if (!isScanning || !detectorRef.current) return;\n      const poses = await detectorRef.current.estimatePoses(videoRef.current);\n      drawCanvas(poses);\n      const score = poses[0]?.keypoints.reduce((acc, k) => acc + k.score, 0) / 17 || 0;\n      setPoseScores(prev => [...prev.slice(-20), score]);\n\n      // Voice feedback\n      if (score < 0.4) speak('Please correct your posture');\n\n      // Simple rep count logic (e.g. above threshold means 1 rep)\n      if (score > 0.6) setRepCount(prev => prev + 1);\n\n      requestAnimationFrame(detect);\n    };\n\n    detect();\n  };\n\n  const drawCanvas = (poses) => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    poses.forEach(pose => {\n      pose.keypoints.forEach(keypoint => {\n        if (keypoint.score > 0.3) {\n          ctx.beginPath();\n          ctx.arc(keypoint.x, keypoint.y, 5, 0, 2 * Math.PI);\n          ctx.fillStyle = 'lime';\n          ctx.fill();\n        }\n      });\n    });\n  };\n\n  const handleStart = () => {\n    if (!selectedExercise) return alert('Please select an exercise!');\n    setIsScanning(true);\n    setRepCount(0);\n    setTimer(0);\n    startPoseDetection();\n  };\n\n  const handleStop = () => {\n    setIsScanning(false);\n    if (videoRef.current?.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n    }\n    console.log(\"Session ended\");\n  };\n\n  const handleSave = () => {\n    console.log('Session saved');\n  };\n\n  return (\n    <div className=\"exercise-container\">\n      <header className=\"top-bar\">AI-Rehab – {selectedExercise || 'Select Exercise'}</header>\n\n      <div className=\"main-layout\">\n        <aside className=\"left-panel\">\n          {exercises.map(ex => (\n            <button key={ex} className={`exercise-button ${selectedExercise === ex ? 'active' : ''}`} onClick={() => {\n              setSelectedExercise(ex);\n              setShowGraph(false);\n            }}>\n              {ex}\n            </button>\n          ))}\n          <button className=\"exercise-button graph-button\" onClick={() => setShowGraph(true)}>\n            View Graph\n          </button>\n        </aside>\n\n        <main className=\"content-panel\">\n          {showGraph ? (\n            <div className=\"canvas-placeholder\">\n              <Line\n                data={{\n                  labels: poseScores.map((_, i) => i + 1),\n                  datasets: [{\n                    label: 'Pose Score',\n                    data: poseScores,\n                    fill: false,\n                    borderColor: 'rgb(75, 192, 192)',\n                  }],\n                }}\n                options={{ responsive: true, scales: { y: { min: 0, max: 1 } } }}\n              />\n            </div>\n          ) : (\n            <>\n              <div className=\"canvas-placeholder\">\n                <video ref={videoRef} width=\"640\" height=\"480\" className=\"absolute\" />\n                <canvas ref={canvasRef} width=\"640\" height=\"480\" className=\"absolute\" />\n              </div>\n\n              <div className=\"controls\">\n                <button className=\"control-btn start\" onClick={handleStart}>Start</button>\n                <button className=\"control-btn stop\" onClick={handleStop}>Stop</button>\n                <button className=\"control-btn save\" onClick={handleSave}>Save</button>\n              </div>\n\n              <div className=\"stats\">\n                <p>🕒 Timer: {timer}s</p>\n                <p>🔁 Reps: {repCount}</p>\n              </div>\n            </>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default ExercisePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}