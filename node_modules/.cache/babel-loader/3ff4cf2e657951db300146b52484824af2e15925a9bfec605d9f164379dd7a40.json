{"ast":null,"code":"var _jsxFileName = \"/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js\",\n  _s = $RefreshSig$();\n// src/pages/ExercisePage.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ExercisePage.css';\nimport { Pose } from '@mediapipe/pose';\nimport { Camera } from '@mediapipe/camera_utils';\nimport { processChairSquat, resetChairSquat } from '../exercises/ChairSquats';\nimport { processArmCircles, resetArmCircles } from '../exercises/ArmCircles';\nimport { processLegRaises, resetLegRaises } from '../exercises/LegRaises';\nimport { processShoulderRolls, resetShoulderRolls } from '../exercises/ShoulderRolls';\nimport { processChairMarching, resetChairMarching } from '../exercises/ChairMarching';\nimport { processSeatedArmPunch, resetSeatedArmPunch } from '../exercises/SeatedArmPunch';\nimport { processArmRaises, resetArmRaises } from '../exercises/ArmRaises';\nimport { processBalanceTraining, resetBalanceTraining } from '../exercises/BalanceTraining';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exerciseMap = {\n  cardiac: ['Chair Marching', 'Seated Arm Punch', 'Arm Raises'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls'],\n  physio: ['Arm Circles', 'Shoulder Rolls', 'Hydration Tips']\n};\nconst logicMap = {\n  'Chair Squats': {\n    process: processChairSquat,\n    reset: resetChairSquat\n  },\n  'Arm Circles': {\n    process: processArmCircles,\n    reset: resetArmCircles\n  },\n  'Leg Raise': {\n    process: processLegRaises,\n    reset: resetLegRaises\n  },\n  'Shoulder Rolls': {\n    process: processShoulderRolls,\n    reset: resetShoulderRolls\n  },\n  'Chair Marching': {\n    process: processChairMarching,\n    reset: resetChairMarching\n  },\n  'Seated Arm Punch': {\n    process: processSeatedArmPunch,\n    reset: resetSeatedArmPunch\n  },\n  'Arm Raises': {\n    process: processArmRaises,\n    reset: resetArmRaises\n  },\n  'Balance Training': {\n    process: processBalanceTraining,\n    reset: resetBalanceTraining\n  } // âœ… Add this line\n};\nconst ExercisePage = () => {\n  _s();\n  const {\n    type\n  } = useParams();\n  const exercises = exerciseMap[type] || [];\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const cameraRef = useRef(null);\n  const poseRef = useRef(null);\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [repCount, setRepCount] = useState(0);\n  const lastSpeakTimeRef = useRef(0); // For throttling speech feedback\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => stopScan();\n  }, []);\n  const speak = text => {\n    const now = Date.now();\n    if (now - lastSpeakTimeRef.current < 2000) return; // Throttle to 2s\n    lastSpeakTimeRef.current = now;\n    if (!window.speechSynthesis || !text) return;\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = 'en-US';\n    window.speechSynthesis.cancel(); // Cancel previous\n    window.speechSynthesis.speak(utterance);\n  };\n  const onPoseResults = results => {\n    const landmarks = results.poseLandmarks;\n    if (!landmarks || !selectedExercise) return;\n    drawKeypoints(landmarks);\n    const {\n      process\n    } = logicMap[selectedExercise] || {};\n    if (process) {\n      const feedback = process(landmarks);\n      if (feedback !== null && feedback !== void 0 && feedback.speak) speak(feedback.speak);\n      if (feedback !== null && feedback !== void 0 && feedback.rep) setRepCount(prev => prev + 1);\n    }\n  };\n  const drawKeypoints = landmarks => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    landmarks.forEach(point => {\n      const {\n        x,\n        y,\n        visibility\n      } = point;\n      if (visibility > 0.5) {\n        ctx.beginPath();\n        ctx.arc(x * canvas.width, y * canvas.height, 5, 0, 2 * Math.PI);\n        ctx.fillStyle = 'lime';\n        ctx.fill();\n      }\n    });\n  };\n  const startScan = async () => {\n    var _logicMap$selectedExe;\n    if (!selectedExercise) return alert('Please select an exercise!');\n    stopScan(); // Reset previous\n    setRepCount(0);\n    setIsScanning(true);\n    speak(`Starting ${selectedExercise}`);\n    if ((_logicMap$selectedExe = logicMap[selectedExercise]) !== null && _logicMap$selectedExe !== void 0 && _logicMap$selectedExe.reset) logicMap[selectedExercise].reset();\n    const poseDetector = new Pose({\n      locateFile: file => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`\n    });\n    poseDetector.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: false,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n    poseDetector.onResults(onPoseResults);\n    poseRef.current = poseDetector;\n    cameraRef.current = new Camera(videoRef.current, {\n      onFrame: async () => {\n        await poseDetector.send({\n          image: videoRef.current\n        });\n      },\n      width: 640,\n      height: 480\n    });\n    cameraRef.current.start();\n  };\n  const stopScan = () => {\n    var _canvasRef$current;\n    setIsScanning(false);\n    if (cameraRef.current) {\n      cameraRef.current.stop();\n      cameraRef.current = null;\n    }\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d');\n    ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    speak('Scan stopped');\n  };\n  const saveData = () => {\n    speak('Data saved');\n    console.log('Saved reps:', repCount);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"top-bar\",\n      children: [\"AI-Rehab \\u2013 \", selectedExercise || 'Select Exercise', \" | Reps: \", repCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"left-panel\",\n        children: exercises.map(exercise => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `exercise-button ${selectedExercise === exercise ? 'active' : ''}`,\n          onClick: () => {\n            setSelectedExercise(exercise);\n            setRepCount(0);\n            stopScan();\n          },\n          children: exercise\n        }, exercise, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"content-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canvas-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            className: \"video-feed\",\n            width: \"640\",\n            height: \"480\",\n            playsInline: true,\n            muted: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"canvas-overlay\",\n            width: \"640\",\n            height: \"480\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn start\",\n            onClick: startScan,\n            disabled: isScanning,\n            children: \"Start Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn stop\",\n            onClick: stopScan,\n            disabled: !isScanning,\n            children: \"Stop Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn save\",\n            onClick: saveData,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(ExercisePage, \"euWH6O+ZRauUg+7akZlSEZzWFX4=\", false, function () {\n  return [useParams];\n});\n_c = ExercisePage;\nexport default ExercisePage;\nvar _c;\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useParams","Pose","Camera","processChairSquat","resetChairSquat","processArmCircles","resetArmCircles","processLegRaises","resetLegRaises","processShoulderRolls","resetShoulderRolls","processChairMarching","resetChairMarching","processSeatedArmPunch","resetSeatedArmPunch","processArmRaises","resetArmRaises","processBalanceTraining","resetBalanceTraining","jsxDEV","_jsxDEV","exerciseMap","cardiac","neuro","ortho","physio","logicMap","process","reset","ExercisePage","_s","type","exercises","videoRef","canvasRef","cameraRef","poseRef","selectedExercise","setSelectedExercise","isScanning","setIsScanning","repCount","setRepCount","lastSpeakTimeRef","stopScan","speak","text","now","Date","current","window","speechSynthesis","utterance","SpeechSynthesisUtterance","lang","cancel","onPoseResults","results","landmarks","poseLandmarks","drawKeypoints","feedback","rep","prev","canvas","ctx","getContext","clearRect","width","height","forEach","point","x","y","visibility","beginPath","arc","Math","PI","fillStyle","fill","startScan","_logicMap$selectedExe","alert","poseDetector","locateFile","file","setOptions","modelComplexity","smoothLandmarks","enableSegmentation","minDetectionConfidence","minTrackingConfidence","onResults","onFrame","send","image","start","_canvasRef$current","stop","saveData","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","exercise","onClick","ref","playsInline","muted","disabled","_c","$RefreshReg$"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js"],"sourcesContent":["// src/pages/ExercisePage.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ExercisePage.css';\nimport { Pose } from '@mediapipe/pose';\nimport { Camera } from '@mediapipe/camera_utils';\n\nimport { processChairSquat, resetChairSquat } from '../exercises/ChairSquats';\nimport { processArmCircles, resetArmCircles } from '../exercises/ArmCircles';\nimport { processLegRaises, resetLegRaises } from '../exercises/LegRaises';\nimport { processShoulderRolls, resetShoulderRolls } from '../exercises/ShoulderRolls';\nimport {processChairMarching,resetChairMarching } from '../exercises/ChairMarching';\nimport {processSeatedArmPunch,resetSeatedArmPunch} from '../exercises/SeatedArmPunch';\nimport {processArmRaises,resetArmRaises} from '../exercises/ArmRaises';\nimport { processBalanceTraining, resetBalanceTraining } from '../exercises/BalanceTraining';\n\nconst exerciseMap = {\n  cardiac: ['Chair Marching', 'Seated Arm Punch', 'Arm Raises'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls'],\n  physio: ['Arm Circles', 'Shoulder Rolls', 'Hydration Tips'],\n\n};\n\nconst logicMap = {\n  'Chair Squats': { process: processChairSquat, reset: resetChairSquat },\n  'Arm Circles': { process: processArmCircles, reset: resetArmCircles },\n  'Leg Raise': { process: processLegRaises, reset: resetLegRaises },\n  'Shoulder Rolls': { process: processShoulderRolls, reset: resetShoulderRolls },\n  'Chair Marching': { process: processChairMarching, reset: resetChairMarching },\n  'Seated Arm Punch': { process: processSeatedArmPunch, reset: resetSeatedArmPunch },\n  'Arm Raises': { process: processArmRaises, reset: resetArmRaises },\n  'Balance Training': { process: processBalanceTraining, reset: resetBalanceTraining }, // âœ… Add this line\n\n};\n\nconst ExercisePage = () => {\n  const { type } = useParams();\n  const exercises = exerciseMap[type] || [];\n\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const cameraRef = useRef(null);\n  const poseRef = useRef(null);\n\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [repCount, setRepCount] = useState(0);\n\n  const lastSpeakTimeRef = useRef(0); // For throttling speech feedback\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => stopScan();\n  }, []);\n\n  const speak = (text) => {\n    const now = Date.now();\n    if (now - lastSpeakTimeRef.current < 2000) return; // Throttle to 2s\n    lastSpeakTimeRef.current = now;\n\n    if (!window.speechSynthesis || !text) return;\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = 'en-US';\n    window.speechSynthesis.cancel(); // Cancel previous\n    window.speechSynthesis.speak(utterance);\n  };\n\n  const onPoseResults = (results) => {\n    const landmarks = results.poseLandmarks;\n    if (!landmarks || !selectedExercise) return;\n\n    drawKeypoints(landmarks);\n\n    const { process } = logicMap[selectedExercise] || {};\n    if (process) {\n      const feedback = process(landmarks);\n      if (feedback?.speak) speak(feedback.speak);\n      if (feedback?.rep) setRepCount((prev) => prev + 1);\n    }\n  };\n\n  const drawKeypoints = (landmarks) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    landmarks.forEach((point) => {\n      const { x, y, visibility } = point;\n      if (visibility > 0.5) {\n        ctx.beginPath();\n        ctx.arc(x * canvas.width, y * canvas.height, 5, 0, 2 * Math.PI);\n        ctx.fillStyle = 'lime';\n        ctx.fill();\n      }\n    });\n  };\n\n  const startScan = async () => {\n    if (!selectedExercise) return alert('Please select an exercise!');\n    stopScan(); // Reset previous\n    setRepCount(0);\n    setIsScanning(true);\n    speak(`Starting ${selectedExercise}`);\n\n    if (logicMap[selectedExercise]?.reset) logicMap[selectedExercise].reset();\n\n    const poseDetector = new Pose({\n      locateFile: (file) => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`,\n    });\n\n    poseDetector.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: false,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5,\n    });\n\n    poseDetector.onResults(onPoseResults);\n    poseRef.current = poseDetector;\n\n    cameraRef.current = new Camera(videoRef.current, {\n      onFrame: async () => {\n        await poseDetector.send({ image: videoRef.current });\n      },\n      width: 640,\n      height: 480,\n    });\n\n    cameraRef.current.start();\n  };\n\n  const stopScan = () => {\n    setIsScanning(false);\n    if (cameraRef.current) {\n      cameraRef.current.stop();\n      cameraRef.current = null;\n    }\n\n    const ctx = canvasRef.current?.getContext('2d');\n    ctx?.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    speak('Scan stopped');\n  };\n\n  const saveData = () => {\n    speak('Data saved');\n    console.log('Saved reps:', repCount);\n  };\n\n  return (\n    <div className=\"exercise-container\">\n      <header className=\"top-bar\">\n        AI-Rehab â€“ {selectedExercise || 'Select Exercise'} | Reps: {repCount}\n      </header>\n\n      <div className=\"main-layout\">\n        <aside className=\"left-panel\">\n          {exercises.map((exercise) => (\n            <button\n              key={exercise}\n              className={`exercise-button ${selectedExercise === exercise ? 'active' : ''}`}\n              onClick={() => {\n                setSelectedExercise(exercise);\n                setRepCount(0);\n                stopScan();\n              }}\n            >\n              {exercise}\n            </button>\n          ))}\n        </aside>\n\n        <main className=\"content-panel\">\n          <div className=\"canvas-area\">\n            <video ref={videoRef} className=\"video-feed\" width=\"640\" height=\"480\" playsInline muted />\n            <canvas ref={canvasRef} className=\"canvas-overlay\" width=\"640\" height=\"480\" />\n          </div>\n\n          <div className=\"controls\">\n            <button className=\"control-btn start\" onClick={startScan} disabled={isScanning}>\n              Start Scan\n            </button>\n            <button className=\"control-btn stop\" onClick={stopScan} disabled={!isScanning}>\n              Stop Scan\n            </button>\n            <button className=\"control-btn save\" onClick={saveData}>\n              Save\n            </button>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default ExercisePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}