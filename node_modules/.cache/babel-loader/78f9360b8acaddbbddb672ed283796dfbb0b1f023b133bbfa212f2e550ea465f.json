{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Softmax, util } from '@tensorflow/tfjs-core';\nimport { SoftmaxProgram } from '../softmax_webgpu';\nimport { reshape } from './Reshape';\nexport function softmax(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    logits\n  } = inputs;\n  const {\n    dim\n  } = attrs;\n  const logitsReshaped = reshape({\n    inputs: {\n      x: logits\n    },\n    backend,\n    attrs: {\n      shape: [util.sizeFromShape(logits.shape) / logits.shape[dim], logits.shape[dim]]\n    }\n  });\n  const program = new SoftmaxProgram(logitsReshaped.shape);\n  const res = backend.runWebGPUProgram(program, [logitsReshaped], logits.dtype);\n  const resReshaped = reshape({\n    inputs: {\n      x: res\n    },\n    backend,\n    attrs: {\n      shape: logits.shape\n    }\n  });\n  backend.disposeData(logitsReshaped.dataId);\n  backend.disposeData(res.dataId);\n  return resReshaped;\n}\nexport const softmaxConfig = {\n  kernelName: Softmax,\n  backendName: 'webgpu',\n  kernelFunc: softmax\n};","map":{"version":3,"names":["Softmax","util","SoftmaxProgram","reshape","softmax","args","inputs","backend","attrs","logits","dim","logitsReshaped","x","shape","sizeFromShape","program","res","runWebGPUProgram","dtype","resReshaped","disposeData","dataId","softmaxConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/tfjs-backend-webgpu/src/kernels/Softmax.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Softmax, SoftmaxAttrs, SoftmaxInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {WebGPUBackend} from '../backend_webgpu';\nimport {SoftmaxProgram} from '../softmax_webgpu';\n\nimport {reshape} from './Reshape';\n\nexport function softmax(\n    args: {inputs: SoftmaxInputs, backend: WebGPUBackend, attrs: SoftmaxAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {logits} = inputs;\n  const {dim} = attrs;\n\n  const logitsReshaped = reshape({\n    inputs: {x: logits},\n    backend,\n    attrs: {\n      shape: [\n        util.sizeFromShape(logits.shape) / logits.shape[dim], logits.shape[dim]\n      ]\n    }\n  });\n  const program = new SoftmaxProgram(logitsReshaped.shape);\n  const res = backend.runWebGPUProgram(program, [logitsReshaped], logits.dtype);\n  const resReshaped =\n      reshape({inputs: {x: res}, backend, attrs: {shape: logits.shape}});\n  backend.disposeData(logitsReshaped.dataId);\n  backend.disposeData(res.dataId);\n  return resReshaped;\n}\n\nexport const softmaxConfig: KernelConfig = {\n  kernelName: Softmax,\n  backendName: 'webgpu',\n  kernelFunc: softmax as unknown as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,OAAO,EAA2CC,IAAI,QAAO,uBAAuB;AAGtH,SAAQC,cAAc,QAAO,mBAAmB;AAEhD,SAAQC,OAAO,QAAO,WAAW;AAEjC,OAAM,SAAUC,OAAOA,CACnBC,IAA0E;EAE5E,MAAM;IAACC,MAAM;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGH,IAAI;EACrC,MAAM;IAACI;EAAM,CAAC,GAAGH,MAAM;EACvB,MAAM;IAACI;EAAG,CAAC,GAAGF,KAAK;EAEnB,MAAMG,cAAc,GAAGR,OAAO,CAAC;IAC7BG,MAAM,EAAE;MAACM,CAAC,EAAEH;IAAM,CAAC;IACnBF,OAAO;IACPC,KAAK,EAAE;MACLK,KAAK,EAAE,CACLZ,IAAI,CAACa,aAAa,CAACL,MAAM,CAACI,KAAK,CAAC,GAAGJ,MAAM,CAACI,KAAK,CAACH,GAAG,CAAC,EAAED,MAAM,CAACI,KAAK,CAACH,GAAG,CAAC;;GAG5E,CAAC;EACF,MAAMK,OAAO,GAAG,IAAIb,cAAc,CAACS,cAAc,CAACE,KAAK,CAAC;EACxD,MAAMG,GAAG,GAAGT,OAAO,CAACU,gBAAgB,CAACF,OAAO,EAAE,CAACJ,cAAc,CAAC,EAAEF,MAAM,CAACS,KAAK,CAAC;EAC7E,MAAMC,WAAW,GACbhB,OAAO,CAAC;IAACG,MAAM,EAAE;MAACM,CAAC,EAAEI;IAAG,CAAC;IAAET,OAAO;IAAEC,KAAK,EAAE;MAACK,KAAK,EAAEJ,MAAM,CAACI;IAAK;EAAC,CAAC,CAAC;EACtEN,OAAO,CAACa,WAAW,CAACT,cAAc,CAACU,MAAM,CAAC;EAC1Cd,OAAO,CAACa,WAAW,CAACJ,GAAG,CAACK,MAAM,CAAC;EAC/B,OAAOF,WAAW;AACpB;AAEA,OAAO,MAAMG,aAAa,GAAiB;EACzCC,UAAU,EAAEvB,OAAO;EACnBwB,WAAW,EAAE,QAAQ;EACrBC,UAAU,EAAErB;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}