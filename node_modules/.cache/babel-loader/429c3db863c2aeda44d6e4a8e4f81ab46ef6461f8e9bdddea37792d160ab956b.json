{"ast":null,"code":"// src/exercises/ChairSquats.js\nlet lastState = 'up';\nlet repCount = 0;\nlet alertedBadPosture = false;\nconst speak = text => {\n  const utterance = new SpeechSynthesisUtterance(text);\n  utterance.rate = 1;\n  window.speechSynthesis.speak(utterance);\n};\n\n// Helper to calculate angle between three points\nconst getAngle = (a, b, c) => {\n  const ab = Math.hypot(b.x - a.x, b.y - a.y);\n  const bc = Math.hypot(b.x - c.x, b.y - c.y);\n  const ac = Math.hypot(c.x - a.x, c.y - a.y);\n  return Math.acos((ab ** 2 + bc ** 2 - ac ** 2) / (2 * ab * bc)) * (180 / Math.PI);\n};\nconst isPostureCorrect = pose => {\n  const leftHip = pose.keypoints.find(k => k.name === 'left_hip');\n  const rightHip = pose.keypoints.find(k => k.name === 'right_hip');\n  const leftKnee = pose.keypoints.find(k => k.name === 'left_knee');\n  const rightKnee = pose.keypoints.find(k => k.name === 'right_knee');\n  const leftAnkle = pose.keypoints.find(k => k.name === 'left_ankle');\n  const rightAnkle = pose.keypoints.find(k => k.name === 'right_ankle');\n  if (!leftHip || !rightHip || !leftKnee || !rightKnee || !leftAnkle || !rightAnkle) return false;\n  const leftAngle = getAngle(leftHip, leftKnee, leftAnkle);\n  const rightAngle = getAngle(rightHip, rightKnee, rightAnkle);\n  const avgAngle = (leftAngle + rightAngle) / 2;\n  return avgAngle < 100 && avgAngle > 60;\n};\nexport const processChairSquat = pose => {\n  const correct = isPostureCorrect(pose);\n  if (correct && lastState === 'up') {\n    lastState = 'down';\n    alertedBadPosture = false;\n  }\n  if (!correct && lastState === 'down') {\n    lastState = 'up';\n    repCount += 1;\n    speak(`Good job! Repetition ${repCount}`);\n  }\n  if (!correct && lastState === 'up' && !alertedBadPosture) {\n    speak('Please bend lower to squat correctly');\n    alertedBadPosture = true;\n  }\n  return {\n    reps: repCount,\n    postureCorrect: correct\n  };\n};\n\n// Optional: reset counters (e.g., when exercise is changed)\nexport const resetChairSquat = () => {\n  repCount = 0;\n  lastState = 'up';\n  alertedBadPosture = false;\n};","map":{"version":3,"names":["lastState","repCount","alertedBadPosture","speak","text","utterance","SpeechSynthesisUtterance","rate","window","speechSynthesis","getAngle","a","b","c","ab","Math","hypot","x","y","bc","ac","acos","PI","isPostureCorrect","pose","leftHip","keypoints","find","k","name","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftAngle","rightAngle","avgAngle","processChairSquat","correct","reps","postureCorrect","resetChairSquat"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/exercises/ChairSquats.js"],"sourcesContent":["// src/exercises/ChairSquats.js\nlet lastState = 'up';\nlet repCount = 0;\nlet alertedBadPosture = false;\n\nconst speak = (text) => {\n  const utterance = new SpeechSynthesisUtterance(text);\n  utterance.rate = 1;\n  window.speechSynthesis.speak(utterance);\n};\n\n// Helper to calculate angle between three points\nconst getAngle = (a, b, c) => {\n  const ab = Math.hypot(b.x - a.x, b.y - a.y);\n  const bc = Math.hypot(b.x - c.x, b.y - c.y);\n  const ac = Math.hypot(c.x - a.x, c.y - a.y);\n  return Math.acos((ab ** 2 + bc ** 2 - ac ** 2) / (2 * ab * bc)) * (180 / Math.PI);\n};\n\nconst isPostureCorrect = (pose) => {\n  const leftHip = pose.keypoints.find((k) => k.name === 'left_hip');\n  const rightHip = pose.keypoints.find((k) => k.name === 'right_hip');\n  const leftKnee = pose.keypoints.find((k) => k.name === 'left_knee');\n  const rightKnee = pose.keypoints.find((k) => k.name === 'right_knee');\n  const leftAnkle = pose.keypoints.find((k) => k.name === 'left_ankle');\n  const rightAnkle = pose.keypoints.find((k) => k.name === 'right_ankle');\n\n  if (\n    !leftHip || !rightHip ||\n    !leftKnee || !rightKnee ||\n    !leftAnkle || !rightAnkle\n  ) return false;\n\n  const leftAngle = getAngle(leftHip, leftKnee, leftAnkle);\n  const rightAngle = getAngle(rightHip, rightKnee, rightAnkle);\n\n  const avgAngle = (leftAngle + rightAngle) / 2;\n\n  return avgAngle < 100 && avgAngle > 60;\n};\n\nexport const processChairSquat = (pose) => {\n  const correct = isPostureCorrect(pose);\n\n  if (correct && lastState === 'up') {\n    lastState = 'down';\n    alertedBadPosture = false;\n  }\n\n  if (!correct && lastState === 'down') {\n    lastState = 'up';\n    repCount += 1;\n    speak(`Good job! Repetition ${repCount}`);\n  }\n\n  if (!correct && lastState === 'up' && !alertedBadPosture) {\n    speak('Please bend lower to squat correctly');\n    alertedBadPosture = true;\n  }\n\n  return {\n    reps: repCount,\n    postureCorrect: correct,\n  };\n};\n\n// Optional: reset counters (e.g., when exercise is changed)\nexport const resetChairSquat = () => {\n  repCount = 0;\n  lastState = 'up';\n  alertedBadPosture = false;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}