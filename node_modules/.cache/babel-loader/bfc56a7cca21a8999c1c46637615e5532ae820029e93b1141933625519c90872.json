{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Conv2D } from '@tensorflow/tfjs-core';\nimport { conv2DImpl } from './Conv2D_impl';\nexport function conv2d(args) {\n  const {\n    inputs,\n    attrs,\n    backend\n  } = args;\n  const {\n    x,\n    filter\n  } = inputs;\n  const {\n    strides,\n    pad,\n    dataFormat,\n    dilations,\n    dimRoundingMode\n  } = attrs;\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, dilations, pad, dimRoundingMode, false /* depthwise */, $dataFormat);\n  return conv2DImpl({\n    x,\n    filter,\n    convInfo,\n    backend\n  });\n}\nexport const conv2DConfig = {\n  kernelName: Conv2D,\n  backendName: 'webgpu',\n  kernelFunc: conv2d\n};","map":{"version":3,"names":["backend_util","Conv2D","conv2DImpl","conv2d","args","inputs","attrs","backend","x","filter","strides","pad","dataFormat","dilations","dimRoundingMode","$dataFormat","convertConv2DDataFormat","convInfo","computeConv2DInfo","shape","conv2DConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/tfjs-backend-webgpu/src/kernels/Conv2D.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, Conv2D, Conv2DAttrs, Conv2DInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {WebGPUBackend} from '../backend_webgpu';\n\nimport {conv2DImpl} from './Conv2D_impl';\n\nexport function conv2d(\n    args: {inputs: Conv2DInputs, attrs: Conv2DAttrs, backend: WebGPUBackend}) {\n  const {inputs, attrs, backend} = args;\n  const {x, filter} = inputs;\n  const {strides, pad, dataFormat, dilations, dimRoundingMode} = attrs;\n  const $dataFormat = backend_util.convertConv2DDataFormat(dataFormat);\n  const convInfo = backend_util.computeConv2DInfo(\n      x.shape as [number, number, number, number],\n      filter.shape as [number, number, number, number], strides, dilations, pad,\n      dimRoundingMode, false /* depthwise */, $dataFormat);\n  return conv2DImpl({x, filter, convInfo, backend});\n}\n\nexport const conv2DConfig: KernelConfig = {\n  kernelName: Conv2D,\n  backendName: 'webgpu',\n  kernelFunc: conv2d as unknown as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,YAAY,EAAEC,MAAM,QAA4D,uBAAuB;AAI/G,SAAQC,UAAU,QAAO,eAAe;AAExC,OAAM,SAAUC,MAAMA,CAClBC,IAAwE;EAC1E,MAAM;IAACC,MAAM;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGH,IAAI;EACrC,MAAM;IAACI,CAAC;IAAEC;EAAM,CAAC,GAAGJ,MAAM;EAC1B,MAAM;IAACK,OAAO;IAAEC,GAAG;IAAEC,UAAU;IAAEC,SAAS;IAAEC;EAAe,CAAC,GAAGR,KAAK;EACpE,MAAMS,WAAW,GAAGf,YAAY,CAACgB,uBAAuB,CAACJ,UAAU,CAAC;EACpE,MAAMK,QAAQ,GAAGjB,YAAY,CAACkB,iBAAiB,CAC3CV,CAAC,CAACW,KAAyC,EAC3CV,MAAM,CAACU,KAAyC,EAAET,OAAO,EAAEG,SAAS,EAAEF,GAAG,EACzEG,eAAe,EAAE,KAAK,CAAC,iBAAiBC,WAAW,CAAC;EACxD,OAAOb,UAAU,CAAC;IAACM,CAAC;IAAEC,MAAM;IAAEQ,QAAQ;IAAEV;EAAO,CAAC,CAAC;AACnD;AAEA,OAAO,MAAMa,YAAY,GAAiB;EACxCC,UAAU,EAAEpB,MAAM;EAClBqB,WAAW,EAAE,QAAQ;EACrBC,UAAU,EAAEpB;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}