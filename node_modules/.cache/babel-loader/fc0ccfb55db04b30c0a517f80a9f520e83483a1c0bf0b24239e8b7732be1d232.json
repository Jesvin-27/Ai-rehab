{"ast":null,"code":"// src/exercises/ShoulderRolls.js\n\nlet prevState = 'neutral';\nlet lastSpoken = '';\nlet lastSpeakTime = 0;\nexport function resetShoulderRolls() {\n  prevState = 'neutral';\n  lastSpoken = '';\n  lastSpeakTime = 0;\n}\nexport function processShoulderRolls(landmarks) {\n  const now = Date.now();\n\n  // Landmarks for shoulders\n  const leftShoulder = landmarks[11]; // LEFT\n  const rightShoulder = landmarks[12]; // RIGHT\n  const leftEar = landmarks[7];\n  const rightEar = landmarks[8];\n  if (!leftShoulder || !rightShoulder || !leftEar || !rightEar) {\n    return {\n      speak: 'Please align your shoulders and ears in front of camera.'\n    };\n  }\n  const deltaYLeft = leftShoulder.y - leftEar.y;\n  const deltaYRight = rightShoulder.y - rightEar.y;\n\n  // Thresholds for shoulder lift\n  const liftThreshold = 0.08;\n  const dropThreshold = 0.15;\n  if (deltaYLeft < liftThreshold && deltaYRight > dropThreshold && prevState === 'neutral') {\n    prevState = 'leftUp';\n    return {\n      speak: 'Left shoulder up'\n    };\n  }\n  if (deltaYRight < liftThreshold && deltaYLeft > dropThreshold && prevState === 'neutral') {\n    prevState = 'rightUp';\n    return {\n      speak: 'Right shoulder up'\n    };\n  }\n  if (prevState === 'leftUp' && deltaYLeft > dropThreshold) {\n    prevState = 'neutral';\n    return {\n      speak: 'Left roll complete',\n      rep: 1\n    };\n  }\n  if (prevState === 'rightUp' && deltaYRight > dropThreshold) {\n    prevState = 'neutral';\n    return {\n      speak: 'Right roll complete',\n      rep: 1\n    };\n  }\n  if (now - lastSpeakTime > 4000 && prevState === 'neutral') {\n    lastSpeakTime = now;\n    return {\n      speak: 'Roll your shoulders one by one'\n    };\n  }\n  return null;\n}","map":{"version":3,"names":["prevState","lastSpoken","lastSpeakTime","resetShoulderRolls","processShoulderRolls","landmarks","now","Date","leftShoulder","rightShoulder","leftEar","rightEar","speak","deltaYLeft","y","deltaYRight","liftThreshold","dropThreshold","rep"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/exercises/ShoulderRolls.js"],"sourcesContent":["// src/exercises/ShoulderRolls.js\n\nlet prevState = 'neutral';\nlet lastSpoken = '';\nlet lastSpeakTime = 0;\n\nexport function resetShoulderRolls() {\n  prevState = 'neutral';\n  lastSpoken = '';\n  lastSpeakTime = 0;\n}\n\nexport function processShoulderRolls(landmarks) {\n  const now = Date.now();\n\n  // Landmarks for shoulders\n  const leftShoulder = landmarks[11]; // LEFT\n  const rightShoulder = landmarks[12]; // RIGHT\n  const leftEar = landmarks[7];\n  const rightEar = landmarks[8];\n\n  if (!leftShoulder || !rightShoulder || !leftEar || !rightEar) {\n    return { speak: 'Please align your shoulders and ears in front of camera.' };\n  }\n\n  const deltaYLeft = leftShoulder.y - leftEar.y;\n  const deltaYRight = rightShoulder.y - rightEar.y;\n\n  // Thresholds for shoulder lift\n  const liftThreshold = 0.08;\n  const dropThreshold = 0.15;\n\n  if (deltaYLeft < liftThreshold && deltaYRight > dropThreshold && prevState === 'neutral') {\n    prevState = 'leftUp';\n    return { speak: 'Left shoulder up' };\n  }\n\n  if (deltaYRight < liftThreshold && deltaYLeft > dropThreshold && prevState === 'neutral') {\n    prevState = 'rightUp';\n    return { speak: 'Right shoulder up' };\n  }\n\n  if (prevState === 'leftUp' && deltaYLeft > dropThreshold) {\n    prevState = 'neutral';\n    return { speak: 'Left roll complete', rep: 1 };\n  }\n\n  if (prevState === 'rightUp' && deltaYRight > dropThreshold) {\n    prevState = 'neutral';\n    return { speak: 'Right roll complete', rep: 1 };\n  }\n\n  if (now - lastSpeakTime > 4000 && prevState === 'neutral') {\n    lastSpeakTime = now;\n    return { speak: 'Roll your shoulders one by one' };\n  }\n\n  return null;\n}\n"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAG,SAAS;AACzB,IAAIC,UAAU,GAAG,EAAE;AACnB,IAAIC,aAAa,GAAG,CAAC;AAErB,OAAO,SAASC,kBAAkBA,CAAA,EAAG;EACnCH,SAAS,GAAG,SAAS;EACrBC,UAAU,GAAG,EAAE;EACfC,aAAa,GAAG,CAAC;AACnB;AAEA,OAAO,SAASE,oBAAoBA,CAACC,SAAS,EAAE;EAC9C,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;;EAEtB;EACA,MAAME,YAAY,GAAGH,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;EACpC,MAAMI,aAAa,GAAGJ,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;EACrC,MAAMK,OAAO,GAAGL,SAAS,CAAC,CAAC,CAAC;EAC5B,MAAMM,QAAQ,GAAGN,SAAS,CAAC,CAAC,CAAC;EAE7B,IAAI,CAACG,YAAY,IAAI,CAACC,aAAa,IAAI,CAACC,OAAO,IAAI,CAACC,QAAQ,EAAE;IAC5D,OAAO;MAAEC,KAAK,EAAE;IAA2D,CAAC;EAC9E;EAEA,MAAMC,UAAU,GAAGL,YAAY,CAACM,CAAC,GAAGJ,OAAO,CAACI,CAAC;EAC7C,MAAMC,WAAW,GAAGN,aAAa,CAACK,CAAC,GAAGH,QAAQ,CAACG,CAAC;;EAEhD;EACA,MAAME,aAAa,GAAG,IAAI;EAC1B,MAAMC,aAAa,GAAG,IAAI;EAE1B,IAAIJ,UAAU,GAAGG,aAAa,IAAID,WAAW,GAAGE,aAAa,IAAIjB,SAAS,KAAK,SAAS,EAAE;IACxFA,SAAS,GAAG,QAAQ;IACpB,OAAO;MAAEY,KAAK,EAAE;IAAmB,CAAC;EACtC;EAEA,IAAIG,WAAW,GAAGC,aAAa,IAAIH,UAAU,GAAGI,aAAa,IAAIjB,SAAS,KAAK,SAAS,EAAE;IACxFA,SAAS,GAAG,SAAS;IACrB,OAAO;MAAEY,KAAK,EAAE;IAAoB,CAAC;EACvC;EAEA,IAAIZ,SAAS,KAAK,QAAQ,IAAIa,UAAU,GAAGI,aAAa,EAAE;IACxDjB,SAAS,GAAG,SAAS;IACrB,OAAO;MAAEY,KAAK,EAAE,oBAAoB;MAAEM,GAAG,EAAE;IAAE,CAAC;EAChD;EAEA,IAAIlB,SAAS,KAAK,SAAS,IAAIe,WAAW,GAAGE,aAAa,EAAE;IAC1DjB,SAAS,GAAG,SAAS;IACrB,OAAO;MAAEY,KAAK,EAAE,qBAAqB;MAAEM,GAAG,EAAE;IAAE,CAAC;EACjD;EAEA,IAAIZ,GAAG,GAAGJ,aAAa,GAAG,IAAI,IAAIF,SAAS,KAAK,SAAS,EAAE;IACzDE,aAAa,GAAGI,GAAG;IACnB,OAAO;MAAEM,KAAK,EAAE;IAAiC,CAAC;EACpD;EAEA,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}