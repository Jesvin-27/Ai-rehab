{"ast":null,"code":"/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { EluGrad } from '@tensorflow/tfjs-core';\nimport { BinaryOpType } from '../binary_op_util';\nimport { BinaryOpProgram } from '../binary_op_webgpu';\nexport const eluGrad = args => {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    dy,\n    y\n  } = inputs;\n  const program = new BinaryOpProgram(BinaryOpType.ELU_DER, dy.shape, y.shape);\n  return backend.runWebGPUProgram(program, [dy, y], dy.dtype);\n};\nexport const eluGradConfig = {\n  kernelName: EluGrad,\n  backendName: 'webgpu',\n  kernelFunc: eluGrad\n};","map":{"version":3,"names":["EluGrad","BinaryOpType","BinaryOpProgram","eluGrad","args","inputs","backend","dy","y","program","ELU_DER","shape","runWebGPUProgram","dtype","eluGradConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/tfjs-backend-webgpu/src/kernels/EluGrad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {EluGrad, EluGradInputs, KernelConfig, KernelFunc, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {WebGPUBackend} from '../backend_webgpu';\nimport {BinaryOpType} from '../binary_op_util';\nimport {BinaryOpProgram} from '../binary_op_webgpu';\n\nexport const eluGrad =\n    (args: {inputs: EluGradInputs, backend: WebGPUBackend}): TensorInfo => {\n      const {inputs, backend} = args;\n      const {dy, y} = inputs;\n\n      const program =\n          new BinaryOpProgram(BinaryOpType.ELU_DER, dy.shape, y.shape);\n      return backend.runWebGPUProgram(program, [dy, y], dy.dtype);\n    };\n\nexport const eluGradConfig: KernelConfig = {\n  kernelName: EluGrad,\n  backendName: 'webgpu',\n  kernelFunc: eluGrad as unknown as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQA,OAAO,QAA4D,uBAAuB;AAGlG,SAAQC,YAAY,QAAO,mBAAmB;AAC9C,SAAQC,eAAe,QAAO,qBAAqB;AAEnD,OAAO,MAAMC,OAAO,GACfC,IAAqD,IAAgB;EACpE,MAAM;IAACC,MAAM;IAAEC;EAAO,CAAC,GAAGF,IAAI;EAC9B,MAAM;IAACG,EAAE;IAAEC;EAAC,CAAC,GAAGH,MAAM;EAEtB,MAAMI,OAAO,GACT,IAAIP,eAAe,CAACD,YAAY,CAACS,OAAO,EAAEH,EAAE,CAACI,KAAK,EAAEH,CAAC,CAACG,KAAK,CAAC;EAChE,OAAOL,OAAO,CAACM,gBAAgB,CAACH,OAAO,EAAE,CAACF,EAAE,EAAEC,CAAC,CAAC,EAAED,EAAE,CAACM,KAAK,CAAC;AAC7D,CAAC;AAEL,OAAO,MAAMC,aAAa,GAAiB;EACzCC,UAAU,EAAEf,OAAO;EACnBgB,WAAW,EAAE,QAAQ;EACrBC,UAAU,EAAEd;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}