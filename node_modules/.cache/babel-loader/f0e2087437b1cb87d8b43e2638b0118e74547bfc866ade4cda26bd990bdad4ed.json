{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LeakyRelu } from '@tensorflow/tfjs-core';\nimport { UnaryOpType } from '../unary_op_util';\nimport { UnaryOpProgram } from '../unary_op_webgpu';\nexport function leakyRelu(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    alpha\n  } = attrs;\n  const uniformData = [{\n    type: 'float32',\n    data: [alpha]\n  }];\n  const program = new UnaryOpProgram(x.shape, UnaryOpType.LEAKYRELU, 'alpha : f32,');\n  return backend.runWebGPUProgram(program, [x], 'float32', uniformData);\n}\nexport const leakyReluConfig = {\n  kernelName: LeakyRelu,\n  backendName: 'webgpu',\n  kernelFunc: leakyRelu\n};","map":{"version":3,"names":["LeakyRelu","UnaryOpType","UnaryOpProgram","leakyRelu","args","inputs","backend","attrs","x","alpha","uniformData","type","data","program","shape","LEAKYRELU","runWebGPUProgram","leakyReluConfig","kernelName","backendName","kernelFunc"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/tfjs-backend-webgpu/src/kernels/LeakyRelu.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, LeakyRelu, LeakyReluAttrs, LeakyReluInputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {WebGPUBackend} from '../backend_webgpu';\nimport {UnaryOpType} from '../unary_op_util';\nimport {UnaryOpProgram} from '../unary_op_webgpu';\n\nexport function leakyRelu(args: {\n  inputs: LeakyReluInputs,\n  backend: WebGPUBackend,\n  attrs: LeakyReluAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {alpha} = attrs;\n  const uniformData = [{type: 'float32', data: [alpha]}];\n  const program =\n      new UnaryOpProgram(x.shape, UnaryOpType.LEAKYRELU, 'alpha : f32,');\n  return backend.runWebGPUProgram(program, [x], 'float32', uniformData);\n}\n\nexport const leakyReluConfig: KernelConfig = {\n  kernelName: LeakyRelu,\n  backendName: 'webgpu',\n  kernelFunc: leakyRelu as unknown as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,SAAS,QAAoD,uBAAuB;AAGtH,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,cAAc,QAAO,oBAAoB;AAEjD,OAAM,SAAUC,SAASA,CAACC,IAIzB;EACC,MAAM;IAACC,MAAM;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGH,IAAI;EACrC,MAAM;IAACI;EAAC,CAAC,GAAGH,MAAM;EAClB,MAAM;IAACI;EAAK,CAAC,GAAGF,KAAK;EACrB,MAAMG,WAAW,GAAG,CAAC;IAACC,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE,CAACH,KAAK;EAAC,CAAC,CAAC;EACtD,MAAMI,OAAO,GACT,IAAIX,cAAc,CAACM,CAAC,CAACM,KAAK,EAAEb,WAAW,CAACc,SAAS,EAAE,cAAc,CAAC;EACtE,OAAOT,OAAO,CAACU,gBAAgB,CAACH,OAAO,EAAE,CAACL,CAAC,CAAC,EAAE,SAAS,EAAEE,WAAW,CAAC;AACvE;AAEA,OAAO,MAAMO,eAAe,GAAiB;EAC3CC,UAAU,EAAElB,SAAS;EACrBmB,WAAW,EAAE,QAAQ;EACrBC,UAAU,EAAEjB;CACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}