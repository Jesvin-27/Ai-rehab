{"ast":null,"code":"// src/exercises/ChairSquats.js\n\nlet previousCorrect = false;\nlet repCount = 0;\nexport function processChairSquat(pose) {\n  if (!pose || !pose.keypoints || !Array.isArray(pose.keypoints)) {\n    return {\n      isCorrect: false,\n      count: repCount,\n      feedback: 'No pose detected'\n    };\n  }\n  const keypoints = pose.keypoints;\n  const leftKnee = keypoints.find(k => k.name === 'left_knee');\n  const rightKnee = keypoints.find(k => k.name === 'right_knee');\n  const leftHip = keypoints.find(k => k.name === 'left_hip');\n  if (!leftKnee || !rightKnee || !leftHip) {\n    return {\n      isCorrect: false,\n      count: repCount,\n      feedback: 'Pose incomplete'\n    };\n  }\n  const kneeBent = leftKnee.y > leftHip.y;\n  if (kneeBent && !previousCorrect) {\n    previousCorrect = true;\n    repCount++;\n    return {\n      isCorrect: true,\n      count: repCount,\n      feedback: 'Posture correct'\n    };\n  }\n  if (!kneeBent && previousCorrect) {\n    previousCorrect = false;\n  }\n  return {\n    isCorrect: kneeBent,\n    count: repCount,\n    feedback: kneeBent ? 'Posture correct' : 'Posture incorrect'\n  };\n}\nexport function resetChairSquat() {\n  previousCorrect = false;\n  repCount = 0;\n}","map":{"version":3,"names":["previousCorrect","repCount","processChairSquat","pose","keypoints","Array","isArray","isCorrect","count","feedback","leftKnee","find","k","name","rightKnee","leftHip","kneeBent","y","resetChairSquat"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/exercises/ChairSquats.js"],"sourcesContent":["// src/exercises/ChairSquats.js\n\nlet previousCorrect = false;\nlet repCount = 0;\n\nexport function processChairSquat(pose) {\n  if (!pose || !pose.keypoints || !Array.isArray(pose.keypoints)) {\n    return { isCorrect: false, count: repCount, feedback: 'No pose detected' };\n  }\n\n  const keypoints = pose.keypoints;\n\n  const leftKnee = keypoints.find((k) => k.name === 'left_knee');\n  const rightKnee = keypoints.find((k) => k.name === 'right_knee');\n  const leftHip = keypoints.find((k) => k.name === 'left_hip');\n\n  if (!leftKnee || !rightKnee || !leftHip) {\n    return { isCorrect: false, count: repCount, feedback: 'Pose incomplete' };\n  }\n\n  const kneeBent = leftKnee.y > leftHip.y;\n\n  if (kneeBent && !previousCorrect) {\n    previousCorrect = true;\n    repCount++;\n    return { isCorrect: true, count: repCount, feedback: 'Posture correct' };\n  }\n\n  if (!kneeBent && previousCorrect) {\n    previousCorrect = false;\n  }\n\n  return {\n    isCorrect: kneeBent,\n    count: repCount,\n    feedback: kneeBent ? 'Posture correct' : 'Posture incorrect',\n  };\n}\n\nexport function resetChairSquat() {\n  previousCorrect = false;\n  repCount = 0;\n}\n"],"mappings":"AAAA;;AAEA,IAAIA,eAAe,GAAG,KAAK;AAC3B,IAAIC,QAAQ,GAAG,CAAC;AAEhB,OAAO,SAASC,iBAAiBA,CAACC,IAAI,EAAE;EACtC,IAAI,CAACA,IAAI,IAAI,CAACA,IAAI,CAACC,SAAS,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,IAAI,CAACC,SAAS,CAAC,EAAE;IAC9D,OAAO;MAAEG,SAAS,EAAE,KAAK;MAAEC,KAAK,EAAEP,QAAQ;MAAEQ,QAAQ,EAAE;IAAmB,CAAC;EAC5E;EAEA,MAAML,SAAS,GAAGD,IAAI,CAACC,SAAS;EAEhC,MAAMM,QAAQ,GAAGN,SAAS,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAK,WAAW,CAAC;EAC9D,MAAMC,SAAS,GAAGV,SAAS,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAK,YAAY,CAAC;EAChE,MAAME,OAAO,GAAGX,SAAS,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAK,UAAU,CAAC;EAE5D,IAAI,CAACH,QAAQ,IAAI,CAACI,SAAS,IAAI,CAACC,OAAO,EAAE;IACvC,OAAO;MAAER,SAAS,EAAE,KAAK;MAAEC,KAAK,EAAEP,QAAQ;MAAEQ,QAAQ,EAAE;IAAkB,CAAC;EAC3E;EAEA,MAAMO,QAAQ,GAAGN,QAAQ,CAACO,CAAC,GAAGF,OAAO,CAACE,CAAC;EAEvC,IAAID,QAAQ,IAAI,CAAChB,eAAe,EAAE;IAChCA,eAAe,GAAG,IAAI;IACtBC,QAAQ,EAAE;IACV,OAAO;MAAEM,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAEP,QAAQ;MAAEQ,QAAQ,EAAE;IAAkB,CAAC;EAC1E;EAEA,IAAI,CAACO,QAAQ,IAAIhB,eAAe,EAAE;IAChCA,eAAe,GAAG,KAAK;EACzB;EAEA,OAAO;IACLO,SAAS,EAAES,QAAQ;IACnBR,KAAK,EAAEP,QAAQ;IACfQ,QAAQ,EAAEO,QAAQ,GAAG,iBAAiB,GAAG;EAC3C,CAAC;AACH;AAEA,OAAO,SAASE,eAAeA,CAAA,EAAG;EAChClB,eAAe,GAAG,KAAK;EACvBC,QAAQ,GAAG,CAAC;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}