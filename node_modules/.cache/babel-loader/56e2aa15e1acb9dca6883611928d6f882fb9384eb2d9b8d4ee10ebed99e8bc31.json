{"ast":null,"code":"var _jsxFileName = \"/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/StatsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { db, auth } from '../firebase';\nimport { collection, query, where, orderBy, getDocs } from 'firebase/firestore';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatsPage = ({\n  exerciseName = 'Chair Squats'\n}) => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const user = auth.currentUser;\n      if (!user) return;\n      const logsRef = collection(db, 'exercise_logs');\n      const q = query(logsRef, where('uid', '==', user.uid), where('exercise', '==', exerciseName), orderBy('timestamp', 'asc'));\n      const snapshot = await getDocs(q);\n      const raw = snapshot.docs.map(doc => doc.data());\n      const grouped = {};\n      raw.forEach(entry => {\n        const date = entry.timestamp.toDate().toLocaleDateString();\n        grouped[date] = (grouped[date] || 0) + entry.reps;\n      });\n      const labels = Object.keys(grouped);\n      const data = Object.values(grouped);\n      setChartData({\n        labels,\n        datasets: [{\n          label: `${exerciseName} Reps`,\n          data,\n          borderColor: 'green',\n          tension: 0.3\n        }]\n      });\n    };\n    fetchData();\n  }, [exerciseName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 30\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [exerciseName, \" Progress\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), chartData ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading chart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 48\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(StatsPage, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = StatsPage;\nexport default StatsPage;\nvar _c;\n$RefreshReg$(_c, \"StatsPage\");","map":{"version":3,"names":["React","useEffect","useState","db","auth","collection","query","where","orderBy","getDocs","Line","jsxDEV","_jsxDEV","StatsPage","exerciseName","_s","chartData","setChartData","fetchData","user","currentUser","logsRef","q","uid","snapshot","raw","docs","map","doc","data","grouped","forEach","entry","date","timestamp","toDate","toLocaleDateString","reps","labels","Object","keys","values","datasets","label","borderColor","tension","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/StatsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { db, auth } from '../firebase';\nimport { collection, query, where, orderBy, getDocs } from 'firebase/firestore';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nconst StatsPage = ({ exerciseName = 'Chair Squats' }) => {\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const user = auth.currentUser;\n      if (!user) return;\n\n      const logsRef = collection(db, 'exercise_logs');\n      const q = query(\n        logsRef,\n        where('uid', '==', user.uid),\n        where('exercise', '==', exerciseName),\n        orderBy('timestamp', 'asc')\n      );\n\n      const snapshot = await getDocs(q);\n      const raw = snapshot.docs.map(doc => doc.data());\n\n      const grouped = {};\n      raw.forEach(entry => {\n        const date = entry.timestamp.toDate().toLocaleDateString();\n        grouped[date] = (grouped[date] || 0) + entry.reps;\n      });\n\n      const labels = Object.keys(grouped);\n      const data = Object.values(grouped);\n\n      setChartData({\n        labels,\n        datasets: [\n          {\n            label: `${exerciseName} Reps`,\n            data,\n            borderColor: 'green',\n            tension: 0.3,\n          }\n        ]\n      });\n    };\n\n    fetchData();\n  }, [exerciseName]);\n\n  return (\n    <div style={{ padding: 30 }}>\n      <h2>{exerciseName} Progress</h2>\n      {chartData ? <Line data={chartData} /> : <p>Loading chart...</p>}\n    </div>\n  );\n};\n\nexport default StatsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}