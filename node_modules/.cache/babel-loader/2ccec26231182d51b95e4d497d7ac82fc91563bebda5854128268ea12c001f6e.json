{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\nimport * as shared from '@tensorflow/tfjs-backend-cpu/dist/shared';\nconst {\n  addImpl: addImplCPU,\n  castImpl: castImplCPU,\n  ceilImpl: ceilImplCPU,\n  concatImpl: concatImplCPU,\n  equalImpl: equalImplCPU,\n  expImpl: expImplCPU,\n  expm1Impl: expm1ImplCPU,\n  floorImpl: floorImplCPU,\n  floorDivImpl: floorDivImplCPU,\n  gatherNdImpl: gatherNdImplCPU,\n  gatherV2Impl: gatherV2ImplCPU,\n  greaterEqualImpl: greaterEqualImplCPU,\n  greaterImpl: greaterImplCPU,\n  lessEqualImpl: lessEqualImplCPU,\n  lessImpl: lessImplCPU,\n  logImpl: logImplCPU,\n  maxImpl: maxImplCPU,\n  maximumImpl: maximumImplCPU,\n  minimumImpl: minimumImplCPU,\n  multiplyImpl: multiplyImplCPU,\n  negImpl: negImplCPU,\n  notEqualImpl: notEqualImplCPU,\n  prodImpl: prodImplCPU,\n  rangeImpl: rangeImplCPU,\n  rsqrtImpl: rsqrtImplCPU,\n  scatterImpl: scatterImplCPU,\n  simpleAbsImpl: simpleAbsImplCPU,\n  sliceImpl: sliceImplCPU,\n  stridedSliceImpl: stridedSliceImplCPU,\n  stringNGramsImpl: stringNGramsImplCPU,\n  subImpl: subImplCPU,\n  tileImpl: tileImplCPU,\n  topKImpl: topKImplCPU,\n  transposeImpl: transposeImplCPU,\n  uniqueImpl: uniqueImplCPU\n} = shared;\nexport { addImplCPU, castImplCPU, ceilImplCPU, concatImplCPU, equalImplCPU, expImplCPU, expm1ImplCPU, floorImplCPU, floorDivImplCPU, gatherNdImplCPU, gatherV2ImplCPU, greaterEqualImplCPU, greaterImplCPU, lessEqualImplCPU, lessImplCPU, logImplCPU, maxImplCPU, maximumImplCPU, minimumImplCPU, multiplyImplCPU, prodImplCPU, negImplCPU, notEqualImplCPU, scatterImplCPU, simpleAbsImplCPU, sliceImplCPU, stridedSliceImplCPU, stringNGramsImplCPU, subImplCPU, rangeImplCPU, rsqrtImplCPU, tileImplCPU, topKImplCPU, transposeImplCPU, uniqueImplCPU };","map":{"version":3,"names":["shared","addImpl","addImplCPU","castImpl","castImplCPU","ceilImpl","ceilImplCPU","concatImpl","concatImplCPU","equalImpl","equalImplCPU","expImpl","expImplCPU","expm1Impl","expm1ImplCPU","floorImpl","floorImplCPU","floorDivImpl","floorDivImplCPU","gatherNdImpl","gatherNdImplCPU","gatherV2Impl","gatherV2ImplCPU","greaterEqualImpl","greaterEqualImplCPU","greaterImpl","greaterImplCPU","lessEqualImpl","lessEqualImplCPU","lessImpl","lessImplCPU","logImpl","logImplCPU","maxImpl","maxImplCPU","maximumImpl","maximumImplCPU","minimumImpl","minimumImplCPU","multiplyImpl","multiplyImplCPU","negImpl","negImplCPU","notEqualImpl","notEqualImplCPU","prodImpl","prodImplCPU","rangeImpl","rangeImplCPU","rsqrtImpl","rsqrtImplCPU","scatterImpl","scatterImplCPU","simpleAbsImpl","simpleAbsImplCPU","sliceImpl","sliceImplCPU","stridedSliceImpl","stridedSliceImplCPU","stringNGramsImpl","stringNGramsImplCPU","subImpl","subImplCPU","tileImpl","tileImplCPU","topKImpl","topKImplCPU","transposeImpl","transposeImplCPU","uniqueImpl","uniqueImplCPU"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/tfjs-backend-webgpu/src/kernel_utils/shared.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\nimport * as shared from '@tensorflow/tfjs-backend-cpu/dist/shared';\n// tslint:disable-next-line: no-imports-from-dist\nimport {SimpleBinaryKernelImpl} from '@tensorflow/tfjs-backend-cpu/dist/shared';\n// tslint:disable-next-line: no-imports-from-dist\nimport {SimpleUnaryImpl} from '@tensorflow/tfjs-backend-cpu/dist/utils/unary_types';\n\nexport type SimpleBinaryKernelImplCPU = SimpleBinaryKernelImpl;\nexport type SimpleUnaryKernelImplCPU = SimpleUnaryImpl;\nconst {\n  addImpl: addImplCPU,\n  castImpl: castImplCPU,\n  ceilImpl: ceilImplCPU,\n  concatImpl: concatImplCPU,\n  equalImpl: equalImplCPU,\n  expImpl: expImplCPU,\n  expm1Impl: expm1ImplCPU,\n  floorImpl: floorImplCPU,\n  floorDivImpl: floorDivImplCPU,\n  gatherNdImpl: gatherNdImplCPU,\n  gatherV2Impl: gatherV2ImplCPU,\n  greaterEqualImpl: greaterEqualImplCPU,\n  greaterImpl: greaterImplCPU,\n  lessEqualImpl: lessEqualImplCPU,\n  lessImpl: lessImplCPU,\n  logImpl: logImplCPU,\n  maxImpl: maxImplCPU,\n  maximumImpl: maximumImplCPU,\n  minimumImpl: minimumImplCPU,\n  multiplyImpl: multiplyImplCPU,\n  negImpl: negImplCPU,\n  notEqualImpl: notEqualImplCPU,\n  prodImpl: prodImplCPU,\n  rangeImpl: rangeImplCPU,\n  rsqrtImpl: rsqrtImplCPU,\n  scatterImpl: scatterImplCPU,\n  simpleAbsImpl: simpleAbsImplCPU,\n  sliceImpl: sliceImplCPU,\n  stridedSliceImpl: stridedSliceImplCPU,\n  stringNGramsImpl: stringNGramsImplCPU,\n  subImpl: subImplCPU,\n  tileImpl: tileImplCPU,\n  topKImpl: topKImplCPU,\n  transposeImpl: transposeImplCPU,\n  uniqueImpl: uniqueImplCPU,\n} = shared;\n\nexport {\n  addImplCPU,\n  castImplCPU,\n  ceilImplCPU,\n  concatImplCPU,\n  equalImplCPU,\n  expImplCPU,\n  expm1ImplCPU,\n  floorImplCPU,\n  floorDivImplCPU,\n  gatherNdImplCPU,\n  gatherV2ImplCPU,\n  greaterEqualImplCPU,\n  greaterImplCPU,\n  lessEqualImplCPU,\n  lessImplCPU,\n  logImplCPU,\n  maxImplCPU,\n  maximumImplCPU,\n  minimumImplCPU,\n  multiplyImplCPU,\n  prodImplCPU,\n  negImplCPU,\n  notEqualImplCPU,\n  scatterImplCPU,\n  simpleAbsImplCPU,\n  sliceImplCPU,\n  stridedSliceImplCPU,\n  stringNGramsImplCPU,\n  subImplCPU,\n  rangeImplCPU,\n  rsqrtImplCPU,\n  tileImplCPU,\n  topKImplCPU,\n  transposeImplCPU,\n  uniqueImplCPU,\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA,OAAO,KAAKA,MAAM,MAAM,0CAA0C;AAQlE,MAAM;EACJC,OAAO,EAAEC,UAAU;EACnBC,QAAQ,EAAEC,WAAW;EACrBC,QAAQ,EAAEC,WAAW;EACrBC,UAAU,EAAEC,aAAa;EACzBC,SAAS,EAAEC,YAAY;EACvBC,OAAO,EAAEC,UAAU;EACnBC,SAAS,EAAEC,YAAY;EACvBC,SAAS,EAAEC,YAAY;EACvBC,YAAY,EAAEC,eAAe;EAC7BC,YAAY,EAAEC,eAAe;EAC7BC,YAAY,EAAEC,eAAe;EAC7BC,gBAAgB,EAAEC,mBAAmB;EACrCC,WAAW,EAAEC,cAAc;EAC3BC,aAAa,EAAEC,gBAAgB;EAC/BC,QAAQ,EAAEC,WAAW;EACrBC,OAAO,EAAEC,UAAU;EACnBC,OAAO,EAAEC,UAAU;EACnBC,WAAW,EAAEC,cAAc;EAC3BC,WAAW,EAAEC,cAAc;EAC3BC,YAAY,EAAEC,eAAe;EAC7BC,OAAO,EAAEC,UAAU;EACnBC,YAAY,EAAEC,eAAe;EAC7BC,QAAQ,EAAEC,WAAW;EACrBC,SAAS,EAAEC,YAAY;EACvBC,SAAS,EAAEC,YAAY;EACvBC,WAAW,EAAEC,cAAc;EAC3BC,aAAa,EAAEC,gBAAgB;EAC/BC,SAAS,EAAEC,YAAY;EACvBC,gBAAgB,EAAEC,mBAAmB;EACrCC,gBAAgB,EAAEC,mBAAmB;EACrCC,OAAO,EAAEC,UAAU;EACnBC,QAAQ,EAAEC,WAAW;EACrBC,QAAQ,EAAEC,WAAW;EACrBC,aAAa,EAAEC,gBAAgB;EAC/BC,UAAU,EAAEC;AAAa,CAC1B,GAAGtE,MAAM;AAEV,SACEE,UAAU,EACVE,WAAW,EACXE,WAAW,EACXE,aAAa,EACbE,YAAY,EACZE,UAAU,EACVE,YAAY,EACZE,YAAY,EACZE,eAAe,EACfE,eAAe,EACfE,eAAe,EACfE,mBAAmB,EACnBE,cAAc,EACdE,gBAAgB,EAChBE,WAAW,EACXE,UAAU,EACVE,UAAU,EACVE,cAAc,EACdE,cAAc,EACdE,eAAe,EACfM,WAAW,EACXJ,UAAU,EACVE,eAAe,EACfQ,cAAc,EACdE,gBAAgB,EAChBE,YAAY,EACZE,mBAAmB,EACnBE,mBAAmB,EACnBE,UAAU,EACVd,YAAY,EACZE,YAAY,EACZc,WAAW,EACXE,WAAW,EACXE,gBAAgB,EAChBE,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}