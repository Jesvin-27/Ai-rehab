{"ast":null,"code":"var _jsxFileName = \"/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/StatsPage.js\",\n  _s = $RefreshSig$();\n// src/pages/StatsPage.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { collection, query, where, orderBy, getDocs } from 'firebase/firestore';\nimport { db, auth } from '../firebase';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\nconst StatsPage = () => {\n  _s();\n  const {\n    exerciseName\n  } = useParams();\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchStats = async () => {\n      const user = auth.currentUser;\n      if (!user) {\n        console.warn('No authenticated user');\n        return;\n      }\n      try {\n        const q = query(collection(db, 'exercise_logs'), where('uid', '==', user.uid), where('exercise', '==', exerciseName.trim()), orderBy('timestamp'));\n        const snapshot = await getDocs(q);\n        const docs = snapshot.docs.map(doc => doc.data());\n        console.log('Fetched stats:', docs);\n        if (docs.length === 0) {\n          setChartData(null);\n        } else {\n          const dates = docs.map(doc => doc.timestamp.toDate().toLocaleDateString());\n          const reps = docs.map(doc => doc.reps);\n          setChartData({\n            labels: dates,\n            datasets: [{\n              label: `${exerciseName} Progress`,\n              data: reps,\n              borderColor: 'rgb(75, 192, 192)',\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\n              fill: true,\n              tension: 0.3\n            }]\n          });\n        }\n      } catch (err) {\n        console.error('Error fetching stats:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStats();\n  }, [exerciseName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: [\"Your Progress: \", exerciseName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : chartData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto bg-white dark:bg-gray-800 rounded-lg shadow p-4\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No progress data available for \", exerciseName, \" yet.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(StatsPage, \"JiIotUlPV1U8Sh+8dry6e5SIc90=\", false, function () {\n  return [useParams];\n});\n_c = StatsPage;\nexport default StatsPage;\nvar _c;\n$RefreshReg$(_c, \"StatsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","collection","query","where","orderBy","getDocs","db","auth","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","StatsPage","_s","exerciseName","chartData","setChartData","loading","setLoading","fetchStats","user","currentUser","console","warn","q","uid","trim","snapshot","docs","map","doc","data","log","length","dates","timestamp","toDate","toLocaleDateString","reps","labels","datasets","label","borderColor","backgroundColor","fill","tension","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/StatsPage.js"],"sourcesContent":["// src/pages/StatsPage.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { collection, query, where, orderBy, getDocs } from 'firebase/firestore';\nimport { db, auth } from '../firebase';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  LineElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\n\nconst StatsPage = () => {\n  const { exerciseName } = useParams();\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      const user = auth.currentUser;\n      if (!user) {\n        console.warn('No authenticated user');\n        return;\n      }\n\n      try {\n        const q = query(\n          collection(db, 'exercise_logs'),\n          where('uid', '==', user.uid),\n          where('exercise', '==', exerciseName.trim()),\n          orderBy('timestamp')\n        );\n\n        const snapshot = await getDocs(q);\n        const docs = snapshot.docs.map(doc => doc.data());\n\n        console.log('Fetched stats:', docs);\n\n        if (docs.length === 0) {\n          setChartData(null);\n        } else {\n          const dates = docs.map(doc => doc.timestamp.toDate().toLocaleDateString());\n          const reps = docs.map(doc => doc.reps);\n\n          setChartData({\n            labels: dates,\n            datasets: [\n              {\n                label: `${exerciseName} Progress`,\n                data: reps,\n                borderColor: 'rgb(75, 192, 192)',\n                backgroundColor: 'rgba(75, 192, 192, 0.2)',\n                fill: true,\n                tension: 0.3,\n              },\n            ],\n          });\n        }\n      } catch (err) {\n        console.error('Error fetching stats:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchStats();\n  }, [exerciseName]);\n\n  return (\n    <div className=\"p-6 text-center\">\n      <h2 className=\"text-2xl font-semibold mb-4\">\n        Your Progress: {exerciseName}\n      </h2>\n\n      {loading ? (\n        <p>Loading data...</p>\n      ) : chartData ? (\n        <div className=\"max-w-3xl mx-auto bg-white dark:bg-gray-800 rounded-lg shadow p-4\">\n          <Line data={chartData} />\n        </div>\n      ) : (\n        <p>No progress data available for {exerciseName} yet.</p>\n      )}\n    </div>\n  );\n};\n\nexport default StatsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}