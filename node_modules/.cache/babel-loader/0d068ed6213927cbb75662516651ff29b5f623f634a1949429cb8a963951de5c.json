{"ast":null,"code":"var _jsxFileName = \"/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ExercisePage.css';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posedetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exerciseMap = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls']\n};\nconst ExercisePage = () => {\n  _s();\n  const {\n    type\n  } = useParams();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const detectorRef = useRef(null);\n  const requestRef = useRef(null);\n  const synthRef = useRef(window.speechSynthesis);\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const exercises = exerciseMap[type] || [];\n  useEffect(() => {\n    tf.setBackend('webgl');\n    return () => stopScan(); // cleanup\n  }, []);\n  const speak = text => {\n    if (!synthRef.current) return;\n    const utterance = new SpeechSynthesisUtterance(text);\n    synthRef.current.cancel(); // stop previous\n    synthRef.current.speak(utterance);\n  };\n  const runDetection = async () => {\n    var _poses$;\n    if (!videoRef.current || !canvasRef.current || !detectorRef.current) return;\n    const poses = await detectorRef.current.estimatePoses(videoRef.current);\n    drawKeypoints(poses);\n    if ((_poses$ = poses[0]) !== null && _poses$ !== void 0 && _poses$.keypoints) {\n      const score = poses[0].keypoints.reduce((acc, kp) => acc + kp.score, 0) / poses[0].keypoints.length;\n      if (score < 0.4) {\n        speak('Posture not correct');\n      } else {\n        speak('Posture good');\n      }\n    }\n    requestRef.current = requestAnimationFrame(runDetection);\n  };\n  const drawKeypoints = poses => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    poses.forEach(pose => {\n      pose.keypoints.forEach(kp => {\n        if (kp.score > 0.4) {\n          ctx.beginPath();\n          ctx.arc(kp.x, kp.y, 5, 0, 2 * Math.PI);\n          ctx.fillStyle = 'lime';\n          ctx.fill();\n        }\n      });\n    });\n  };\n  const startScan = async () => {\n    if (!selectedExercise) return alert('Please select an exercise first');\n    setIsScanning(true);\n    speak(`Starting ${selectedExercise} scan`);\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true\n    });\n    videoRef.current.srcObject = stream;\n    await videoRef.current.play();\n    const detector = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n      modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING\n    });\n    detectorRef.current = detector;\n    runDetection();\n  };\n  const stopScan = () => {\n    var _videoRef$current, _canvasRef$current;\n    setIsScanning(false);\n    if (requestRef.current) cancelAnimationFrame(requestRef.current);\n    if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n    }\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d');\n    ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    speak('Scan stopped');\n  };\n  const saveData = () => {\n    speak('Exercise data saved');\n    console.log('Saving data...');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"top-bar\",\n      children: [\"AI-Rehab \\u2013 \", selectedExercise || 'Select Exercise']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"left-panel\",\n        children: exercises.map(exercise => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `exercise-button ${selectedExercise === exercise ? 'active' : ''}`,\n          onClick: () => setSelectedExercise(exercise),\n          children: exercise\n        }, exercise, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"content-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canvas-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            className: \"video-feed\",\n            width: \"640\",\n            height: \"480\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"canvas-overlay\",\n            width: \"640\",\n            height: \"480\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn start\",\n            onClick: startScan,\n            disabled: isScanning,\n            children: \"Start Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn stop\",\n            onClick: stopScan,\n            disabled: !isScanning,\n            children: \"Stop Scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn save\",\n            onClick: saveData,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(ExercisePage, \"i/kSIC7wJsp0/OSyp6wqzintKO0=\", false, function () {\n  return [useParams];\n});\n_c = ExercisePage;\nexport default ExercisePage;\nvar _c;\n$RefreshReg$(_c, \"ExercisePage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","tf","posedetection","jsxDEV","_jsxDEV","exerciseMap","cardiac","neuro","ortho","ExercisePage","_s","type","videoRef","canvasRef","detectorRef","requestRef","synthRef","window","speechSynthesis","selectedExercise","setSelectedExercise","isScanning","setIsScanning","exercises","setBackend","stopScan","speak","text","current","utterance","SpeechSynthesisUtterance","cancel","runDetection","_poses$","poses","estimatePoses","drawKeypoints","keypoints","score","reduce","acc","kp","length","requestAnimationFrame","ctx","getContext","clearRect","width","height","forEach","pose","beginPath","arc","x","y","Math","PI","fillStyle","fill","startScan","alert","stream","navigator","mediaDevices","getUserMedia","video","srcObject","play","detector","createDetector","SupportedModels","MoveNet","modelType","movenet","SINGLEPOSE_LIGHTNING","_videoRef$current","_canvasRef$current","cancelAnimationFrame","getTracks","track","stop","saveData","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","exercise","onClick","ref","disabled","_c","$RefreshReg$"],"sources":["/Users/jesvinblazegmail.com/PycharmProjects/Ai-rehab/src/pages/ExercisePage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ExercisePage.css';\nimport * as tf from '@tensorflow/tfjs';\nimport * as posedetection from '@tensorflow-models/pose-detection';\nimport '@tensorflow/tfjs-backend-webgl';\n\nconst exerciseMap = {\n  cardiac: ['Chair Marching', 'Leg Extensions', 'Step-Ups'],\n  neuro: ['Balance Training', 'Gait Training', 'Coordination'],\n  ortho: ['Chair Squats', 'Leg Raise', 'Shoulder Rolls'],\n};\n\nconst ExercisePage = () => {\n  const { type } = useParams();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const detectorRef = useRef(null);\n  const requestRef = useRef(null);\n  const synthRef = useRef(window.speechSynthesis);\n\n  const [selectedExercise, setSelectedExercise] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n\n  const exercises = exerciseMap[type] || [];\n\n  useEffect(() => {\n    tf.setBackend('webgl');\n    return () => stopScan(); // cleanup\n  }, []);\n\n  const speak = (text) => {\n    if (!synthRef.current) return;\n    const utterance = new SpeechSynthesisUtterance(text);\n    synthRef.current.cancel(); // stop previous\n    synthRef.current.speak(utterance);\n  };\n\n  const runDetection = async () => {\n    if (!videoRef.current || !canvasRef.current || !detectorRef.current) return;\n\n    const poses = await detectorRef.current.estimatePoses(videoRef.current);\n    drawKeypoints(poses);\n\n    if (poses[0]?.keypoints) {\n      const score = poses[0].keypoints.reduce((acc, kp) => acc + kp.score, 0) / poses[0].keypoints.length;\n      if (score < 0.4) {\n        speak('Posture not correct');\n      } else {\n        speak('Posture good');\n      }\n    }\n\n    requestRef.current = requestAnimationFrame(runDetection);\n  };\n\n  const drawKeypoints = (poses) => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    poses.forEach((pose) => {\n      pose.keypoints.forEach((kp) => {\n        if (kp.score > 0.4) {\n          ctx.beginPath();\n          ctx.arc(kp.x, kp.y, 5, 0, 2 * Math.PI);\n          ctx.fillStyle = 'lime';\n          ctx.fill();\n        }\n      });\n    });\n  };\n\n  const startScan = async () => {\n    if (!selectedExercise) return alert('Please select an exercise first');\n    setIsScanning(true);\n    speak(`Starting ${selectedExercise} scan`);\n\n    const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n    videoRef.current.srcObject = stream;\n    await videoRef.current.play();\n\n    const detector = await posedetection.createDetector(posedetection.SupportedModels.MoveNet, {\n      modelType: posedetection.movenet.modelType.SINGLEPOSE_LIGHTNING,\n    });\n    detectorRef.current = detector;\n\n    runDetection();\n  };\n\n  const stopScan = () => {\n    setIsScanning(false);\n    if (requestRef.current) cancelAnimationFrame(requestRef.current);\n    if (videoRef.current?.srcObject) {\n      videoRef.current.srcObject.getTracks().forEach((track) => track.stop());\n    }\n    const ctx = canvasRef.current?.getContext('2d');\n    ctx?.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    speak('Scan stopped');\n  };\n\n  const saveData = () => {\n    speak('Exercise data saved');\n    console.log('Saving data...');\n  };\n\n  return (\n    <div className=\"exercise-container\">\n      <header className=\"top-bar\">AI-Rehab – {selectedExercise || 'Select Exercise'}</header>\n      <div className=\"main-layout\">\n        <aside className=\"left-panel\">\n          {exercises.map((exercise) => (\n            <button\n              key={exercise}\n              className={`exercise-button ${selectedExercise === exercise ? 'active' : ''}`}\n              onClick={() => setSelectedExercise(exercise)}\n            >\n              {exercise}\n            </button>\n          ))}\n        </aside>\n\n        <main className=\"content-panel\">\n          <div className=\"canvas-area\">\n            <video ref={videoRef} className=\"video-feed\" width=\"640\" height=\"480\" />\n            <canvas ref={canvasRef} className=\"canvas-overlay\" width=\"640\" height=\"480\" />\n          </div>\n\n          <div className=\"controls\">\n            <button className=\"control-btn start\" onClick={startScan} disabled={isScanning}>\n              Start Scan\n            </button>\n            <button className=\"control-btn stop\" onClick={stopScan} disabled={!isScanning}>\n              Stop Scan\n            </button>\n            <button className=\"control-btn save\" onClick={saveData}>\n              Save\n            </button>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default ExercisePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}